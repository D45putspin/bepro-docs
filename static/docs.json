{
  "docs": [
    {
      "comment": "/**\n * @typedef {Object} Application~Optional\n * @property {string} web3Connection Web3 Connection String (Ex : https://data-seed-prebsc-1-s1.binance.org:8545)\n * @property {string} privateKey Private key (0x....) used for server side use\n */",
      "meta": {
        "filename": "Application.js",
        "lineno": 31,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {}
      },
      "kind": "typedef",
      "name": "Optional",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Web3 Connection String (Ex : https://data-seed-prebsc-1-s1.binance.org:8545)",
          "name": "web3Connection"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Private key (0x....) used for server side use",
          "name": "privateKey"
        }
      ],
      "memberof": "Application",
      "longname": "Application~Optional",
      "scope": "inner",
      "___id": "T000002R000013",
      "___s": true
    },
    {
      "comment": "/**\n * @typedef {Object} Application~Options\n * @property {boolean} [test=false] Automated Tests\n * @property {boolean} [localtest=false] Ganache Local Blockchain\n * @property {Application~Optional} [opt] Optional Chain Connection Object (Default ETH)\n */",
      "meta": {
        "filename": "Application.js",
        "lineno": 37,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {}
      },
      "kind": "typedef",
      "name": "Options",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "optional": true,
          "defaultvalue": false,
          "description": "Automated Tests",
          "name": "test"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "optional": true,
          "defaultvalue": false,
          "description": "Ganache Local Blockchain",
          "name": "localtest"
        },
        {
          "type": {
            "names": [
              "Application~Optional"
            ]
          },
          "optional": true,
          "description": "Optional Chain Connection Object (Default ETH)",
          "name": "opt"
        }
      ],
      "memberof": "Application",
      "longname": "Application~Options",
      "scope": "inner",
      "___id": "T000002R000014",
      "___s": true
    },
    {
      "comment": "/**\n * Application Object\n * @class Application\n * @param {Application~Options} options\n */",
      "meta": {
        "filename": "Application.js",
        "lineno": 44,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {}
      },
      "description": "Application Object",
      "kind": "class",
      "name": "Application",
      "params": [
        {
          "type": {
            "names": [
              "Application~Options"
            ]
          },
          "name": "options"
        }
      ],
      "longname": "Application",
      "scope": "global",
      "___id": "T000002R000015",
      "___s": true
    },
    {
      "comment": "/**\n   * Connect to Web3 injected in the constructor\n   * @function\n   * @throws {Error} Please Use an Ethereum Enabled Browser like Metamask or Coinbase Wallet\n   * @void\n   */",
      "meta": {
        "range": [
          2395,
          3193
        ],
        "filename": "Application.js",
        "lineno": 81,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000160",
          "name": "start",
          "type": "ClassProperty"
        }
      },
      "description": "Connect to Web3 injected in the constructor",
      "kind": "function",
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Please Use an Ethereum Enabled Browser like Metamask or Coinbase Wallet"
        }
      ],
      "tags": [
        {
          "originalTitle": "void",
          "title": "void",
          "text": ""
        }
      ],
      "name": "start",
      "longname": "Application#start",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000027",
      "___s": true
    },
    {
      "comment": "/**\n   * Login with Metamask/Web3 Wallet - substitutes start()\n   * @function\n   * @return {Promise<boolean>}\n   */",
      "meta": {
        "range": [
          3315,
          3667
        ],
        "filename": "Application.js",
        "lineno": 110,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000261",
          "name": "login",
          "type": "ClassProperty"
        }
      },
      "description": "Login with Metamask/Web3 Wallet - substitutes start()",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          }
        }
      ],
      "name": "login",
      "longname": "Application#login",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000033",
      "___s": true
    },
    {
      "comment": "/**\n   * Create a Exchange Contract\n   * @function\n   * @param {Object} params\n   * @param {Address} [params.contractAddress=null]\n   * @throws {Error}\n   * @return {ExchangeContract} ExchangeContract\n   */",
      "meta": {
        "range": [
          3880,
          4159
        ],
        "filename": "Application.js",
        "lineno": 135,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000312",
          "name": "getExchangeContract",
          "type": "ClassProperty"
        }
      },
      "description": "Create a Exchange Contract",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "name": "params.contractAddress"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          }
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "ExchangeContract"
            ]
          },
          "description": "ExchangeContract"
        }
      ],
      "name": "getExchangeContract",
      "longname": "Application#getExchangeContract",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000036",
      "___s": true
    },
    {
      "comment": "/**\n   * Create a OpenerRealFvr Object\n   * @function\n   * @param {Object} params\n   * @param {Address} [params.contractAddress=null]\n   * @param {Address} [params.tokenAddress=null]\n   * @return {OpenerRealFvr} OpenerRealFvr\n   */",
      "meta": {
        "range": [
          4397,
          4730
        ],
        "filename": "Application.js",
        "lineno": 155,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000351",
          "name": "getOpenRealFvrContract",
          "type": "ClassProperty"
        }
      },
      "description": "Create a OpenerRealFvr Object",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "name": "params.contractAddress"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "name": "params.tokenAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "OpenerRealFvr"
            ]
          },
          "description": "OpenerRealFvr"
        }
      ],
      "name": "getOpenRealFvrContract",
      "longname": "Application#getOpenRealFvrContract",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000041",
      "___s": true
    },
    {
      "comment": "/**\n   * Create a StakingContract Object\n   * @function\n   * @param {Object} params\n   * @param {Address} [params.contractAddress=null] (Opt) If it is deployed\n   * @param {Address} [params.tokenAddress=null] (Opt) If it is deployed\n   * @return {StakingContract} StakingContract\n   */",
      "meta": {
        "range": [
          5022,
          5353
        ],
        "filename": "Application.js",
        "lineno": 179,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000396",
          "name": "getStakingContract",
          "type": "ClassProperty"
        }
      },
      "description": "Create a StakingContract Object",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "(Opt) If it is deployed",
          "name": "params.contractAddress"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "(Opt) If it is deployed",
          "name": "params.tokenAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "StakingContract"
            ]
          },
          "description": "StakingContract"
        }
      ],
      "name": "getStakingContract",
      "longname": "Application#getStakingContract",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000048",
      "___s": true
    },
    {
      "comment": "/**\n   * Create a ERC20TokenLock Object\n   * @function\n   * @param {Object} params\n   * @param {Address} [params.contractAddress=null] (Opt) If it is deployed\n   * @param {Address} [params.tokenAddress=null] (Opt) If it is deployed\n   * @return {ERC20TokenLock} ERC20TokenLock\n   */",
      "meta": {
        "range": [
          5642,
          5971
        ],
        "filename": "Application.js",
        "lineno": 203,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000441",
          "name": "getERC20TokenLock",
          "type": "ClassProperty"
        }
      },
      "description": "Create a ERC20TokenLock Object",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "(Opt) If it is deployed",
          "name": "params.contractAddress"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "(Opt) If it is deployed",
          "name": "params.tokenAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "ERC20TokenLock"
            ]
          },
          "description": "ERC20TokenLock"
        }
      ],
      "name": "getERC20TokenLock",
      "longname": "Application#getERC20TokenLock",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000055",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Create a BEPRONetwork Object\n   * @param {Object} params\n   * @param {Address} params.contractAddress (Opt) If it is deployed\n   * @return {BEPRONetwork} BEPRONetwork\n   */",
      "meta": {
        "range": [
          6187,
          6512
        ],
        "filename": "Application.js",
        "lineno": 226,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000486",
          "name": "getBEPRONetwork",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Create a BEPRONetwork Object",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "(Opt) If it is deployed",
          "name": "params.contractAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "BEPRONetwork"
            ]
          },
          "description": "BEPRONetwork"
        }
      ],
      "name": "getBEPRONetwork",
      "longname": "Application#getBEPRONetwork",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000062",
      "___s": true
    },
    {
      "comment": "/**\n   * Create a ERC721Collectibles Object\n   * @function\n   * @param {Object} [params={}]\n   * @param {Address} [params.contractAddress=null] (Opt) If it is deployed\n   * @return {ERC721Collectibles} ERC721Collectibles\n   */",
      "meta": {
        "range": [
          6745,
          7028
        ],
        "filename": "Application.js",
        "lineno": 249,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000531",
          "name": "getERC721Collectibles",
          "type": "ClassProperty"
        }
      },
      "description": "Create a ERC721Collectibles Object",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "defaultvalue": "{}",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "(Opt) If it is deployed",
          "name": "params.contractAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "ERC721Collectibles"
            ]
          },
          "description": "ERC721Collectibles"
        }
      ],
      "name": "getERC721Collectibles",
      "longname": "Application#getERC721Collectibles",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000069",
      "___s": true
    },
    {
      "comment": "/**\n   * Create a ERC20Contract Object\n   * @function\n   * @param {Object} params\n   * @param {Address} [params.contractAddress=null] (Opt) If it is deployed\n   * @return {ERC20Contract} ERC20Contract\n   */",
      "meta": {
        "range": [
          7241,
          7509
        ],
        "filename": "Application.js",
        "lineno": 268,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000570",
          "name": "getERC20Contract",
          "type": "ClassProperty"
        }
      },
      "description": "Create a ERC20Contract Object",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "(Opt) If it is deployed",
          "name": "params.contractAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "ERC20Contract"
            ]
          },
          "description": "ERC20Contract"
        }
      ],
      "name": "getERC20Contract",
      "longname": "Application#getERC20Contract",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000074",
      "___s": true
    },
    {
      "comment": "/**\n   * Get ETH Network\n   * @function\n   * @return {Promise<string>} Network Name (Ex : Kovan)\n   */",
      "meta": {
        "range": [
          7618,
          7887
        ],
        "filename": "Application.js",
        "lineno": 285,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000607",
          "name": "getETHNetwork",
          "type": "ClassProperty"
        }
      },
      "description": "Get ETH Network",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<string>"
            ]
          },
          "description": "Network Name (Ex : Kovan)"
        }
      ],
      "name": "getETHNetwork",
      "longname": "Application#getETHNetwork",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000079",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Address connected via login()\n   * @function\n   * @return {Promise<string>} Address in Use\n   */",
      "meta": {
        "range": [
          8003,
          8114
        ],
        "filename": "Application.js",
        "lineno": 299,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000639",
          "name": "getAddress",
          "type": "ClassProperty"
        }
      },
      "description": "Get Address connected via login()",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<string>"
            ]
          },
          "description": "Address in Use"
        }
      ],
      "name": "getAddress",
      "longname": "Application#getAddress",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000082",
      "___s": true
    },
    {
      "comment": "/**\n   * Get ETH Balance of Address connected via login()\n   * @function\n   * @return {Promise<string>} ETH Balance\n   */",
      "meta": {
        "range": [
          8243,
          8400
        ],
        "filename": "Application.js",
        "lineno": 310,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000658",
          "name": "getETHBalance",
          "type": "ClassProperty"
        }
      },
      "description": "Get ETH Balance of Address connected via login()",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<string>"
            ]
          },
          "description": "ETH Balance"
        }
      ],
      "name": "getETHBalance",
      "longname": "Application#getETHBalance",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000084",
      "___s": true
    },
    {
      "comment": "/**\n * @typedef {Object} BEPRONetwork~Options\n * @property {Web3} web3\n * @property {string} [contractAddress]\n * @property {Account} [acc]\n * */",
      "meta": {
        "filename": "Network.js",
        "lineno": 10,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {}
      },
      "kind": "typedef",
      "name": "Options",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "Web3"
            ]
          },
          "name": "web3"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "name": "contractAddress"
        },
        {
          "type": {
            "names": [
              "Account"
            ]
          },
          "optional": true,
          "name": "acc"
        }
      ],
      "memberof": "BEPRONetwork",
      "longname": "BEPRONetwork~Options",
      "scope": "inner",
      "___id": "T000002R000098",
      "___s": true
    },
    {
      "comment": "/**\n * BEPRONetwork Object\n * @class BEPRONetwork\n * @param {BEPRONetwork~Options} options\n */",
      "meta": {
        "filename": "Network.js",
        "lineno": 17,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {}
      },
      "description": "BEPRONetwork Object",
      "kind": "class",
      "name": "BEPRONetwork",
      "params": [
        {
          "type": {
            "names": [
              "BEPRONetwork~Options"
            ]
          },
          "name": "options"
        }
      ],
      "longname": "BEPRONetwork",
      "scope": "global",
      "___id": "T000002R000099",
      "___s": true
    },
    {
      "comment": "/**\n   * @typedef {Object} BEPRONetwork~Issue\n   * @property {boolean} finalized: boolean\n   * @property {boolean} canceled\n   * @property {number} votesForApprove\n   * @property {number} beproStaked\n   * @property {Address} issueGenerator\n   * @property {number} mergeProposalsAmount\n   * @property {number} _id\n   * @property {Date} creationDate\n   */",
      "meta": {
        "filename": "Network.js",
        "lineno": 23,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {}
      },
      "kind": "typedef",
      "name": "Issue",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "boolean",
          "name": "finalized:"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "name": "canceled"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "votesForApprove"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "beproStaked"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "issueGenerator"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "mergeProposalsAmount"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "_id"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "name": "creationDate"
        }
      ],
      "memberof": "BEPRONetwork",
      "longname": "BEPRONetwork~Issue",
      "scope": "inner",
      "___id": "T000002R000101",
      "___s": true
    },
    {
      "comment": "/**\n   * @typedef {Object} BEPRONetwork~MergedIssue\n   * @property {Address[]} prAddresses\n   * @property {number[]} prAmounts\n   * @property {number} votes\n   * @property {number} disputes\n   * @property {Address} proposalAddress\n   * @property {number} _id\n   * @param params\n   */",
      "meta": {
        "filename": "Network.js",
        "lineno": 35,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {}
      },
      "kind": "typedef",
      "name": "MergedIssue",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "Array.<Address>"
            ]
          },
          "name": "prAddresses"
        },
        {
          "type": {
            "names": [
              "Array.<number>"
            ]
          },
          "name": "prAmounts"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "votes"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "disputes"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "proposalAddress"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "_id"
        }
      ],
      "params": [
        {
          "name": "params"
        }
      ],
      "memberof": "BEPRONetwork",
      "longname": "BEPRONetwork~MergedIssue",
      "scope": "inner",
      "___id": "T000002R000102",
      "___s": true
    },
    {
      "comment": "/**\n   * Asserts using the current contract\n   * followed by setting a new {@link ERC20Contract} to this instances public params, asserting it.\n   * @async\n   * @function\n   * @void\n   * @throws {Error} Contract is not deployed, first deploy it and provide a contract address\n   */",
      "meta": {
        "range": [
          1621,
          2179
        ],
        "filename": "Network.js",
        "lineno": 58,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100000774",
          "name": "__assert",
          "type": "ClassProperty"
        }
      },
      "description": "Asserts using the current contract\nfollowed by setting a new {@link ERC20Contract} to this instances public params, asserting it.",
      "async": true,
      "kind": "function",
      "tags": [
        {
          "originalTitle": "void",
          "title": "void",
          "text": ""
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Contract is not deployed, first deploy it and provide a contract address"
        }
      ],
      "name": "__assert",
      "longname": "BEPRONetwork#__assert",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "___id": "T000002R000105",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Open Issues Available\n   * @param {Address} address\n   * @returns {number[]}\n   */",
      "meta": {
        "range": [
          2281,
          2485
        ],
        "filename": "Network.js",
        "lineno": 84,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100000838",
          "name": "BEPRONetwork#getIssuesByAddress",
          "type": "MethodDefinition",
          "paramnames": [
            "address"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Open Issues Available",
      "params": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Array.<number>"
            ]
          }
        }
      ],
      "name": "getIssuesByAddress",
      "longname": "BEPRONetwork#getIssuesByAddress",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000110",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Amount of Issues Opened in the network\n   * @returns {Promise<number>}\n   */",
      "meta": {
        "range": [
          2581,
          2738
        ],
        "filename": "Network.js",
        "lineno": 97,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100000875",
          "name": "BEPRONetwork#getAmountofIssuesOpened",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Amount of Issues Opened in the network",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "getAmountofIssuesOpened",
      "longname": "BEPRONetwork#getAmountofIssuesOpened",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000112",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Amount of Issues Closed in the network\n   * @returns {Promise<number>}\n   */",
      "meta": {
        "range": [
          2834,
          2989
        ],
        "filename": "Network.js",
        "lineno": 108,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100000900",
          "name": "BEPRONetwork#getAmountofIssuesClosed",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Amount of Issues Closed in the network",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "getAmountofIssuesClosed",
      "longname": "BEPRONetwork#getAmountofIssuesClosed",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000113",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Amount of Needed for Approve\n   * @returns {Promise<number>}\n   */",
      "meta": {
        "range": [
          3075,
          3272
        ],
        "filename": "Network.js",
        "lineno": 119,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100000925",
          "name": "BEPRONetwork#percentageNeededForApprove",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Amount of Needed for Approve",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "percentageNeededForApprove",
      "longname": "BEPRONetwork#percentageNeededForApprove",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000114",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Amount of Needed for Merge\n   * @returns {Promise<number>}\n   */",
      "meta": {
        "range": [
          3356,
          3549
        ],
        "filename": "Network.js",
        "lineno": 133,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100000950",
          "name": "BEPRONetwork#percentageNeededForMerge",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Amount of Needed for Merge",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "percentageNeededForMerge",
      "longname": "BEPRONetwork#percentageNeededForMerge",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000115",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Total Amount of BEPRO Staked for Tickets in the network\n   * @returns {Promise<number>}\n   */",
      "meta": {
        "range": [
          3662,
          3817
        ],
        "filename": "Network.js",
        "lineno": 147,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100000975",
          "name": "BEPRONetwork#getBEPROStaked",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Total Amount of BEPRO Staked for Tickets in the network",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "getBEPROStaked",
      "longname": "BEPRONetwork#getBEPROStaked",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000116",
      "___s": true
    },
    {
      "comment": "/**\n   * GetTotal amount of time where an issue has to be approved\n   * @returns {Promise<Date>}\n   */",
      "meta": {
        "range": [
          3926,
          4137
        ],
        "filename": "Network.js",
        "lineno": 158,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001002",
          "name": "BEPRONetwork#timeOpenForIssueApprove",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "GetTotal amount of time where an issue has to be approved",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Date>"
            ]
          }
        }
      ],
      "name": "timeOpenForIssueApprove",
      "longname": "BEPRONetwork#timeOpenForIssueApprove",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000117",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Total Amount of BEPRO Staked for Tickets in the network\n   * @returns {Promise<number>}\n   */",
      "meta": {
        "range": [
          4250,
          4439
        ],
        "filename": "Network.js",
        "lineno": 171,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001028",
          "name": "BEPRONetwork#beproVotesStaked",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Total Amount of BEPRO Staked for Tickets in the network",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "beproVotesStaked",
      "longname": "BEPRONetwork#beproVotesStaked",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000118",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Total Amount of BEPRO Staked for Council in the network\n   * @returns {Promise<number>}\n   */",
      "meta": {
        "range": [
          4552,
          4749
        ],
        "filename": "Network.js",
        "lineno": 185,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001055",
          "name": "BEPRONetwork#COUNCIL_BEPRO_AMOUNT",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Total Amount of BEPRO Staked for Council in the network",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "COUNCIL_BEPRO_AMOUNT",
      "longname": "BEPRONetwork#COUNCIL_BEPRO_AMOUNT",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000119",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Total Amount of BEPRO Staked for Operator in the network\n   * @returns {Promise<number>}\n   */",
      "meta": {
        "range": [
          4863,
          5062
        ],
        "filename": "Network.js",
        "lineno": 199,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001082",
          "name": "BEPRONetwork#OPERATOR_BEPRO_AMOUNT",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Total Amount of BEPRO Staked for Operator in the network",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "OPERATOR_BEPRO_AMOUNT",
      "longname": "BEPRONetwork#OPERATOR_BEPRO_AMOUNT",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000120",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Total Amount of BEPRO Staked for Developer in the network\n   * @returns {Promise<number>}\n   */",
      "meta": {
        "range": [
          5177,
          5378
        ],
        "filename": "Network.js",
        "lineno": 213,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001109",
          "name": "BEPRONetwork#DEVELOPER_BEPRO_AMOUNT",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Total Amount of BEPRO Staked for Developer in the network",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "DEVELOPER_BEPRO_AMOUNT",
      "longname": "BEPRONetwork#DEVELOPER_BEPRO_AMOUNT",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000121",
      "___s": true
    },
    {
      "comment": "/**\n   * Is issue Approved\n   * @param {Object} params\n   * @param {number} params.issueId\n   * @returns {Promise<boolean>}\n   */",
      "meta": {
        "range": [
          5514,
          5668
        ],
        "filename": "Network.js",
        "lineno": 229,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001136",
          "name": "BEPRONetwork#isIssueApproved",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Is issue Approved",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.issueId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          }
        }
      ],
      "name": "isIssueApproved",
      "longname": "BEPRONetwork#isIssueApproved",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000122",
      "___s": true
    },
    {
      "comment": "/**\n   * Is issue available to be approved (time wise)\n   * @param {Object} params\n   * @param {number} params.issueId\n   * @returns {Promise<boolean>}\n   */",
      "meta": {
        "range": [
          5832,
          5990
        ],
        "filename": "Network.js",
        "lineno": 242,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001162",
          "name": "BEPRONetwork#isIssueApprovable",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Is issue available to be approved (time wise)",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.issueId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          }
        }
      ],
      "name": "isIssueApprovable",
      "longname": "BEPRONetwork#isIssueApprovable",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000124",
      "___s": true
    },
    {
      "comment": "/**\n   * Can this issue be merged\n   * @param {Object} params\n   * @param {number} params.issueId\n   * @param {number} params.mergeId\n   * @returns {Promise<boolean>}\n   */",
      "meta": {
        "range": [
          6169,
          6343
        ],
        "filename": "Network.js",
        "lineno": 256,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001188",
          "name": "BEPRONetwork#isIssueMergeable",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Can this issue be merged",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.issueId"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.mergeId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          }
        }
      ],
      "name": "isIssueMergeable",
      "longname": "BEPRONetwork#isIssueMergeable",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000126",
      "___s": true
    },
    {
      "comment": "/**\n   * Can this issue be merged\n   * @param {Object} params\n   * @param {number} params.issueId\n   * @param {number} params.mergeId\n   * @returns {Promise<boolean>}\n   */",
      "meta": {
        "range": [
          6522,
          6716
        ],
        "filename": "Network.js",
        "lineno": 270,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001217",
          "name": "BEPRONetwork#isMergeTheOneWithMoreVotes",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Can this issue be merged",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.issueId"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.mergeId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          }
        }
      ],
      "name": "isMergeTheOneWithMoreVotes",
      "longname": "BEPRONetwork#isMergeTheOneWithMoreVotes",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000129",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Issue Id Info\n   * @param {Object} params\n   * @param {Address} params.address\n   * @returns {Promise<number>} Number of votes\n   */",
      "meta": {
        "range": [
          6868,
          7069
        ],
        "filename": "Network.js",
        "lineno": 283,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001246",
          "name": "BEPRONetwork#getVotesByAddress",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Issue Id Info",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          },
          "description": "Number of votes"
        }
      ],
      "name": "getVotesByAddress",
      "longname": "BEPRONetwork#getVotesByAddress",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000132",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Issue Id Info\n   * @param {Object} params\n   * @param {number} params.issue_id\n   * @return {Promise<BEPRONetwork~Issue>}\n   */",
      "meta": {
        "range": [
          7216,
          7729
        ],
        "filename": "Network.js",
        "lineno": 297,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001281",
          "name": "BEPRONetwork#getIssueById",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Issue Id Info",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.issue_id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<BEPRONetwork~Issue>"
            ]
          }
        }
      ],
      "name": "getIssueById",
      "longname": "BEPRONetwork#getIssueById",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000135",
      "___s": true
    },
    {
      "comment": "/**\n   * Get votes, address and amounts for issue\n   * @param {Object} params\n   * @param {number} params.issue_id\n   * @param {number} params.merge_id\n   * @return {Promise<BEPRONetwork~MergedIssue>}\n   */",
      "meta": {
        "range": [
          7943,
          8420
        ],
        "filename": "Network.js",
        "lineno": 323,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001366",
          "name": "BEPRONetwork#getMergeById",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Get votes, address and amounts for issue",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.issue_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.merge_id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<BEPRONetwork~MergedIssue>"
            ]
          }
        }
      ],
      "name": "getMergeById",
      "longname": "BEPRONetwork#getMergeById",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000146",
      "___s": true
    },
    {
      "comment": "/**\n   * Approve ERC20 Allowance\n   * @function\n   * @return {Promise<number>}\n   */",
      "meta": {
        "range": [
          8511,
          8739
        ],
        "filename": "Network.js",
        "lineno": 346,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001455",
          "name": "approveERC20",
          "type": "ClassProperty"
        }
      },
      "description": "Approve ERC20 Allowance",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "approveERC20",
      "longname": "BEPRONetwork#approveERC20",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "___id": "T000002R000156",
      "___s": true
    },
    {
      "comment": "/**\n   * Verify if Approved\n   * @function\n   * @param {Object} params\n   * @param {number} params.amount\n   * @param {Address} params.address\n   * @return {Promise<number>}\n   */",
      "meta": {
        "range": [
          8925,
          9086
        ],
        "filename": "Network.js",
        "lineno": 362,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001486",
          "name": "isApprovedERC20",
          "type": "ClassProperty"
        }
      },
      "description": "Verify if Approved",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.amount"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "isApprovedERC20",
      "longname": "BEPRONetwork#isApprovedERC20",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "___id": "T000002R000160",
      "___s": true
    },
    {
      "comment": "/**\n   * lock BEPRO for oracles\n   * @param {Object} params\n   * @params params.beproAmount {number}\n   * @throws {Error} Bepro Amount has to be higher than 0\n   * @throws {Error} Bepro not approve for tx, first use 'approveERC20'\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          9371,
          9765
        ],
        "filename": "Network.js",
        "lineno": 376,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001511",
          "name": "BEPRONetwork#lockBepro",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "lock BEPRO for oracles",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        }
      ],
      "tags": [
        {
          "originalTitle": "params",
          "title": "params",
          "text": "params.beproAmount {number}",
          "value": "params.beproAmount {number}"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Bepro Amount has to be higher than 0"
        },
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Bepro not approve for tx, first use 'approveERC20'"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "lockBepro",
      "longname": "BEPRONetwork#lockBepro",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000166",
      "___s": true
    },
    {
      "comment": "/**\n   * Unlock BEPRO for oracles\n   * @param {Object} params\n   * @params params.beproAmount {number}\n   * @params params.from {address}\n   * @throws {Error} Bepro Amount has to be higher than 0\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          10015,
          10279
        ],
        "filename": "Network.js",
        "lineno": 398,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001564",
          "name": "BEPRONetwork#unlockBepro",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Unlock BEPRO for oracles",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        }
      ],
      "tags": [
        {
          "originalTitle": "params",
          "title": "params",
          "text": "params.beproAmount {number}",
          "value": "params.beproAmount {number}"
        },
        {
          "originalTitle": "params",
          "title": "params",
          "text": "params.from {address}",
          "value": "params.from {address}"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Bepro Amount has to be higher than 0"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "unlockBepro",
      "longname": "BEPRONetwork#unlockBepro",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000170",
      "___s": true
    },
    {
      "comment": "/**\n   * Delegated Oracles to others\n   * @param {Object} params\n   * @param {number} params.beproAmount\n   * @param {Address} params.delegatedTo\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          10479,
          10779
        ],
        "filename": "Network.js",
        "lineno": 415,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001603",
          "name": "BEPRONetwork#delegateOracles",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delegated Oracles to others",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.beproAmount"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.delegatedTo"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "delegateOracles",
      "longname": "BEPRONetwork#delegateOracles",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000173",
      "___s": true
    },
    {
      "comment": "/**\n   * open Issue\n   * @param {Object} params\n   * @param {number} params.beproAmount\n   * @param {Address} params.address\n   * @throws {Error} Bepro Amount has to be higher than 0\n   * @throws {Error} Bepro not approve for tx, first use 'approveERC20'\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          11088,
          11490
        ],
        "filename": "Network.js",
        "lineno": 436,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001642",
          "name": "BEPRONetwork#openIssue",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "open Issue",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.beproAmount"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.address"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Bepro Amount has to be higher than 0"
        },
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Bepro not approve for tx, first use 'approveERC20'"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "openIssue",
      "longname": "BEPRONetwork#openIssue",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000176",
      "___s": true
    },
    {
      "comment": "/**\n   * open Issue\n   * @param {Object} params\n   * @param {number} params.issueId\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          11628,
          11776
        ],
        "filename": "Network.js",
        "lineno": 456,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001697",
          "name": "BEPRONetwork#approveIssue",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "open Issue",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.issueId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "approveIssue",
      "longname": "BEPRONetwork#approveIssue",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000181",
      "___s": true
    },
    {
      "comment": "/**\n   * redeem Issue\n   * @param {Object} params\n   * @param {number} params.issueId\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          11916,
          12062
        ],
        "filename": "Network.js",
        "lineno": 468,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001724",
          "name": "BEPRONetwork#redeemIssue",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "redeem Issue",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.issueId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "redeemIssue",
      "longname": "BEPRONetwork#redeemIssue",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000183",
      "___s": true
    },
    {
      "comment": "/**\n   * open Issue\n   * @param {Object} params\n   * @param {number} params.issueId\n   * @param {number} params.mergeId\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          12236,
          12402
        ],
        "filename": "Network.js",
        "lineno": 481,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001751",
          "name": "BEPRONetwork#approveMerge",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "open Issue",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.issueId"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.mergeId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "approveMerge",
      "longname": "BEPRONetwork#approveMerge",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000185",
      "___s": true
    },
    {
      "comment": "/**\n   * open Issue\n   * @param {Object} params\n   * @param {number} params.issueID\n   * @param {number} params.beproAmount\n   * @param {address} params.address\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          12617,
          13068
        ],
        "filename": "Network.js",
        "lineno": 495,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001781",
          "name": "BEPRONetwork#updateIssue",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "open Issue",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.issueID"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.beproAmount"
        },
        {
          "type": {
            "names": [
              "address"
            ]
          },
          "name": "params.address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "updateIssue",
      "longname": "BEPRONetwork#updateIssue",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000188",
      "___s": true
    },
    {
      "comment": "/**\n   * Propose Merge of Issue\n   * @param {Object} params\n   * @param {number} params.issueID\n   * @param {Address[]} params.prAddresses\n   * @param {number[]} params.prAmounts\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          13301,
          13646
        ],
        "filename": "Network.js",
        "lineno": 519,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001840",
          "name": "BEPRONetwork#proposeIssueMerge",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Propose Merge of Issue",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.issueID"
        },
        {
          "type": {
            "names": [
              "Array.<Address>"
            ]
          },
          "name": "params.prAddresses"
        },
        {
          "type": {
            "names": [
              "Array.<number>"
            ]
          },
          "name": "params.prAmounts"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "proposeIssueMerge",
      "longname": "BEPRONetwork#proposeIssueMerge",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000194",
      "___s": true
    },
    {
      "comment": "/**\n   * close Issue\n   * @param {Object} params\n   * @param {number} params.issueID\n   * @param {number} params.mergeID\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          13821,
          13983
        ],
        "filename": "Network.js",
        "lineno": 537,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001886",
          "name": "BEPRONetwork#closeIssue",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "close Issue",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.issueID"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.mergeID"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "closeIssue",
      "longname": "BEPRONetwork#closeIssue",
      "kind": "function",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000198",
      "___s": true
    },
    {
      "comment": "/**\n   * Deploys current contract and awaits for {@link BEPRONetwork#__assert}\n   * @function\n   * @param {Object} params\n   * @param {string} params.tokenAddress\n   * @param {function():void} params.callback\n   * @return {Promise<*|undefined>}\n   */",
      "meta": {
        "range": [
          14240,
          14511
        ],
        "filename": "Network.js",
        "lineno": 551,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001916",
          "name": "deploy",
          "type": "ClassProperty"
        }
      },
      "description": "Deploys current contract and awaits for {@link BEPRONetwork#__assert}",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "params.tokenAddress"
        },
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "name": "params.callback"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(*|undefined)>"
            ]
          }
        }
      ],
      "name": "deploy",
      "longname": "BEPRONetwork#deploy",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "___id": "T000002R000201",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @return ERC20Contract|null\n   */",
      "meta": {
        "range": [
          14574,
          14625
        ],
        "filename": "Network.js",
        "lineno": 564,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001957",
          "name": "getERC20Contract",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "returns": [
        {
          "description": "ERC20Contract|null"
        }
      ],
      "name": "getERC20Contract",
      "longname": "BEPRONetwork#getERC20Contract",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "___id": "T000002R000207",
      "___s": true
    },
    {
      "comment": "/**\n * @typedef {Object} ERC20Contract~Options\n * @property {Web3} web3\n * @property {string} [contractAddress]\n * @property {Account} [acc]\n */",
      "meta": {
        "filename": "ERC20Contract.js",
        "lineno": 5,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {}
      },
      "kind": "typedef",
      "name": "Options",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "Web3"
            ]
          },
          "name": "web3"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "name": "contractAddress"
        },
        {
          "type": {
            "names": [
              "Account"
            ]
          },
          "optional": true,
          "name": "acc"
        }
      ],
      "memberof": "ERC20Contract",
      "longname": "ERC20Contract~Options",
      "scope": "inner",
      "___id": "T000002R000209",
      "___s": true
    },
    {
      "comment": "/**\n * @class ERC20Contract\n * @param {ERC20Contract~Options} options\n */",
      "meta": {
        "filename": "ERC20Contract.js",
        "lineno": 12,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {}
      },
      "kind": "class",
      "name": "ERC20Contract",
      "params": [
        {
          "type": {
            "names": [
              "ERC20Contract~Options"
            ]
          },
          "name": "options"
        }
      ],
      "longname": "ERC20Contract",
      "scope": "global",
      "___id": "T000002R000210",
      "___s": true
    },
    {
      "comment": "/**\n   * Use a {@link ierc20} contract with the current address\n   * @return {Promise<void>}\n   */",
      "meta": {
        "range": [
          561,
          705
        ],
        "filename": "ERC20Contract.js",
        "lineno": 25,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100001999",
          "name": "__assert",
          "type": "ClassProperty"
        }
      },
      "description": "Use a {@link ierc20} contract with the current address",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          }
        }
      ],
      "name": "__assert",
      "longname": "ERC20Contract#__assert",
      "kind": "member",
      "memberof": "ERC20Contract",
      "scope": "instance",
      "___id": "T000002R000214",
      "___s": true
    },
    {
      "comment": "/**\n   *\n   * @return {*}\n   */",
      "meta": {
        "range": [
          743,
          809
        ],
        "filename": "ERC20Contract.js",
        "lineno": 34,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002028",
          "name": "ERC20Contract#getContract",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "returns": [
        {
          "type": {
            "names": [
              "*"
            ]
          }
        }
      ],
      "name": "getContract",
      "longname": "ERC20Contract#getContract",
      "kind": "function",
      "memberof": "ERC20Contract",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000216",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Token Address\n   * @returns {Address} address\n   */",
      "meta": {
        "range": [
          880,
          938
        ],
        "filename": "ERC20Contract.js",
        "lineno": 42,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002041",
          "name": "ERC20Contract#getAddress",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Token Address",
      "returns": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "address"
        }
      ],
      "name": "getAddress",
      "longname": "ERC20Contract#getAddress",
      "kind": "function",
      "memberof": "ERC20Contract",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000217",
      "___s": true
    },
    {
      "comment": "/**\n   * Transfer Tokens\n   * @function\n   * @param {Object} params Parameters\n   * @param {Address} params.toAddress To Address\n   * @param {Integer} params.tokenAmount Amount of Tokens\n   * @returns {Promise<Transaction>} Transaction\n   */",
      "meta": {
        "range": [
          1186,
          1515
        ],
        "filename": "ERC20Contract.js",
        "lineno": 54,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002051",
          "name": "transferTokenAmount",
          "type": "ClassProperty"
        }
      },
      "description": "Transfer Tokens",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "To Address",
          "name": "params.toAddress"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Amount of Tokens",
          "name": "params.tokenAmount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Transaction>"
            ]
          },
          "description": "Transaction"
        }
      ],
      "name": "transferTokenAmount",
      "longname": "ERC20Contract#transferTokenAmount",
      "memberof": "ERC20Contract",
      "scope": "instance",
      "___id": "T000002R000218",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Amount of Tokens User Holds\n   * @function\n   * @param {Address} address User Address\n   * @returns {Promise<Transaction>} Transaction\n   */",
      "meta": {
        "range": [
          1675,
          1823
        ],
        "filename": "ERC20Contract.js",
        "lineno": 72,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002092",
          "name": "getTokenAmount",
          "type": "ClassProperty"
        }
      },
      "description": "Get Amount of Tokens User Holds",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "User Address",
          "name": "address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Transaction>"
            ]
          },
          "description": "Transaction"
        }
      ],
      "name": "getTokenAmount",
      "longname": "ERC20Contract#getTokenAmount",
      "memberof": "ERC20Contract",
      "scope": "instance",
      "___id": "T000002R000222",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Total Supply of Token\n   * @function\n   * @returns {Promise<number>} Total supply\n   */",
      "meta": {
        "range": [
          1930,
          2065
        ],
        "filename": "ERC20Contract.js",
        "lineno": 82,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002117",
          "name": "totalSupply",
          "type": "ClassProperty"
        }
      },
      "description": "Get Total Supply of Token",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          },
          "description": "Total supply"
        }
      ],
      "name": "totalSupply",
      "longname": "ERC20Contract#totalSupply",
      "memberof": "ERC20Contract",
      "scope": "instance",
      "___id": "T000002R000223",
      "___s": true
    },
    {
      "comment": "/**\n   *\n   * @return {Contract}\n   */",
      "meta": {
        "range": [
          2110,
          2157
        ],
        "filename": "ERC20Contract.js",
        "lineno": 91,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002140",
          "name": "ERC20Contract#getABI",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "returns": [
        {
          "type": {
            "names": [
              "Contract"
            ]
          }
        }
      ],
      "name": "getABI",
      "longname": "ERC20Contract#getABI",
      "kind": "function",
      "memberof": "ERC20Contract",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000224",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Decimals of Token\n   * @function\n   * @returns {number} Total supply\n   */",
      "meta": {
        "range": [
          2251,
          2303
        ],
        "filename": "ERC20Contract.js",
        "lineno": 100,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002150",
          "name": "ERC20Contract#getDecimals",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Decimals of Token",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Total supply"
        }
      ],
      "name": "getDecimals",
      "longname": "ERC20Contract#getDecimals",
      "memberof": "ERC20Contract",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000225",
      "___s": true
    },
    {
      "comment": "/**\n   *\n   * @return {Promise<number>}\n   */",
      "meta": {
        "range": [
          2355,
          2437
        ],
        "filename": "ERC20Contract.js",
        "lineno": 108,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002160",
          "name": "getDecimalsAsync",
          "type": "ClassProperty"
        }
      },
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "getDecimalsAsync",
      "longname": "ERC20Contract#getDecimalsAsync",
      "kind": "member",
      "memberof": "ERC20Contract",
      "scope": "instance",
      "___id": "T000002R000226",
      "___s": true
    },
    {
      "comment": "/**\n   * Verify if Spender is Approved to use tokens\n   * @function\n   * @param {Object} params Parameters\n   * @param {Address} params.address Sender Address\n   * @param {number} params.amount Amount of Tokens\n   * @param {Address} params.spenderAddress Spender Address\n   * @returns {Promise<boolean>} isApproved\n   */",
      "meta": {
        "range": [
          2764,
          3116
        ],
        "filename": "ERC20Contract.js",
        "lineno": 119,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002175",
          "name": "isApproved",
          "type": "ClassProperty"
        }
      },
      "description": "Verify if Spender is Approved to use tokens",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "Sender Address",
          "name": "params.address"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Amount of Tokens",
          "name": "params.amount"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "Spender Address",
          "name": "params.spenderAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "isApproved"
        }
      ],
      "name": "isApproved",
      "longname": "ERC20Contract#isApproved",
      "memberof": "ERC20Contract",
      "scope": "instance",
      "___id": "T000002R000227",
      "___s": true
    },
    {
      "comment": "/**\n   * Approve tokens to be used by another address/contract\n   * @function\n   * @param {Object} params Parameters\n   * @param {Address} params.address Spender Address/Contract\n   * @param {number} params.amount Amount of Tokens\n   * @param {function():void} params.callback callback for the Tx\n   * @returns {Promise<Transaction>} Transaction\n   */",
      "meta": {
        "range": [
          3474,
          3926
        ],
        "filename": "ERC20Contract.js",
        "lineno": 142,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002220",
          "name": "approve",
          "type": "ClassProperty"
        }
      },
      "description": "Approve tokens to be used by another address/contract",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "Spender Address/Contract",
          "name": "params.address"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Amount of Tokens",
          "name": "params.amount"
        },
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "description": "callback for the Tx",
          "name": "params.callback"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Transaction>"
            ]
          },
          "description": "Transaction"
        }
      ],
      "name": "approve",
      "longname": "ERC20Contract#approve",
      "memberof": "ERC20Contract",
      "scope": "instance",
      "___id": "T000002R000232",
      "___s": true
    },
    {
      "comment": "/**\n   * Deploy ERC20 Token\n   * @function\n   * @param {Object} params Parameters\n   * @param {string} params.name Name of token\n   * @param {string} params.symbol Symbol of token\n   * @param {number} params.cap Max supply of Token (ex : 100M)\n   * @param {Address} params.distributionAddress Where tokens should be sent to initially\n   * @returns {Promise<Transaction>} Transaction\n   */",
      "meta": {
        "range": [
          4321,
          4983
        ],
        "filename": "ERC20Contract.js",
        "lineno": 172,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002275",
          "name": "deploy",
          "type": "ClassProperty"
        }
      },
      "description": "Deploy ERC20 Token",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of token",
          "name": "params.name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Symbol of token",
          "name": "params.symbol"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Max supply of Token (ex : 100M)",
          "name": "params.cap"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "Where tokens should be sent to initially",
          "name": "params.distributionAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Transaction>"
            ]
          },
          "description": "Transaction"
        }
      ],
      "name": "deploy",
      "longname": "ERC20Contract#deploy",
      "memberof": "ERC20Contract",
      "scope": "instance",
      "___id": "T000002R000238",
      "___s": true
    },
    {
      "comment": "/**\n * @typedef {Object} ERC20TokenLock~Options\n * @property {string} tokenAddress\n * @property {Web3} web3\n * @property {string} [contractAddress]\n * @property {Account} [acc]\n */",
      "meta": {
        "filename": "ERC20TokenLock.js",
        "lineno": 9,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {}
      },
      "kind": "typedef",
      "name": "Options",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "tokenAddress"
        },
        {
          "type": {
            "names": [
              "Web3"
            ]
          },
          "name": "web3"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "name": "contractAddress"
        },
        {
          "type": {
            "names": [
              "Account"
            ]
          },
          "optional": true,
          "name": "acc"
        }
      ],
      "memberof": "ERC20TokenLock",
      "longname": "ERC20TokenLock~Options",
      "scope": "inner",
      "___id": "T000002R000249",
      "___s": true
    },
    {
      "comment": "/**\n * ERC20 Token Lock Contract Object\n * @class ERC20TokenLock\n * @param {ERC20TokenLock~Options} options\n */",
      "meta": {
        "filename": "ERC20TokenLock.js",
        "lineno": 17,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {}
      },
      "description": "ERC20 Token Lock Contract Object",
      "kind": "class",
      "name": "ERC20TokenLock",
      "params": [
        {
          "type": {
            "names": [
              "ERC20TokenLock~Options"
            ]
          },
          "name": "options"
        }
      ],
      "longname": "ERC20TokenLock",
      "scope": "global",
      "___id": "T000002R000250",
      "___s": true
    },
    {
      "comment": "/**\n   * Get ERC20 Address of the Token Contract managed\n   * @returns {Promise<Address>}\n   */",
      "meta": {
        "range": [
          1290,
          1385
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 48,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002465",
          "name": "ERC20TokenLock#erc20",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get ERC20 Address of the Token Contract managed",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Address>"
            ]
          }
        }
      ],
      "name": "erc20",
      "longname": "ERC20TokenLock#erc20",
      "kind": "function",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000258",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Token Amount of ERC20 Address\n   * @function\n   * @param {Object} params\n   * @param {Address} params.address\n   * @returns {Promise<number>} Token Amount\n   */",
      "meta": {
        "range": [
          1565,
          1659
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 59,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002487",
          "name": "getTokenAmount",
          "type": "ClassProperty"
        }
      },
      "description": "Get Token Amount of ERC20 Address",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          },
          "description": "Token Amount"
        }
      ],
      "name": "getTokenAmount",
      "longname": "ERC20TokenLock#getTokenAmount",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000259",
      "___s": true
    },
    {
      "comment": "/**\n   * Get All Tokens staked/locked at that specific moment\n   * @returns {Integer} Token Amount\n   */",
      "meta": {
        "range": [
          1770,
          1992
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 65,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002501",
          "name": "ERC20TokenLock#totalAmountStaked",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get All Tokens staked/locked at that specific moment",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Token Amount"
        }
      ],
      "name": "totalAmountStaked",
      "longname": "ERC20TokenLock#totalAmountStaked",
      "kind": "function",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000261",
      "___s": true
    },
    {
      "comment": "/**\n   * Get minimum amount of tokens to lock per user\n   * @returns {Promise<number>} Minimum Amount\n   */",
      "meta": {
        "range": [
          2106,
          2324
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 77,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002538",
          "name": "ERC20TokenLock#minAmountToLock",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get minimum amount of tokens to lock per user",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          },
          "description": "Minimum Amount"
        }
      ],
      "name": "minAmountToLock",
      "longname": "ERC20TokenLock#minAmountToLock",
      "kind": "function",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000263",
      "___s": true
    },
    {
      "comment": "/**\n   * Get maximum amount of tokens to lock per user\n   * @returns {Promise<number>} Maximum Amount\n   */",
      "meta": {
        "range": [
          2438,
          2656
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 89,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002575",
          "name": "ERC20TokenLock#maxAmountToLock",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get maximum amount of tokens to lock per user",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          },
          "description": "Maximum Amount"
        }
      ],
      "name": "maxAmountToLock",
      "longname": "ERC20TokenLock#maxAmountToLock",
      "kind": "function",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000265",
      "___s": true
    },
    {
      "comment": "/**\n   * Check if locked tokens release date has come and user can withdraw them\n   * @function\n   * @param {Object} params\n   * @param {Address} params.address\n   * @returns {Promise<boolean>} canRelease\n   */",
      "meta": {
        "range": [
          2873,
          2985
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 104,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002612",
          "name": "canRelease",
          "type": "ClassProperty"
        }
      },
      "description": "Check if locked tokens release date has come and user can withdraw them",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "canRelease"
        }
      ],
      "name": "canRelease",
      "longname": "ERC20TokenLock#canRelease",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000267",
      "___s": true
    },
    {
      "comment": "/**\n   * Get locked tokens amount for a given address\n   * @function\n   * @param {Object} params\n   * @param {Address} params.address\n   * @returns {Promise<number>} amount Locked token amount\n   */",
      "meta": {
        "range": [
          3190,
          3433
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 113,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002635",
          "name": "getLockedTokens",
          "type": "ClassProperty"
        }
      },
      "description": "Get locked tokens amount for a given address",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          },
          "description": "amount Locked token amount"
        }
      ],
      "name": "getLockedTokens",
      "longname": "ERC20TokenLock#getLockedTokens",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000269",
      "___s": true
    },
    {
      "comment": "/**\n   * Get locked tokens info for a given address\n   * @function\n   * @param {Object} params\n   * @param {Address} params.address\n   * @returns {Date} startDate\n   * @returns {Date} endDate\n   * @returns {Promise<number>} amount Token amount\n   */",
      "meta": {
        "range": [
          3689,
          4120
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 130,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002675",
          "name": "getLockedTokensInfo",
          "type": "ClassProperty"
        }
      },
      "description": "Get locked tokens info for a given address",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "startDate"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "endDate"
        },
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          },
          "description": "amount Token amount"
        }
      ],
      "name": "getLockedTokensInfo",
      "longname": "ERC20TokenLock#getLockedTokensInfo",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000272",
      "___s": true
    },
    {
      "comment": "/**\n   * (Admin only) sets maximum amount of tokens to lock per user\n   * @function\n   * @param {Object} params\n   * @param {Address} params.tokenAmount Amount of Tokens\n   * @returns {Promise<boolean>} Success True if operation was successful\n   */",
      "meta": {
        "range": [
          4376,
          4797
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 153,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002735",
          "name": "setMaxAmountToLock",
          "type": "ClassProperty"
        }
      },
      "description": "(Admin only) sets maximum amount of tokens to lock per user",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "Amount of Tokens",
          "name": "params.tokenAmount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "Success True if operation was successful"
        }
      ],
      "name": "setMaxAmountToLock",
      "longname": "ERC20TokenLock#setMaxAmountToLock",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000278",
      "___s": true
    },
    {
      "comment": "/**\n   * (Admin only) sets minimum amount of tokens to lock per user\n   * @function\n   * @param {Object} params\n   * @param {number} params.tokenAmount Minimum tokens amount\n   * @returns {Promise<boolean>} Success True if operation was successful\n   */",
      "meta": {
        "range": [
          5057,
          5478
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 176,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002781",
          "name": "setMinAmountToLock",
          "type": "ClassProperty"
        }
      },
      "description": "(Admin only) sets minimum amount of tokens to lock per user",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Minimum tokens amount",
          "name": "params.tokenAmount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "Success True if operation was successful"
        }
      ],
      "name": "setMinAmountToLock",
      "longname": "ERC20TokenLock#setMinAmountToLock",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000281",
      "___s": true
    },
    {
      "comment": "/**\n   * User locks his tokens until specified end date.\n   * REQUIREMENTS:\n   *  user must have approved this contract to spend the tokens \"amount\" he wants to lock before calling this function.\n   * @function\n   * @param {Object} params\n   * @param {Address} params.address User Address\n   * @param {number} params.amount Tokens amount to be locked\n   * @param {Date} params.endDate Lock tokens until this end date\n   * @returns {Promise<boolean>} Success True if operation was successful\n   */",
      "meta": {
        "range": [
          5981,
          7239
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 203,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002827",
          "name": "lock",
          "type": "ClassProperty"
        }
      },
      "description": "User locks his tokens until specified end date.\nREQUIREMENTS:\n user must have approved this contract to spend the tokens \"amount\" he wants to lock before calling this function.",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "User Address",
          "name": "params.address"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Tokens amount to be locked",
          "name": "params.amount"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Lock tokens until this end date",
          "name": "params.endDate"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "Success True if operation was successful"
        }
      ],
      "name": "lock",
      "longname": "ERC20TokenLock#lock",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000284",
      "___s": true
    },
    {
      "comment": "/**\n   * User withdraws his locked tokens after specified end date\n   * @function\n   * @param {Object} params\n   * @param {Address} params.address User Address\n   * @return {Promise<boolean>} Success True if operation was successful\n   */",
      "meta": {
        "range": [
          7484,
          8054
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 252,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002962",
          "name": "release",
          "type": "ClassProperty"
        }
      },
      "description": "User withdraws his locked tokens after specified end date",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "User Address",
          "name": "params.address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "Success True if operation was successful"
        }
      ],
      "name": "release",
      "longname": "ERC20TokenLock#release",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000294",
      "___s": true
    },
    {
      "comment": "/**\n   * Approve this contract to transfer tokens of the ERC20 token contract on behalf of user\n   * @function\n   * @return {Promise<boolean>} Success True if operation was successful\n   */",
      "meta": {
        "range": [
          8250,
          8686
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 277,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100003023",
          "name": "approveERC20Transfer",
          "type": "ClassProperty"
        }
      },
      "description": "Approve this contract to transfer tokens of the ERC20 token contract on behalf of user",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "Success True if operation was successful"
        }
      ],
      "name": "approveERC20Transfer",
      "longname": "ERC20TokenLock#approveERC20Transfer",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000301",
      "___s": true
    },
    {
      "comment": "/**\n   *\n   * @return {Promise<void>}\n   * @throws {Error} Contract is not deployed, first deploy it and provide a contract address\n   */",
      "meta": {
        "range": [
          8830,
          9514
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 294,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100003065",
          "name": "__assert",
          "type": "ClassProperty"
        }
      },
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          }
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Contract is not deployed, first deploy it and provide a contract address"
        }
      ],
      "name": "__assert",
      "longname": "ERC20TokenLock#__assert",
      "kind": "member",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000305",
      "___s": true
    },
    {
      "comment": "/**\n   * Deploy the ERC20 Token Lock Contract\n   * @function\n   * @param {Object} params\n   * @param {function():void} params.callback\n   * @return {Promise<*|undefined>}\n   * @throws {Error} No Token Address Provided\n   */",
      "meta": {
        "range": [
          9744,
          10125
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 325,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100003135",
          "name": "deploy",
          "type": "ClassProperty"
        }
      },
      "description": "Deploy the ERC20 Token Lock Contract",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "name": "params.callback"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(*|undefined)>"
            ]
          }
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "No Token Address Provided"
        }
      ],
      "name": "deploy",
      "longname": "ERC20TokenLock#deploy",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000310",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @return ERC20Contract|undefined\n   */",
      "meta": {
        "range": [
          10193,
          10244
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 342,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100003193",
          "name": "getERC20Contract",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "returns": [
        {
          "description": "ERC20Contract|undefined"
        }
      ],
      "name": "getERC20Contract",
      "longname": "ERC20TokenLock#getERC20Contract",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000315",
      "___s": true
    },
    {
      "comment": "/**\n * @typedef {Object} ERC721Contract~Options\n * @property {Web3} web3\n * @property {string} [contractAddress]\n * @property {Account} [acc]\n */",
      "meta": {
        "filename": "ERC721Collectibles.js",
        "lineno": 8,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {}
      },
      "kind": "typedef",
      "name": "Options",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "Web3"
            ]
          },
          "name": "web3"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "name": "contractAddress"
        },
        {
          "type": {
            "names": [
              "Account"
            ]
          },
          "optional": true,
          "name": "acc"
        }
      ],
      "memberof": "ERC721Contract",
      "longname": "ERC721Contract~Options",
      "scope": "inner",
      "___id": "T000002R000318",
      "___s": true
    },
    {
      "comment": "/**\n * ERC721Contract Object\n * @class ERC721Contract\n * @param {ERC721Contract~Options} options\n */",
      "meta": {
        "filename": "ERC721Collectibles.js",
        "lineno": 15,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {}
      },
      "description": "ERC721Contract Object",
      "kind": "class",
      "name": "ERC721Contract",
      "params": [
        {
          "type": {
            "names": [
              "ERC721Contract~Options"
            ]
          },
          "name": "options"
        }
      ],
      "longname": "ERC721Contract",
      "scope": "global",
      "___id": "T000002R000319",
      "___s": true
    },
    {
      "comment": "/**\n   * Uses {@link erc721collectibles} on the current address and assigns a new {@link ERC20Contract} with\n   * {@link ERC721Collectibles#purchaseToken} as its contract address\n   * @function\n   * @return {Promise<void>}\n   * @throws {Error} Contract is not deployed, first deploy it and provide a contract address\n   */",
      "meta": {
        "range": [
          964,
          1522
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 32,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003243",
          "name": "__assert",
          "type": "ClassProperty"
        }
      },
      "description": "Uses {@link erc721collectibles} on the current address and assigns a new {@link ERC20Contract} with\n{@link ERC721Collectibles#purchaseToken} as its contract address",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          }
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Contract is not deployed, first deploy it and provide a contract address"
        }
      ],
      "name": "__assert",
      "longname": "ERC721Collectibles#__assert",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "___id": "T000002R000323",
      "___s": true
    },
    {
      "comment": "/**\n   * Get ERC20 Address of the Contract\n   * @returns {Promise<Address>}\n   */",
      "meta": {
        "range": [
          1610,
          1743
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 56,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003305",
          "name": "ERC721Collectibles#purchaseToken",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get ERC20 Address of the Contract",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Address>"
            ]
          }
        }
      ],
      "name": "purchaseToken",
      "longname": "ERC721Collectibles#purchaseToken",
      "kind": "function",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000328",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Price Per Pack\n   * @returns {Promise<number>}\n   */",
      "meta": {
        "range": [
          1815,
          1973
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 67,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003327",
          "name": "ERC721Collectibles#getPricePerPack",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Price Per Pack",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "getPricePerPack",
      "longname": "ERC721Collectibles#getPricePerPack",
      "kind": "function",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000329",
      "___s": true
    },
    {
      "comment": "/**\n   * Verify if token ID exists\n   * @param {Object} params\n   * @param {string} params.tokenID\n   * @returns {Promise<number>} Token Id\n   */",
      "meta": {
        "range": [
          2125,
          2261
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 80,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003354",
          "name": "ERC721Collectibles#exists",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Verify if token ID exists",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "params.tokenID"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          },
          "description": "Token Id"
        }
      ],
      "name": "exists",
      "longname": "ERC721Collectibles#exists",
      "kind": "function",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000330",
      "___s": true
    },
    {
      "comment": "/**\n   * Verify if it is limited\n   * @returns {Promise<boolean>}\n   */",
      "meta": {
        "range": [
          2339,
          2443
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 91,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003380",
          "name": "ERC721Collectibles#isLimited",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Verify if it is limited",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          }
        }
      ],
      "name": "isLimited",
      "longname": "ERC721Collectibles#isLimited",
      "kind": "function",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000332",
      "___s": true
    },
    {
      "comment": "/**\n   * Verify what is the currentTokenId\n   * @returns {Promise<number>} Current Token Id\n   */",
      "meta": {
        "range": [
          2547,
          2688
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 99,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003402",
          "name": "ERC721Collectibles#currentTokenId",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Verify what is the currentTokenId",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          },
          "description": "Current Token Id"
        }
      ],
      "name": "currentTokenId",
      "longname": "ERC721Collectibles#currentTokenId",
      "kind": "function",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000333",
      "___s": true
    },
    {
      "comment": "/**\n   * Verify what is the getURITokenID\n   * @returns {Promise<string>} URI\n   */",
      "meta": {
        "range": [
          2778,
          2923
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 109,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003427",
          "name": "ERC721Collectibles#getURITokenID",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Verify what is the getURITokenID",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<string>"
            ]
          },
          "description": "URI"
        }
      ],
      "name": "getURITokenID",
      "longname": "ERC721Collectibles#getURITokenID",
      "kind": "function",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000334",
      "___s": true
    },
    {
      "comment": "/**\n   * Verify what is the baseURI\n   * @returns {Promise<string>} URI\n   */",
      "meta": {
        "range": [
          3007,
          3106
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 120,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003453",
          "name": "ERC721Collectibles#baseURI",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Verify what is the baseURI",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<string>"
            ]
          },
          "description": "URI"
        }
      ],
      "name": "baseURI",
      "longname": "ERC721Collectibles#baseURI",
      "kind": "function",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000336",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Ids\n   * @param {Object} params\n   * @param {Address} params.address\n   * @returns {number[]} ids\n   */",
      "meta": {
        "range": [
          3229,
          3433
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 130,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003475",
          "name": "ERC721Collectibles#getRegisteredIDs",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Ids",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Array.<number>"
            ]
          },
          "description": "ids"
        }
      ],
      "name": "getRegisteredIDs",
      "longname": "ERC721Collectibles#getRegisteredIDs",
      "kind": "function",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000337",
      "___s": true
    },
    {
      "comment": "/**\n   * Verify if ID is registered\n   * @returns {Promise<boolean>}\n   */",
      "meta": {
        "range": [
          3514,
          3683
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 143,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003514",
          "name": "ERC721Collectibles#isIDRegistered",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Verify if ID is registered",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          }
        }
      ],
      "name": "isIDRegistered",
      "longname": "ERC721Collectibles#isIDRegistered",
      "kind": "function",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000340",
      "___s": true
    },
    {
      "comment": "/**\n   * Verify what is the current price per Pack\n   * @returns {Promise<number>} Price per pack in tokens\n   */",
      "meta": {
        "range": [
          3803,
          3958
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 154,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003543",
          "name": "ERC721Collectibles#pricePerPack",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Verify what is the current price per Pack",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          },
          "description": "Price per pack in tokens"
        }
      ],
      "name": "pricePerPack",
      "longname": "ERC721Collectibles#pricePerPack",
      "kind": "function",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000343",
      "___s": true
    },
    {
      "comment": "/**\n   * Verify how much opened packs exist\n   * @returns {Promise<number>} packs\n   */",
      "meta": {
        "range": [
          4052,
          4193
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 165,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003570",
          "name": "ERC721Collectibles#openedPacks",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Verify how much opened packs exist",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          },
          "description": "packs"
        }
      ],
      "name": "openedPacks",
      "longname": "ERC721Collectibles#openedPacks",
      "kind": "function",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000344",
      "___s": true
    },
    {
      "comment": "/**\n   * Approve ERC20 Allowance\n   * @function\n   * @return {Promise<Transaction>}\n   */",
      "meta": {
        "range": [
          4289,
          4517
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 177,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003595",
          "name": "approveERC20",
          "type": "ClassProperty"
        }
      },
      "description": "Approve ERC20 Allowance",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Transaction>"
            ]
          }
        }
      ],
      "name": "approveERC20",
      "longname": "ERC721Collectibles#approveERC20",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "___id": "T000002R000345",
      "___s": true
    },
    {
      "comment": "/**\n   * Set Base Token URI\n   * @function\n   * @param {Object} params\n   * @param {string} params.URI\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          4674,
          4800
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 192,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003626",
          "name": "setBaseTokenURI",
          "type": "ClassProperty"
        }
      },
      "description": "Set Base Token URI",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "params.URI"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "setBaseTokenURI",
      "longname": "ERC721Collectibles#setBaseTokenURI",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "___id": "T000002R000349",
      "___s": true
    },
    {
      "comment": "/**\n   * Approve ERC20 Allowance\n   * @function\n   * @param {Object} params\n   * @param {Address} params.address\n   * @param {number} params.amount\n   * @return {Promise<boolean>}\n   */",
      "meta": {
        "range": [
          4992,
          5148
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 204,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003650",
          "name": "isApproved",
          "type": "ClassProperty"
        }
      },
      "description": "Approve ERC20 Allowance",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.address"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          }
        }
      ],
      "name": "isApproved",
      "longname": "ERC721Collectibles#isApproved",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "___id": "T000002R000351",
      "___s": true
    },
    {
      "comment": "/**\n   * open Pack of tokens\n   * @param {Object} params\n   * @param {number} params.amount Amount of packs to open\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          5318,
          5456
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 216,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003675",
          "name": "ERC721Collectibles#openPack",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "open Pack of tokens",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Amount of packs to open",
          "name": "params.amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "openPack",
      "longname": "ERC721Collectibles#openPack",
      "kind": "function",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000357",
      "___s": true
    },
    {
      "comment": "/**\n   * Mint created TokenID\n   * @param {Object} params\n   * @param {number} params.tokenID\n   */",
      "meta": {
        "range": [
          5562,
          5694
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 227,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003702",
          "name": "ERC721Collectibles#mint",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Mint created TokenID",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.tokenID"
        }
      ],
      "name": "mint",
      "longname": "ERC721Collectibles#mint",
      "kind": "function",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000359",
      "___s": true
    },
    {
      "comment": "/**\n   * set Purchase Token Address\n   * @param {Object} params\n   * @param {Address} params.purchaseToken\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          5855,
          6055
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 239,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003729",
          "name": "ERC721Collectibles#setPurchaseTokenAddress",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "set Purchase Token Address",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.purchaseToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "setPurchaseTokenAddress",
      "longname": "ERC721Collectibles#setPurchaseTokenAddress",
      "kind": "function",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000361",
      "___s": true
    },
    {
      "comment": "/**\n   * Set Stake Address\n   * @param {Object} params\n   * @param {Address} params.purchaseToken\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          6207,
          6373
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 253,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003756",
          "name": "ERC721Collectibles#setStakeAddress",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Set Stake Address",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.purchaseToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "setStakeAddress",
      "longname": "ERC721Collectibles#setStakeAddress",
      "kind": "function",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000363",
      "___s": true
    },
    {
      "comment": "/**\n   * Set Fee Address\n   * @param {Object} params\n   * @param {Address} params.purchaseToken\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          6523,
          6713
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 265,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003783",
          "name": "ERC721Collectibles#setSwapBackAddress",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Set Fee Address",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.purchaseToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "setSwapBackAddress",
      "longname": "ERC721Collectibles#setSwapBackAddress",
      "kind": "function",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000365",
      "___s": true
    },
    {
      "comment": "/**\n   * Set Fee Address\n   * @param {Object} params\n   * @param {Address} params.purchaseToken\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          6863,
          7025
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 279,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003810",
          "name": "ERC721Collectibles#setFeeAddress",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Set Fee Address",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.purchaseToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "setFeeAddress",
      "longname": "ERC721Collectibles#setFeeAddress",
      "kind": "function",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000367",
      "___s": true
    },
    {
      "comment": "/**\n   * Set Price per Pack\n   * @param {Object} amount\n   * @param {number} amount.newPrice\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          7172,
          7438
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 291,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003837",
          "name": "ERC721Collectibles#setPricePerPack",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Set Price per Pack",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "amount"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "amount.newPrice"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "setPricePerPack",
      "longname": "ERC721Collectibles#setPricePerPack",
      "kind": "function",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000369",
      "___s": true
    },
    {
      "comment": "/**\n   * @link ERC721Collectibles.__deploy\n   * @function\n   * @param {Object} params\n   * @param {*} params.name\n   * @param {*} params.symbol\n   * @param {number} params.limitedAmount\n   * @param {*} params.erc20Purchase\n   * @param {string} params.feeAddress\n   * @param {string} params.otherAddress\n   * @param {*} params.callback\n   * @return {Promise<*|undefined>}\n   * @throws {Error} Please provide an erc20 address for purchases\n   * @throws {Error} Please provide a name\n   * @throws {Error} Please provide a symbol\n   */",
      "meta": {
        "range": [
          7976,
          8805
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 316,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003873",
          "name": "deploy",
          "type": "ClassProperty"
        }
      },
      "tags": [
        {
          "originalTitle": "link",
          "title": "link",
          "text": "ERC721Collectibles.__deploy",
          "value": "ERC721Collectibles.__deploy"
        }
      ],
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "*"
            ]
          },
          "name": "params.name"
        },
        {
          "type": {
            "names": [
              "*"
            ]
          },
          "name": "params.symbol"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.limitedAmount"
        },
        {
          "type": {
            "names": [
              "*"
            ]
          },
          "name": "params.erc20Purchase"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "params.feeAddress"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "params.otherAddress"
        },
        {
          "type": {
            "names": [
              "*"
            ]
          },
          "name": "params.callback"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(*|undefined)>"
            ]
          }
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Please provide an erc20 address for purchases"
        },
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Please provide a name"
        },
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Please provide a symbol"
        }
      ],
      "name": "deploy",
      "longname": "ERC721Collectibles#deploy",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "___id": "T000002R000372",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @return ERC20Contract|undefined\n   */",
      "meta": {
        "range": [
          8873,
          8924
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 356,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003960",
          "name": "getERC20Contract",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "returns": [
        {
          "description": "ERC20Contract|undefined"
        }
      ],
      "name": "getERC20Contract",
      "longname": "ERC721Collectibles#getERC20Contract",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "___id": "T000002R000383",
      "___s": true
    },
    {
      "comment": "/**\n * @typedef {Object} ERC721Standard~Options\n * @property {Web3} web3\n * @property {string} [contractAddress]\n * @property {Account} [acc]\n */",
      "meta": {
        "filename": "ERC721Standard.js",
        "lineno": 5,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {}
      },
      "kind": "typedef",
      "name": "Options",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "Web3"
            ]
          },
          "name": "web3"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "name": "contractAddress"
        },
        {
          "type": {
            "names": [
              "Account"
            ]
          },
          "optional": true,
          "name": "acc"
        }
      ],
      "memberof": "ERC721Standard",
      "longname": "ERC721Standard~Options",
      "scope": "inner",
      "___id": "T000002R000385",
      "___s": true
    },
    {
      "comment": "/**\n * ERC721Contract Object\n * @class ERC721Contract\n * @param {ERC721Standard~Options} options\n */",
      "meta": {
        "filename": "ERC721Standard.js",
        "lineno": 12,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {}
      },
      "description": "ERC721Contract Object",
      "kind": "class",
      "name": "ERC721Contract",
      "params": [
        {
          "type": {
            "names": [
              "ERC721Standard~Options"
            ]
          },
          "name": "options"
        }
      ],
      "longname": "ERC721Contract",
      "scope": "global",
      "___id": "T000002R000386",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @return {Promise<void>}\n   * @throws {Error} Contract is not deployed, first deploy it and provide a contract address\n   */",
      "meta": {
        "range": [
          664,
          1222
        ],
        "filename": "ERC721Standard.js",
        "lineno": 27,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100004002",
          "name": "__assert",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          }
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Contract is not deployed, first deploy it and provide a contract address"
        }
      ],
      "name": "__assert",
      "longname": "ERC721Standard#__assert",
      "memberof": "ERC721Standard",
      "scope": "instance",
      "___id": "T000002R000390",
      "___s": true
    },
    {
      "comment": "/**\n   * Verify if token ID exists\n   * @param {Object} params\n   * @param {number} params.tokenID\n   * @returns {Promise<boolean>} Token Id\n   */",
      "meta": {
        "range": [
          1375,
          1511
        ],
        "filename": "ERC721Standard.js",
        "lineno": 53,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100004064",
          "name": "ERC721Standard#exists",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Verify if token ID exists",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.tokenID"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "Token Id"
        }
      ],
      "name": "exists",
      "longname": "ERC721Standard#exists",
      "kind": "function",
      "memberof": "ERC721Standard",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000395",
      "___s": true
    },
    {
      "comment": "/**\n   * Verify what is the getURITokenID\n   * @param {Object} params\n   * @param {number} params.tokenID\n   * @returns {Promise<string>} URI\n   */",
      "meta": {
        "range": [
          1665,
          1810
        ],
        "filename": "ERC721Standard.js",
        "lineno": 66,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100004090",
          "name": "ERC721Standard#getURITokenID",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Verify what is the getURITokenID",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.tokenID"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<string>"
            ]
          },
          "description": "URI"
        }
      ],
      "name": "getURITokenID",
      "longname": "ERC721Standard#getURITokenID",
      "kind": "function",
      "memberof": "ERC721Standard",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000397",
      "___s": true
    },
    {
      "comment": "/**\n   * Verify what is the baseURI\n   * @returns {Promise<string>} URI\n   */",
      "meta": {
        "range": [
          1894,
          1993
        ],
        "filename": "ERC721Standard.js",
        "lineno": 77,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100004116",
          "name": "ERC721Standard#baseURI",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Verify what is the baseURI",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<string>"
            ]
          },
          "description": "URI"
        }
      ],
      "name": "baseURI",
      "longname": "ERC721Standard#baseURI",
      "kind": "function",
      "memberof": "ERC721Standard",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000399",
      "___s": true
    },
    {
      "comment": "/**\n   * Set Base Token URI\n   * @function\n   * @param {Object} params\n   * @param {string} params.URI\n   * @return {Promise<*>}\n   */",
      "meta": {
        "range": [
          2134,
          2260
        ],
        "filename": "ERC721Standard.js",
        "lineno": 88,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100004138",
          "name": "setBaseTokenURI",
          "type": "ClassProperty"
        }
      },
      "description": "Set Base Token URI",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "params.URI"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<*>"
            ]
          }
        }
      ],
      "name": "setBaseTokenURI",
      "longname": "ERC721Standard#setBaseTokenURI",
      "memberof": "ERC721Standard",
      "scope": "instance",
      "___id": "T000002R000400",
      "___s": true
    },
    {
      "comment": "/**\n   * Mint created TokenID\n   * @param {Object} params\n   * @param {number} params.tokenID\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          2408,
          2540
        ],
        "filename": "ERC721Standard.js",
        "lineno": 98,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100004162",
          "name": "ERC721Standard#mint",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Mint created TokenID",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.tokenID"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "mint",
      "longname": "ERC721Standard#mint",
      "kind": "function",
      "memberof": "ERC721Standard",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000402",
      "___s": true
    },
    {
      "comment": "/**\n   * @link ERC721Standard.__deploy\n   * @param {Object} params\n   * @param {string} params.name\n   * @param {*} params.symbol\n   * @param {function():void} params.callback\n   * @return {Promise<*|undefined>}\n   * @throws {Error} Please provide a name\n   * @throws {Error} Please provide a symbol\n   */",
      "meta": {
        "range": [
          2852,
          3270
        ],
        "filename": "ERC721Standard.js",
        "lineno": 114,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100004189",
          "name": "deploy",
          "type": "ClassProperty"
        }
      },
      "tags": [
        {
          "originalTitle": "link",
          "title": "link",
          "text": "ERC721Standard.__deploy",
          "value": "ERC721Standard.__deploy"
        }
      ],
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "params.name"
        },
        {
          "type": {
            "names": [
              "*"
            ]
          },
          "name": "params.symbol"
        },
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "name": "params.callback"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(*|undefined)>"
            ]
          }
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Please provide a name"
        },
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Please provide a symbol"
        }
      ],
      "name": "deploy",
      "longname": "ERC721Standard#deploy",
      "kind": "member",
      "memberof": "ERC721Standard",
      "scope": "instance",
      "___id": "T000002R000404",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @return ERC20Contract|undefined\n   */",
      "meta": {
        "range": [
          3338,
          3389
        ],
        "filename": "ERC721Standard.js",
        "lineno": 134,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100004249",
          "name": "getERC20Contract",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "returns": [
        {
          "description": "ERC20Contract|undefined"
        }
      ],
      "name": "getERC20Contract",
      "longname": "ERC721Standard#getERC20Contract",
      "memberof": "ERC721Standard",
      "scope": "instance",
      "___id": "T000002R000411",
      "___s": true
    },
    {
      "comment": "/**\n * @typedef {Object} IContract~Options\n * @property {Web3} web3\n * @property {ABI} abi\n * @property {string} [contractAddress]\n * @property {Account} [acc]\n */",
      "meta": {
        "filename": "IContract.js",
        "lineno": 3,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {}
      },
      "kind": "typedef",
      "name": "Options",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "Web3"
            ]
          },
          "name": "web3"
        },
        {
          "type": {
            "names": [
              "ABI"
            ]
          },
          "name": "abi"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "name": "contractAddress"
        },
        {
          "type": {
            "names": [
              "Account"
            ]
          },
          "optional": true,
          "name": "acc"
        }
      ],
      "memberof": "IContract",
      "longname": "IContract~Options",
      "scope": "inner",
      "___id": "T000002R000413",
      "___s": true
    },
    {
      "comment": "/**\n * Contract Object Interface\n * @class IContract\n * @param {IContract~Options} options\n */",
      "meta": {
        "filename": "IContract.js",
        "lineno": 11,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {}
      },
      "description": "Contract Object Interface",
      "kind": "class",
      "name": "IContract",
      "params": [
        {
          "type": {
            "names": [
              "IContract~Options"
            ]
          },
          "name": "options"
        }
      ],
      "longname": "IContract",
      "scope": "global",
      "___id": "T000002R000414",
      "___s": true
    },
    {
      "comment": "/**\n   * Initialize by awaiting {@link IContract.__assert}\n   * @function\n   * @return {Promise<void>}\n   * @throws {Error} if no {@link IContract.getAddress}, Please add a Contract Address\n   */",
      "meta": {
        "range": [
          1110,
          1320
        ],
        "filename": "IContract.js",
        "lineno": 55,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004340",
          "name": "__init__",
          "type": "ClassProperty"
        }
      },
      "description": "Initialize by awaiting {@link IContract.__assert}",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          }
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "if no {@link IContract.getAddress}, Please add a Contract Address"
        }
      ],
      "name": "__init__",
      "longname": "IContract#__init__",
      "memberof": "IContract",
      "scope": "instance",
      "___id": "T000002R000430",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @params [Object] params\n   * @params {*} params.f\n   * @params {*} params.acc\n   * @params {*} params.value\n   * @params {function():void} params.callback\n   * @return {Promise<*>}\n   */",
      "meta": {
        "range": [
          1537,
          2031
        ],
        "filename": "IContract.js",
        "lineno": 76,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004365",
          "name": "__metamaskCall",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "tags": [
        {
          "originalTitle": "params",
          "title": "params",
          "text": "[Object] params",
          "value": "[Object] params"
        },
        {
          "originalTitle": "params",
          "title": "params",
          "text": "{*} params.f",
          "value": "{*} params.f"
        },
        {
          "originalTitle": "params",
          "title": "params",
          "text": "{*} params.acc",
          "value": "{*} params.acc"
        },
        {
          "originalTitle": "params",
          "title": "params",
          "text": "{*} params.value",
          "value": "{*} params.value"
        },
        {
          "originalTitle": "params",
          "title": "params",
          "text": "{function():void} params.callback",
          "value": "{function():void} params.callback"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<*>"
            ]
          }
        }
      ],
      "name": "__metamaskCall",
      "longname": "IContract#__metamaskCall",
      "memberof": "IContract",
      "scope": "instance",
      "___id": "T000002R000431",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @params {*} f\n   * @params {boolean} call\n   * @params {*} value\n   * @params [function():void] callback\n   * @return {Promise<*>}\n   */",
      "meta": {
        "range": [
          2198,
          3108
        ],
        "filename": "IContract.js",
        "lineno": 104,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004431",
          "name": "__sendTx",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "tags": [
        {
          "originalTitle": "params",
          "title": "params",
          "text": "{*} f",
          "value": "{*} f"
        },
        {
          "originalTitle": "params",
          "title": "params",
          "text": "{boolean} call",
          "value": "{boolean} call"
        },
        {
          "originalTitle": "params",
          "title": "params",
          "text": "{*} value",
          "value": "{*} value"
        },
        {
          "originalTitle": "params",
          "title": "params",
          "text": "[function():void] callback",
          "value": "[function():void] callback"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<*>"
            ]
          }
        }
      ],
      "name": "__sendTx",
      "longname": "IContract#__sendTx",
      "memberof": "IContract",
      "scope": "instance",
      "___id": "T000002R000440",
      "___s": true
    },
    {
      "comment": "/**\n   * Deploy current contract\n   * @function\n   * @param {*} params\n   * @param {function()} callback\n   * @return {Promise<*|undefined>}\n   */",
      "meta": {
        "range": [
          3261,
          3459
        ],
        "filename": "IContract.js",
        "lineno": 145,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004592",
          "name": "__deploy",
          "type": "ClassProperty"
        }
      },
      "description": "Deploy current contract",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "*"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "name": "callback"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(*|undefined)>"
            ]
          }
        }
      ],
      "name": "__deploy",
      "longname": "IContract#__deploy",
      "memberof": "IContract",
      "scope": "instance",
      "___id": "T000002R000453",
      "___s": true
    },
    {
      "comment": "/**\n   * Asserts and uses {@link IContract.params.contract} with {@link IContract.params.abi}\n   * @function\n   * @void\n   * @throws {Error} Contract is not deployed, first deploy it and provide a contract address\n   */",
      "meta": {
        "range": [
          3685,
          3950
        ],
        "filename": "IContract.js",
        "lineno": 159,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004628",
          "name": "__assert",
          "type": "ClassProperty"
        }
      },
      "description": "Asserts and uses {@link IContract.params.contract} with {@link IContract.params.abi}",
      "kind": "function",
      "tags": [
        {
          "originalTitle": "void",
          "title": "void",
          "text": ""
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Contract is not deployed, first deploy it and provide a contract address"
        }
      ],
      "name": "__assert",
      "longname": "IContract#__assert",
      "memberof": "IContract",
      "scope": "instance",
      "___id": "T000002R000454",
      "___s": true
    },
    {
      "comment": "/**\n   * Deploy {@link IContract.params.contract} and call {@link IContract.__assert}\n   * @function\n   * @param {Object} params\n   * @param {function():void} callback\n   * @return {Promise<*|undefined>}\n   */",
      "meta": {
        "range": [
          4166,
          4411
        ],
        "filename": "IContract.js",
        "lineno": 176,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004660",
          "name": "deploy",
          "type": "ClassProperty"
        }
      },
      "description": "Deploy {@link IContract.params.contract} and call {@link IContract.__assert}",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "name": "callback"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(*|undefined)>"
            ]
          }
        }
      ],
      "name": "deploy",
      "longname": "IContract#deploy",
      "memberof": "IContract",
      "scope": "instance",
      "___id": "T000002R000455",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Get Web3 Contract to interact directly with the web3 library functions like events (https://web3js.readthedocs.io/en/v1.2.11/web3-eth-contract.html?highlight=events#contract-events)\n   */",
      "meta": {
        "range": [
          4627,
          4697
        ],
        "filename": "IContract.js",
        "lineno": 188,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004698",
          "name": "IContract#getWeb3Contract",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Web3 Contract to interact directly with the web3 library functions like events (https://web3js.readthedocs.io/en/v1.2.11/web3-eth-contract.html?highlight=events#contract-events)",
      "name": "getWeb3Contract",
      "longname": "IContract#getWeb3Contract",
      "kind": "function",
      "memberof": "IContract",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000460",
      "___s": true
    },
    {
      "comment": "/**\n   * Set new owner of {@link IContract.params.contract}\n   * @param {Object} params\n   * @param {Address} params.address\n   * @return {Promise<*|undefined>}\n   */",
      "meta": {
        "range": [
          4870,
          5022
        ],
        "filename": "IContract.js",
        "lineno": 198,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004711",
          "name": "IContract#setNewOwner",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Set new owner of {@link IContract.params.contract}",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(*|undefined)>"
            ]
          }
        }
      ],
      "name": "setNewOwner",
      "longname": "IContract#setNewOwner",
      "kind": "function",
      "memberof": "IContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000461",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Owner of {@link IContract.params.contract}\n   * @returns {Promise<string>}\n   */",
      "meta": {
        "range": [
          5122,
          5217
        ],
        "filename": "IContract.js",
        "lineno": 208,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004738",
          "name": "IContract#owner",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Owner of {@link IContract.params.contract}",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<string>"
            ]
          }
        }
      ],
      "name": "owner",
      "longname": "IContract#owner",
      "kind": "function",
      "memberof": "IContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000463",
      "___s": true
    },
    {
      "comment": "/**\n   * Get the paused state of {@link IContract.params.contract}\n   * @returns {Promise<boolean>}\n   */",
      "meta": {
        "range": [
          5329,
          5428
        ],
        "filename": "IContract.js",
        "lineno": 216,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004760",
          "name": "IContract#isPaused",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get the paused state of {@link IContract.params.contract}",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          }
        }
      ],
      "name": "isPaused",
      "longname": "IContract#isPaused",
      "kind": "function",
      "memberof": "IContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000464",
      "___s": true
    },
    {
      "comment": "/**\n   * (Admins only) Pauses the Contract\n   * @return {Promise<*|undefined>}\n   */",
      "meta": {
        "range": [
          5519,
          5643
        ],
        "filename": "IContract.js",
        "lineno": 224,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004782",
          "name": "IContract#pauseContract",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "(Admins only) Pauses the Contract",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(*|undefined)>"
            ]
          }
        }
      ],
      "name": "pauseContract",
      "longname": "IContract#pauseContract",
      "kind": "function",
      "memberof": "IContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000465",
      "___s": true
    },
    {
      "comment": "/**\n   * (Admins only) Unpause Contract\n   * @return {Promise<*|undefined>}\n   */",
      "meta": {
        "range": [
          5731,
          5859
        ],
        "filename": "IContract.js",
        "lineno": 234,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004805",
          "name": "IContract#unpauseContract",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "(Admins only) Unpause Contract",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(*|undefined)>"
            ]
          }
        }
      ],
      "name": "unpauseContract",
      "longname": "IContract#unpauseContract",
      "kind": "function",
      "memberof": "IContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000466",
      "___s": true
    },
    {
      "comment": "/**\n   * Remove Tokens from other ERC20 Address (in case of accident)\n   * @param {Object} params\n   * @param {Address} params.tokenAddress\n   * @param {Address} params.toAddress\n   */",
      "meta": {
        "range": [
          6050,
          6268
        ],
        "filename": "IContract.js",
        "lineno": 246,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004828",
          "name": "IContract#removeOtherERC20Tokens",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Remove Tokens from other ERC20 Address (in case of accident)",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.tokenAddress"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.toAddress"
        }
      ],
      "name": "removeOtherERC20Tokens",
      "longname": "IContract#removeOtherERC20Tokens",
      "kind": "function",
      "memberof": "IContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000467",
      "___s": true
    },
    {
      "comment": "/**\n   * (Admins only) Safeguards all tokens from {@link IContract.params.contract}\n   * @param {Object} params\n   * @param {Address} params.toAddress\n   * @return {Promise<*|undefined>}\n   */",
      "meta": {
        "range": [
          6467,
          6631
        ],
        "filename": "IContract.js",
        "lineno": 260,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004858",
          "name": "IContract#safeGuardAllTokens",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "(Admins only) Safeguards all tokens from {@link IContract.params.contract}",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.toAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(*|undefined)>"
            ]
          }
        }
      ],
      "name": "safeGuardAllTokens",
      "longname": "IContract#safeGuardAllTokens",
      "kind": "function",
      "memberof": "IContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000470",
      "___s": true
    },
    {
      "comment": "/**\n   * Change token address of {@link IContract.params.contract}\n   * @param {Object} params\n   * @param {Address} params.newTokenAddress\n   * @return {Promise<*|undefined>}\n   */",
      "meta": {
        "range": [
          6819,
          7013
        ],
        "filename": "IContract.js",
        "lineno": 272,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004885",
          "name": "IContract#changeTokenAddress",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Change token address of {@link IContract.params.contract}",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.newTokenAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(*|undefined)>"
            ]
          }
        }
      ],
      "name": "changeTokenAddress",
      "longname": "IContract#changeTokenAddress",
      "kind": "function",
      "memberof": "IContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000472",
      "___s": true
    },
    {
      "comment": "/**\n   * Returns the contract address\n   * @returns {string|null} Contract address\n   */",
      "meta": {
        "range": [
          7108,
          7166
        ],
        "filename": "IContract.js",
        "lineno": 284,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004912",
          "name": "IContract#getAddress",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Returns the contract address",
      "returns": [
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "Contract address"
        }
      ],
      "name": "getAddress",
      "longname": "IContract#getAddress",
      "kind": "function",
      "memberof": "IContract",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000474",
      "___s": true
    },
    {
      "comment": "/**\n   * Get the Ether balance for the current {@link IContract#getAddress} using `fromWei` util of {@link IContract#web3}\n   * @returns {Promise<string>}\n   */",
      "meta": {
        "range": [
          7333,
          7474
        ],
        "filename": "IContract.js",
        "lineno": 292,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004922",
          "name": "IContract#getBalance",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get the Ether balance for the current {@link IContract#getAddress} using `fromWei` util of {@link IContract#web3}",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<string>"
            ]
          }
        }
      ],
      "name": "getBalance",
      "longname": "IContract#getBalance",
      "kind": "function",
      "memberof": "IContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000475",
      "___s": true
    },
    {
      "comment": "/**\n   * Get contract current user/sender address\n   * @return {Promise<string>|string}\n   */",
      "meta": {
        "range": [
          7574,
          7738
        ],
        "filename": "IContract.js",
        "lineno": 301,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004953",
          "name": "IContract#getUserAddress",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get contract current user/sender address",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<string>",
              "string"
            ]
          }
        }
      ],
      "name": "getUserAddress",
      "longname": "IContract#getUserAddress",
      "kind": "function",
      "memberof": "IContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000477",
      "___s": true
    },
    {
      "comment": "/**\n   * Verify that current user/sender is admin, throws an error otherwise\n   * @async\n   * @throws {Error} Only admin can perform this operation\n   * @void\n   */",
      "meta": {
        "range": [
          7909,
          8208
        ],
        "filename": "IContract.js",
        "lineno": 314,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004986",
          "name": "IContract#onlyOwner",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Verify that current user/sender is admin, throws an error otherwise",
      "async": true,
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Only admin can perform this operation"
        }
      ],
      "tags": [
        {
          "originalTitle": "void",
          "title": "void",
          "text": ""
        }
      ],
      "name": "onlyOwner",
      "longname": "IContract#onlyOwner",
      "kind": "function",
      "memberof": "IContract",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000479",
      "___s": true
    },
    {
      "comment": "/**\n   * Verify that contract is not paused before sending a transaction, throws an error otherwise\n   * @async\n   * @throws {Error} Contract is paused\n   * @void\n   */",
      "meta": {
        "range": [
          8383,
          8566
        ],
        "filename": "IContract.js",
        "lineno": 330,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100005020",
          "name": "IContract#whenNotPaused",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Verify that contract is not paused before sending a transaction, throws an error otherwise",
      "async": true,
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Contract is paused"
        }
      ],
      "tags": [
        {
          "originalTitle": "void",
          "title": "void",
          "text": ""
        }
      ],
      "name": "whenNotPaused",
      "longname": "IContract#whenNotPaused",
      "kind": "function",
      "memberof": "IContract",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000483",
      "___s": true
    },
    {
      "comment": "/**\n * @typedef {Object} ExchangeContract~Options\n * @property {number} decimals\n * @property {string} tokenAddress\n * @property {Web3} web3\n * @property {string} [contractAddress]\n * @property {Account} [acc]\n */",
      "meta": {
        "filename": "ExchangeContract.js",
        "lineno": 5,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {}
      },
      "kind": "typedef",
      "name": "Options",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "decimals"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "tokenAddress"
        },
        {
          "type": {
            "names": [
              "Web3"
            ]
          },
          "name": "web3"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "name": "contractAddress"
        },
        {
          "type": {
            "names": [
              "Account"
            ]
          },
          "optional": true,
          "name": "acc"
        }
      ],
      "memberof": "ExchangeContract",
      "longname": "ExchangeContract~Options",
      "scope": "inner",
      "___id": "T000002R000486",
      "___s": true
    },
    {
      "comment": "/**\n * Exchange Contract Object\n * @class ExchangeContract\n * @param {ExchangeContract~Options} options\n */",
      "meta": {
        "filename": "ExchangeContract.js",
        "lineno": 14,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {}
      },
      "description": "Exchange Contract Object",
      "kind": "class",
      "name": "ExchangeContract",
      "params": [
        {
          "type": {
            "names": [
              "ExchangeContract~Options"
            ]
          },
          "name": "options"
        }
      ],
      "longname": "ExchangeContract",
      "scope": "global",
      "___id": "T000002R000487",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Events\n   * @returns {Promise<number[]>} Get Events ID\n   */",
      "meta": {
        "range": [
          641,
          817
        ],
        "filename": "ExchangeContract.js",
        "lineno": 28,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005072",
          "name": "ExchangeContract#getEvents",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Events",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<number>>"
            ]
          },
          "description": "Get Events ID"
        }
      ],
      "name": "getEvents",
      "longname": "ExchangeContract#getEvents",
      "kind": "function",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000491",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Events\n   * @returns {Promise<number[]>} Get Events ID\n   */",
      "meta": {
        "range": [
          897,
          1089
        ],
        "filename": "ExchangeContract.js",
        "lineno": 40,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005108",
          "name": "ExchangeContract#getMyEvents",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Events",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<number>>"
            ]
          },
          "description": "Get Events ID"
        }
      ],
      "name": "getMyEvents",
      "longname": "ExchangeContract#getMyEvents",
      "kind": "function",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000493",
      "___s": true
    },
    {
      "comment": "/**\n   * @typedef {Object} ExchangeContract~EventData\n   * @property {number} _resultId\n   * @property {string} name\n   * @property {string} urlOracle\n   * @property {boolean} isResolved\n   */",
      "meta": {
        "filename": "ExchangeContract.js",
        "lineno": 48,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {}
      },
      "kind": "typedef",
      "name": "EventData",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "_resultId"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "urlOracle"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "name": "isResolved"
        }
      ],
      "memberof": "ExchangeContract",
      "longname": "ExchangeContract~EventData",
      "scope": "inner",
      "___id": "T000002R000495",
      "___s": true
    },
    {
      "comment": "/**\n   * Get EventData\n   * @param {Object} event\n   * @param {number} event.event_id\n   * @return {Promise<ExchangeContract~EventData>}\n   */",
      "meta": {
        "range": [
          1434,
          1725
        ],
        "filename": "ExchangeContract.js",
        "lineno": 62,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005146",
          "name": "ExchangeContract#getEventData",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Get EventData",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "event"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.event_id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<ExchangeContract~EventData>"
            ]
          }
        }
      ],
      "name": "getEventData",
      "longname": "ExchangeContract#getEventData",
      "kind": "function",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000496",
      "___s": true
    },
    {
      "comment": "/**\n   * @typedef {Object} ExchangeContract~EventHoldings\n   * @property {number} liquidityA\n   * @property {number} liquidityB\n   * @property {number} inPoolBalancesA\n   * @property {number} inPoolBalancesB\n   * @property {number} outPoolBalancesA\n   * @property {number} outPoolBalancesB\n   */",
      "meta": {
        "filename": "ExchangeContract.js",
        "lineno": 76,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {}
      },
      "kind": "typedef",
      "name": "EventHoldings",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "liquidityA"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "liquidityB"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "inPoolBalancesA"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "inPoolBalancesB"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "outPoolBalancesA"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "outPoolBalancesB"
        }
      ],
      "memberof": "ExchangeContract",
      "longname": "ExchangeContract~EventHoldings",
      "scope": "inner",
      "___id": "T000002R000503",
      "___s": true
    },
    {
      "comment": "/**\n   * Get My Event Holdings\n   * @param {Object} event\n   * @param {number} event.event_id\n   * @return {Promise<ExchangeContract~EventHoldings>}\n   */",
      "meta": {
        "range": [
          2185,
          2549
        ],
        "filename": "ExchangeContract.js",
        "lineno": 92,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005198",
          "name": "ExchangeContract#getMyEventHoldings",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Get My Event Holdings",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "event"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.event_id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<ExchangeContract~EventHoldings>"
            ]
          }
        }
      ],
      "name": "getMyEventHoldings",
      "longname": "ExchangeContract#getMyEventHoldings",
      "kind": "function",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000504",
      "___s": true
    },
    {
      "comment": "/**\n   * @typedef {Object} ExchangeContract~SpaceData\n   * @property {number} inPool\n   * @property {number} amount\n   * @property {number} fees\n   * @property {number} cost\n   * @property {number} liqAmount\n   * @property {number} inPool\n   * @property {number} outPool\n   * @property {number} odd\n   * @property {number} _id\n   */",
      "meta": {
        "filename": "ExchangeContract.js",
        "lineno": 108,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {}
      },
      "kind": "typedef",
      "name": "SpaceData",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "inPool"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "amount"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "fees"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "cost"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "liqAmount"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "inPool"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "outPool"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "odd"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "_id"
        }
      ],
      "memberof": "ExchangeContract",
      "longname": "ExchangeContract~SpaceData",
      "scope": "inner",
      "___id": "T000002R000513",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Result Space Data\n   * @param {Object} event\n   * @param {number} event.event_id\n   * @param {number} event.resultSpace_id\n   * @return {Promise<ExchangeContract~SpaceData>}\n   */",
      "meta": {
        "range": [
          3084,
          3762
        ],
        "filename": "ExchangeContract.js",
        "lineno": 128,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005254",
          "name": "ExchangeContract#getResultSpaceData",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Result Space Data",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "event"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.event_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.resultSpace_id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<ExchangeContract~SpaceData>"
            ]
          }
        }
      ],
      "name": "getResultSpaceData",
      "longname": "ExchangeContract#getResultSpaceData",
      "kind": "function",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000514",
      "___s": true
    },
    {
      "comment": "/**\n   * To see if Event is open\n   * @returns {Promise<boolean>}\n   */",
      "meta": {
        "range": [
          3840,
          3968
        ],
        "filename": "ExchangeContract.js",
        "lineno": 154,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005377",
          "name": "ExchangeContract#isEventOpen",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "To see if Event is open",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          }
        }
      ],
      "name": "isEventOpen",
      "longname": "ExchangeContract#isEventOpen",
      "kind": "function",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000528",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Fractions Cost\n   * @param {Object} event\n   * @param {number} event.event_id\n   * @param {number} event.resultSpace_id\n   * @param {number} event.fractions_amount\n   * @return {Promise<number>}\n   */",
      "meta": {
        "range": [
          4188,
          4499
        ],
        "filename": "ExchangeContract.js",
        "lineno": 169,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005399",
          "name": "ExchangeContract#getFractionsCost",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Fractions Cost",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "event"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.event_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.resultSpace_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.fractions_amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "getFractionsCost",
      "longname": "ExchangeContract#getFractionsCost",
      "kind": "function",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000529",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Slippage on Buy\n   * @param {Object} event\n   * @param {number} event.event_id\n   * @param {number} event.resultSpace_id\n   * @param {number} event.fractions_amount\n   * @returns {Promise<number>}\n   */",
      "meta": {
        "range": [
          4721,
          4945
        ],
        "filename": "ExchangeContract.js",
        "lineno": 189,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005438",
          "name": "ExchangeContract#getSlipageOnBuy",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Slippage on Buy",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "event"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.event_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.resultSpace_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.fractions_amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "getSlipageOnBuy",
      "longname": "ExchangeContract#getSlipageOnBuy",
      "kind": "function",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000533",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Slippage on Buy\n   * @param {Object} event\n   * @param {number} event.event_id\n   * @param {number} event.resultSpace_id\n   * @param {number} event.fractions_amount\n   * @returns {Promise<number>}\n   */",
      "meta": {
        "range": [
          5167,
          5393
        ],
        "filename": "ExchangeContract.js",
        "lineno": 204,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005470",
          "name": "ExchangeContract#getSlipageOnSell",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Get Slippage on Buy",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "event"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.event_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.resultSpace_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.fractions_amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "getSlipageOnSell",
      "longname": "ExchangeContract#getSlipageOnSell",
      "kind": "function",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000537",
      "___s": true
    },
    {
      "comment": "/**\n   * Create an Event\n   * @function\n   * @param {Object} event\n   * @param {number[]} resultSpaceIds\n   * @param {string} urlOracle\n   * @param {string} eventName\n   * @param {number} ethAmount\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          5646,
          6090
        ],
        "filename": "ExchangeContract.js",
        "lineno": 222,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005502",
          "name": "createEvent",
          "type": "ClassProperty"
        }
      },
      "description": "Create an Event",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "event"
        },
        {
          "type": {
            "names": [
              "Array.<number>"
            ]
          },
          "name": "resultSpaceIds"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "urlOracle"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "eventName"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "ethAmount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "createEvent",
      "longname": "ExchangeContract#createEvent",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "___id": "T000002R000541",
      "___s": true
    },
    {
      "comment": "/**\n   * Resolve Event\n   * @function\n   * @param {Object} event\n   * @param {number} event.event_id\n   * @param {number} event.resultSpace_id\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          6287,
          6468
        ],
        "filename": "ExchangeContract.js",
        "lineno": 249,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005558",
          "name": "resolveEvent",
          "type": "ClassProperty"
        }
      },
      "description": "Resolve Event",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "event"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.event_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.resultSpace_id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "resolveEvent",
      "longname": "ExchangeContract#resolveEvent",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "___id": "T000002R000547",
      "___s": true
    },
    {
      "comment": "/**\n   * Add Liquidity\n   * @function\n   * @param {Object} event\n   * @param {number} event.event_id\n   * @param {number} event.ethAmount\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          6660,
          6926
        ],
        "filename": "ExchangeContract.js",
        "lineno": 263,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005585",
          "name": "addLiquidity",
          "type": "ClassProperty"
        }
      },
      "description": "Add Liquidity",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "event"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.event_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.ethAmount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "addLiquidity",
      "longname": "ExchangeContract#addLiquidity",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "___id": "T000002R000550",
      "___s": true
    },
    {
      "comment": "/**\n   * Remove Liquidity\n   * @function\n   * @param {Object} event\n   * @param {number} event.event_id\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          7084,
          7225
        ],
        "filename": "ExchangeContract.js",
        "lineno": 279,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005624",
          "name": "removeLiquidity",
          "type": "ClassProperty"
        }
      },
      "description": "Remove Liquidity",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "event"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.event_id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "removeLiquidity",
      "longname": "ExchangeContract#removeLiquidity",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "___id": "T000002R000554",
      "___s": true
    },
    {
      "comment": "/**\n   * Buy Fractions\n   * @function\n   * @param {Object} event\n   * @param {number} event.event_id\n   * @param {number} event.resultSpace_id\n   * @param {number} event.fractions_amount\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          7466,
          8034
        ],
        "filename": "ExchangeContract.js",
        "lineno": 292,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005648",
          "name": "buy",
          "type": "ClassProperty"
        }
      },
      "description": "Buy Fractions",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "event"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.event_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.resultSpace_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.fractions_amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "buy",
      "longname": "ExchangeContract#buy",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "___id": "T000002R000556",
      "___s": true
    },
    {
      "comment": "/**\n   * Sell Fractions\n   * @function\n   * @param {Object} event\n   * @param {number} event.event_id\n   * @param {number} event.resultSpace_id\n   * @param {number} event.fractions_amount\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          8276,
          8477
        ],
        "filename": "ExchangeContract.js",
        "lineno": 319,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005715",
          "name": "sell",
          "type": "ClassProperty"
        }
      },
      "description": "Sell Fractions",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "event"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.event_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.resultSpace_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.fractions_amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "sell",
      "longname": "ExchangeContract#sell",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "___id": "T000002R000566",
      "___s": true
    },
    {
      "comment": "/**\n   * Take Fractions out of the pool\n   * @function\n   * @param {Object} event\n   * @param {number} event.event_id\n   * @param {number} event.resultSpace_id\n   * @param {number} event.fractions_amount\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          8735,
          8954
        ],
        "filename": "ExchangeContract.js",
        "lineno": 334,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005745",
          "name": "pullFractions",
          "type": "ClassProperty"
        }
      },
      "description": "Take Fractions out of the pool",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "event"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.event_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.resultSpace_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.fractions_amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "pullFractions",
      "longname": "ExchangeContract#pullFractions",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "___id": "T000002R000570",
      "___s": true
    },
    {
      "comment": "/**\n   * Move Fractions to the Pool\n   * @function\n   * @param {Object} event\n   * @param {number} event.event_id\n   * @param {number} event.resultSpace_id\n   * @param {number} event.fractions_amount\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          9208,
          9427
        ],
        "filename": "ExchangeContract.js",
        "lineno": 349,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005775",
          "name": "pushFractions",
          "type": "ClassProperty"
        }
      },
      "description": "Move Fractions to the Pool",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "event"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.event_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.resultSpace_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.fractions_amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "pushFractions",
      "longname": "ExchangeContract#pushFractions",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "___id": "T000002R000574",
      "___s": true
    },
    {
      "comment": "/**\n   * Withdraw Wins on end of Event\n   * @function\n   * @param {Object} event\n   * @param {number} event.event_id\n   * @param {number} event.resultSpace_id\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          9640,
          9821
        ],
        "filename": "ExchangeContract.js",
        "lineno": 363,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005805",
          "name": "withdrawWins",
          "type": "ClassProperty"
        }
      },
      "description": "Withdraw Wins on end of Event",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "event"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.event_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "event.resultSpace_id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "withdrawWins",
      "longname": "ExchangeContract#withdrawWins",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "___id": "T000002R000578",
      "___s": true
    },
    {
      "comment": "/**\n   * Deploy the Pool Contract\n   * @param {Object} params\n   * @param {function():void} params.callback\n   * @return {Promise<*|undefined>}\n   */",
      "meta": {
        "range": [
          9977,
          10222
        ],
        "filename": "ExchangeContract.js",
        "lineno": 375,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005832",
          "name": "deploy",
          "type": "ClassProperty"
        }
      },
      "description": "Deploy the Pool Contract",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "name": "params.callback"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(*|undefined)>"
            ]
          }
        }
      ],
      "name": "deploy",
      "longname": "ExchangeContract#deploy",
      "kind": "member",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "___id": "T000002R000581",
      "___s": true
    },
    {
      "comment": "/**\n * @typedef {Object} StakingContract~Options\n * @property {string} tokenAddress\n * @property {Web3} web3\n * @property {string} [contractAddress]\n * @property {Account} [acc]\n */",
      "meta": {
        "filename": "StakingContract.js",
        "lineno": 7,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {}
      },
      "kind": "typedef",
      "name": "Options",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "tokenAddress"
        },
        {
          "type": {
            "names": [
              "Web3"
            ]
          },
          "name": "web3"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "name": "contractAddress"
        },
        {
          "type": {
            "names": [
              "Account"
            ]
          },
          "optional": true,
          "name": "acc"
        }
      ],
      "memberof": "StakingContract",
      "longname": "StakingContract~Options",
      "scope": "inner",
      "___id": "T000002R000587",
      "___s": true
    },
    {
      "comment": "/**\n * Staking Contract Object\n * @class StakingContract\n * @param {StakingContract~Options} options\n */",
      "meta": {
        "filename": "StakingContract.js",
        "lineno": 15,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {}
      },
      "description": "Staking Contract Object",
      "kind": "class",
      "name": "StakingContract",
      "params": [
        {
          "type": {
            "names": [
              "StakingContract~Options"
            ]
          },
          "name": "options"
        }
      ],
      "longname": "StakingContract",
      "scope": "global",
      "___id": "T000002R000588",
      "___s": true
    },
    {
      "comment": "/**\n   * Get ERC20 Address of the Contract\n   * @returns {Promise<Address>}\n   */",
      "meta": {
        "range": [
          960,
          1088
        ],
        "filename": "StakingContract.js",
        "lineno": 40,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100005945",
          "name": "StakingContract#erc20",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get ERC20 Address of the Contract",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Address>"
            ]
          }
        }
      ],
      "name": "erc20",
      "longname": "StakingContract#erc20",
      "kind": "function",
      "memberof": "StakingContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000596",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Token Amount of ERC20 Address\n   * @function\n   * @param {Object} params\n   * @param {Address} params.address\n   * @returns {Promise<number>}\n   */",
      "meta": {
        "range": [
          1255,
          1349
        ],
        "filename": "StakingContract.js",
        "lineno": 54,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100005969",
          "name": "getTokenAmount",
          "type": "ClassProperty"
        }
      },
      "description": "Get Token Amount of ERC20 Address",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "getTokenAmount",
      "longname": "StakingContract#getTokenAmount",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000597",
      "___s": true
    },
    {
      "comment": "/**\n   * Get All Tokens Locked for the APR\n   * @returns {Promise<number>}\n   */",
      "meta": {
        "range": [
          1436,
          1672
        ],
        "filename": "StakingContract.js",
        "lineno": 60,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100005983",
          "name": "StakingContract#futureLockedTokens",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get All Tokens Locked for the APR",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "futureLockedTokens",
      "longname": "StakingContract#futureLockedTokens",
      "kind": "function",
      "memberof": "StakingContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000599",
      "___s": true
    },
    {
      "comment": "/**\n   * Get All Tokens Available for the Subscription Amount\n   * @returns {Promise<number>}\n   */",
      "meta": {
        "range": [
          1778,
          2008
        ],
        "filename": "StakingContract.js",
        "lineno": 72,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006022",
          "name": "StakingContract#availableTokens",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get All Tokens Available for the Subscription Amount",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "availableTokens",
      "longname": "StakingContract#availableTokens",
      "kind": "function",
      "memberof": "StakingContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000601",
      "___s": true
    },
    {
      "comment": "/**\n   * Get All Tokens Held in Stake at that specific moment\n   * @returns {Promise<number>}\n   */",
      "meta": {
        "range": [
          2114,
          2334
        ],
        "filename": "StakingContract.js",
        "lineno": 84,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006061",
          "name": "StakingContract#heldTokens",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Get All Tokens Held in Stake at that specific moment",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "heldTokens",
      "longname": "StakingContract#heldTokens",
      "kind": "function",
      "memberof": "StakingContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000603",
      "___s": true
    },
    {
      "comment": "/**\n   * Get APR Amount based on amount of timestamp, amount and APR of that product\n   * @function\n   * @param {Object} params\n   * @param {Integer} params.APR\n   * @param {Date} params.startDate\n   * @param {Date} params.endDate\n   * @param {Integer} params.amount Token Amount\n   * @returns {Promise<number>}\n   */",
      "meta": {
        "range": [
          2658,
          3206
        ],
        "filename": "StakingContract.js",
        "lineno": 102,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006100",
          "name": "getAPRAmount",
          "type": "ClassProperty"
        }
      },
      "description": "Get APR Amount based on amount of timestamp, amount and APR of that product",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "params.APR"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "name": "params.startDate"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "name": "params.endDate"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Token Amount",
          "name": "params.amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          }
        }
      ],
      "name": "getAPRAmount",
      "longname": "StakingContract#getAPRAmount",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000605",
      "___s": true
    },
    {
      "comment": "/**\n   * Creates a product\n   * @param {Object} params\n   * @param {Date} params.startDate\n   * @param {Date} params.endDate\n   * @param {Integer} params.totalMaxAmount\n   * @param {Integer} params.individualMinimumAmount\n   * @param {Integer} params.APR\n   * @param {Boolean} params.lockedUntilFinalization\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          3568,
          4282
        ],
        "filename": "StakingContract.js",
        "lineno": 133,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006170",
          "name": "StakingContract#createProduct",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Creates a product",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "name": "params.startDate"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "name": "params.endDate"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "params.totalMaxAmount"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "params.individualMinimumAmount"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "params.APR"
        },
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "name": "params.lockedUntilFinalization"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "createProduct",
      "longname": "StakingContract#createProduct",
      "kind": "function",
      "memberof": "StakingContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000611",
      "___s": true
    },
    {
      "comment": "/**\n   * Get All Available Products Ids\n   * @function\n   * @returns {Promise<number[]>} ids\n   */",
      "meta": {
        "range": [
          4387,
          4512
        ],
        "filename": "StakingContract.js",
        "lineno": 166,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006242",
          "name": "getProducts",
          "type": "ClassProperty"
        }
      },
      "description": "Get All Available Products Ids",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<number>>"
            ]
          },
          "description": "ids"
        }
      ],
      "name": "getProducts",
      "longname": "StakingContract#getProducts",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000618",
      "___s": true
    },
    {
      "comment": "/**\n   * @typedef {Object} StakingContract~Product\n   * @property {Date} createdAt\n   * @property {Date} startDate\n   * @property {Date} endDate\n   * @property {boolean} lockedUntilFinalization\n   * @property {number} APR\n   * @property {number} currentAmount\n   * @property {number} individualMinimumAmount\n   * @property {number} totalMaxAmount\n   * @property {number[]} subscriptionIds\n   * @property {Address[]} subscribers\n   * @property {number} _id\n   */",
      "meta": {
        "filename": "StakingContract.js",
        "lineno": 171,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {}
      },
      "kind": "typedef",
      "name": "Product",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "name": "createdAt"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "name": "startDate"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "name": "endDate"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "name": "lockedUntilFinalization"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "APR"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "currentAmount"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "individualMinimumAmount"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "totalMaxAmount"
        },
        {
          "type": {
            "names": [
              "Array.<number>"
            ]
          },
          "name": "subscriptionIds"
        },
        {
          "type": {
            "names": [
              "Array.<Address>"
            ]
          },
          "name": "subscribers"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "_id"
        }
      ],
      "memberof": "StakingContract",
      "longname": "StakingContract~Product",
      "scope": "inner",
      "___id": "T000002R000619",
      "___s": true
    },
    {
      "comment": "/**\n   * Get product\n   * @function\n   * @param {Object} params\n   * @param {number} params.product_id\n   * @return {Promise<StakingContract~Product>}\n   */",
      "meta": {
        "range": [
          5140,
          6062
        ],
        "filename": "StakingContract.js",
        "lineno": 193,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006263",
          "name": "getProduct",
          "type": "ClassProperty"
        }
      },
      "description": "Get product",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.product_id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<StakingContract~Product>"
            ]
          }
        }
      ],
      "name": "getProduct",
      "longname": "StakingContract#getProduct",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000620",
      "___s": true
    },
    {
      "comment": "/**\n   * Approve ERC20 Allowance for Transfer for Subscribe Product\n   * @function\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          6199,
          6532
        ],
        "filename": "StakingContract.js",
        "lineno": 228,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006388",
          "name": "approveERC20Transfer",
          "type": "ClassProperty"
        }
      },
      "description": "Approve ERC20 Allowance for Transfer for Subscribe Product",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "approveERC20Transfer",
      "longname": "StakingContract#approveERC20Transfer",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000634",
      "___s": true
    },
    {
      "comment": "/**\n   * Subscribe to a product Staking\n   * @function\n   * @param {Object} params\n   * @param {number} params.product_id\n   * @param {number} params.amount\n   * @throws {Error} Has to Approve Token Transfer First, use the 'approve' Call\n   * @returns {Promise<boolean>} Success\n   */",
      "meta": {
        "range": [
          6823,
          7544
        ],
        "filename": "StakingContract.js",
        "lineno": 248,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006430",
          "name": "subscribeProduct",
          "type": "ClassProperty"
        }
      },
      "description": "Subscribe to a product Staking",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.product_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.amount"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Has to Approve Token Transfer First, use the 'approve' Call"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "Success"
        }
      ],
      "name": "subscribeProduct",
      "longname": "StakingContract#subscribeProduct",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000638",
      "___s": true
    },
    {
      "comment": "/**\n   * @typedef {Object} StakingContract~ProductSubscription\n   * @property {number} amount\n   * @property {number} APR\n   * @property {number} withdrawAmount\n   * @property {number} productId\n   * @property {number} _id\n   * @property {Address} subscriberAddress\n   * @property {Date} startDate\n   * @property {Date} endDate\n   * @property {boolean} finalized\n   */",
      "meta": {
        "filename": "StakingContract.js",
        "lineno": 273,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {}
      },
      "kind": "typedef",
      "name": "ProductSubscription",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "amount"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "APR"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "withdrawAmount"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "productId"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "_id"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "subscriberAddress"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "name": "startDate"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "name": "endDate"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "name": "finalized"
        }
      ],
      "memberof": "StakingContract",
      "longname": "StakingContract~ProductSubscription",
      "scope": "inner",
      "___id": "T000002R000647",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Subscription from product\n   * @function\n   * @param {Object} params\n   * @param {number} params.subscription_id\n   * @param {number} params.product_id\n   * @return {Promise<StakingContract~ProductSubscription>}\n   */",
      "meta": {
        "range": [
          8153,
          8947
        ],
        "filename": "StakingContract.js",
        "lineno": 294,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006505",
          "name": "getSubscription",
          "type": "ClassProperty"
        }
      },
      "description": "Get Subscription from product",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.subscription_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.product_id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<StakingContract~ProductSubscription>"
            ]
          }
        }
      ],
      "name": "getSubscription",
      "longname": "StakingContract#getSubscription",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000648",
      "___s": true
    },
    {
      "comment": "/**\n   * Withdraw Subscription to a product Staking\n   * @function\n   * @param {Object} params\n   * @param {number} params.subscription_id\n   * @param {number} params.product_id\n   * @return {Promise<TransactionObject>}\n   */",
      "meta": {
        "range": [
          9179,
          9382
        ],
        "filename": "StakingContract.js",
        "lineno": 329,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006616",
          "name": "withdrawSubscription",
          "type": "ClassProperty"
        }
      },
      "description": "Withdraw Subscription to a product Staking",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.subscription_id"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.product_id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          }
        }
      ],
      "name": "withdrawSubscription",
      "longname": "StakingContract#withdrawSubscription",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000661",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Subscriptions by Address\n   * @function\n   * @param {Object} params\n   * @param {Address} params.address\n   * @returns {Promise<number[]>} subscriptions_ids\n   */",
      "meta": {
        "range": [
          9564,
          9808
        ],
        "filename": "StakingContract.js",
        "lineno": 342,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006643",
          "name": "getSubscriptionsByAddress",
          "type": "ClassProperty"
        }
      },
      "description": "Get Subscriptions by Address",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<number>>"
            ]
          },
          "description": "subscriptions_ids"
        }
      ],
      "name": "getSubscriptionsByAddress",
      "longname": "StakingContract#getSubscriptionsByAddress",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000664",
      "___s": true
    },
    {
      "comment": "/**\n   * Get All Subscriptions done\n   * @function\n   * @returns {Promise<Subscription[]>} subscriptions\n   */",
      "meta": {
        "range": [
          9925,
          10537
        ],
        "filename": "StakingContract.js",
        "lineno": 355,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006684",
          "name": "getAllSubscriptions",
          "type": "ClassProperty"
        }
      },
      "description": "Get All Subscriptions done",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<Subscription>>"
            ]
          },
          "description": "subscriptions"
        }
      ],
      "name": "getAllSubscriptions",
      "longname": "StakingContract#getAllSubscriptions",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000667",
      "___s": true
    },
    {
      "comment": "/**\n   * Transfer Tokens by the Admin to ensure APR Amount\n   * @function\n   * @param {Object} params\n   * @param {number} params.amount\n   * @param {Promise<number>} amount\n   */",
      "meta": {
        "range": [
          10723,
          10904
        ],
        "filename": "StakingContract.js",
        "lineno": 383,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006753",
          "name": "StakingContract#depositAPRTokensByAdmin",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Transfer Tokens by the Admin to ensure APR Amount",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.amount"
        },
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          },
          "name": "amount"
        }
      ],
      "name": "depositAPRTokensByAdmin",
      "longname": "StakingContract#depositAPRTokensByAdmin",
      "memberof": "StakingContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000674",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Total Amount of tokens needed to be deposited by Admin to ensure APR for all available Products\n   * @function\n   * @return {Promise<number>} Amount\n   */",
      "meta": {
        "range": [
          11078,
          11722
        ],
        "filename": "StakingContract.js",
        "lineno": 395,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006777",
          "name": "getTotalNeededTokensForAPRbyAdmin",
          "type": "ClassProperty"
        }
      },
      "description": "Get Total Amount of tokens needed to be deposited by Admin to ensure APR for all available Products",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          },
          "description": "Amount"
        }
      ],
      "name": "getTotalNeededTokensForAPRbyAdmin",
      "longname": "StakingContract#getTotalNeededTokensForAPRbyAdmin",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000678",
      "___s": true
    },
    {
      "comment": "/**\n   * @async\n   * @function\n   * @throws {Error} Contract is not deployed, first deploy it and provide a contract address\n   * @void\n   */",
      "meta": {
        "range": [
          11870,
          12410
        ],
        "filename": "StakingContract.js",
        "lineno": 423,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006862",
          "name": "__assert",
          "type": "ClassProperty"
        }
      },
      "async": true,
      "kind": "function",
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Contract is not deployed, first deploy it and provide a contract address"
        }
      ],
      "tags": [
        {
          "originalTitle": "void",
          "title": "void",
          "text": ""
        }
      ],
      "name": "__assert",
      "longname": "StakingContract#__assert",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000688",
      "___s": true
    },
    {
      "comment": "/**\n   * Deploy the Staking Contract\n   * @function\n   * @param [Object] params\n   * @param {function():void} params.callback\n   * @return {Promise<*>}\n   */",
      "meta": {
        "range": [
          12574,
          12954
        ],
        "filename": "StakingContract.js",
        "lineno": 451,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006924",
          "name": "deploy",
          "type": "ClassProperty"
        }
      },
      "description": "Deploy the Staking Contract",
      "kind": "function",
      "params": [
        {
          "optional": true,
          "description": "params",
          "name": "Object"
        },
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "name": "params.callback"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<*>"
            ]
          }
        }
      ],
      "name": "deploy",
      "longname": "StakingContract#deploy",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000693",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @return ERC20Contract|undefined\n   */",
      "meta": {
        "range": [
          13022,
          13073
        ],
        "filename": "StakingContract.js",
        "lineno": 467,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006982",
          "name": "getERC20Contract",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "returns": [
        {
          "description": "ERC20Contract|undefined"
        }
      ],
      "name": "getERC20Contract",
      "longname": "StakingContract#getERC20Contract",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000698",
      "___s": true
    },
    {
      "comment": "/**\n * @typedef {Object} OpenerRealFvr~Options\n * @property {Web3} web3\n * @property {string} [contractAddress]\n * @property {Account} [acc]\n */",
      "meta": {
        "filename": "OpenerRealFvr.js",
        "lineno": 6,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {}
      },
      "kind": "typedef",
      "name": "Options",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "Web3"
            ]
          },
          "name": "web3"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "name": "contractAddress"
        },
        {
          "type": {
            "names": [
              "Account"
            ]
          },
          "optional": true,
          "name": "acc"
        }
      ],
      "memberof": "OpenerRealFvr",
      "longname": "OpenerRealFvr~Options",
      "scope": "inner",
      "___id": "T000002R000700",
      "___s": true
    },
    {
      "comment": "/**\n * OpenerRealFvr Object\n * @class OpenerRealFvr\n * @param {OpenerRealFvr~Options} options\n */",
      "meta": {
        "filename": "OpenerRealFvr.js",
        "lineno": 13,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {}
      },
      "description": "OpenerRealFvr Object",
      "kind": "class",
      "name": "OpenerRealFvr",
      "params": [
        {
          "type": {
            "names": [
              "OpenerRealFvr~Options"
            ]
          },
          "name": "options"
        }
      ],
      "longname": "OpenerRealFvr",
      "scope": "global",
      "___id": "T000002R000701",
      "___s": true
    },
    {
      "comment": "/**\n   * Asserts a new {@link ERC20Contract} on the current address\n   * @function\n   * @return {Promise<void>}\n   * @throws {Error} Contract is not deployed, first deploy it and provide a contract address\n   */",
      "meta": {
        "range": [
          776,
          1319
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 29,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007028",
          "name": "__assert",
          "type": "ClassProperty"
        }
      },
      "description": "Asserts a new {@link ERC20Contract} on the current address",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          }
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Contract is not deployed, first deploy it and provide a contract address"
        }
      ],
      "name": "__assert",
      "longname": "OpenerRealFvr#__assert",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000705",
      "___s": true
    },
    {
      "comment": "/**\n   * Buy Pack\n   * @function\n   * @param {Object} params Parameters\n   * @param {number} params.packId Pack Id\n   * @returns {Promise<Transaction>} Transaction\n   */",
      "meta": {
        "range": [
          1495,
          1616
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 57,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007090",
          "name": "buyPack",
          "type": "ClassProperty"
        }
      },
      "description": "Buy Pack",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Pack Id",
          "name": "params.packId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Transaction>"
            ]
          },
          "description": "Transaction"
        }
      ],
      "name": "buyPack",
      "longname": "OpenerRealFvr#buyPack",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000710",
      "___s": true
    },
    {
      "comment": "/**\n   * Offer Pack\n   * @function\n   * @param {Object} params Parameters\n   * @param {number} params.packId Pack Id\n   * @param {Address} params.receivingAddress Pack Id number\n   * @returns {Promise<TransactionObject>} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          1899,
          2074
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 69,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007114",
          "name": "offerPack",
          "type": "ClassProperty"
        }
      },
      "description": "Offer Pack",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Pack Id",
          "name": "params.packId"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "Pack Id number",
          "name": "params.receivingAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "offerPack",
      "longname": "OpenerRealFvr#offerPack",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000712",
      "___s": true
    },
    {
      "comment": "/**\n   * Create Pack\n   * @function\n   * @param {Object} params Parameters\n   * @param {number} params.packNumber Pack Number\n   * @param {number} params.nftAmount Amount of NFTs/Tokens\n   * @param {number} params.price Price of Pack\n   * @param {string} params.serie Serie of Pack\n   * @param {string} params.packType Pack Type\n   * @param {string} params.drop Pack Drop\n   * @param {Date} params.saleStart Start Date\n   * @param {Address | Address[]} params.saleDistributionAddresses Revenue Addresses of the First Purchase\n   * @param {number | number[]} params.saleDistributionAmounts Revenue Amounts of the First Purchase\n   * @returns {Promise<TransactionObject>} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          2806,
          3349
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 90,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007141",
          "name": "createPack",
          "type": "ClassProperty"
        }
      },
      "description": "Create Pack",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Pack Number",
          "name": "params.packNumber"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Amount of NFTs/Tokens",
          "name": "params.nftAmount"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Price of Pack",
          "name": "params.price"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Serie of Pack",
          "name": "params.serie"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Pack Type",
          "name": "params.packType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Pack Drop",
          "name": "params.drop"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Start Date",
          "name": "params.saleStart"
        },
        {
          "type": {
            "names": [
              "Address",
              "Array.<Address>"
            ]
          },
          "description": "Revenue Addresses of the First Purchase",
          "name": "params.saleDistributionAddresses"
        },
        {
          "type": {
            "names": [
              "number",
              "Array.<number>"
            ]
          },
          "description": "Revenue Amounts of the First Purchase",
          "name": "params.saleDistributionAmounts"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "createPack",
      "longname": "OpenerRealFvr#createPack",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000715",
      "___s": true
    },
    {
      "comment": "/**\n   * Edit Pack Info\n   * @function\n   * @param {Object} params Parameters\n   * @param {number} params.packId Pack Number\n   * @param {Date} params.saleStart Time of Start of the Sale\n   * @param {string} params.serie Serie of Pack\n   * @param {string} params.packType Pack Type\n   * @param {string} params.drop Pack Drop\n   * @param {number} params.price Pack Price\n   * @returns {Promise<TransactionObject>} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          3824,
          4165
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 128,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007201",
          "name": "editPackInfo",
          "type": "ClassProperty"
        }
      },
      "description": "Edit Pack Info",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Pack Number",
          "name": "params.packId"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Time of Start of the Sale",
          "name": "params.saleStart"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Serie of Pack",
          "name": "params.serie"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Pack Type",
          "name": "params.packType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Pack Drop",
          "name": "params.drop"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Pack Price",
          "name": "params.price"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "editPackInfo",
      "longname": "OpenerRealFvr#editPackInfo",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000725",
      "___s": true
    },
    {
      "comment": "/**\n   * Delete Pack\n   * @function\n   * @param {Object} params Parameters\n   * @param {number} params.packId Pack Id number\n   * @returns {Promise<TransactionObject>} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          4395,
          4530
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 150,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007249",
          "name": "deletePackById",
          "type": "ClassProperty"
        }
      },
      "description": "Delete Pack",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Pack Id number",
          "name": "params.packId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "deletePackById",
      "longname": "OpenerRealFvr#deletePackById",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000732",
      "___s": true
    },
    {
      "comment": "/**\n   * Mint Token Id (After buying a pack)\n   * @function\n   * @param {Object} params Parameters\n   * @param {number} params.tokenId Token ID\n   * @returns {Promise<TransactionObject>} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          4779,
          4896
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 161,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007273",
          "name": "mint",
          "type": "ClassProperty"
        }
      },
      "description": "Mint Token Id (After buying a pack)",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Token ID",
          "name": "params.tokenId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "mint",
      "longname": "OpenerRealFvr#mint",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000734",
      "___s": true
    },
    {
      "comment": "/**\n   * Set Purchase Token\n   * @function\n   * @param {Object} params Parameters\n   * @param {Address} params.address Token Address\n   * @returns {Promise<TransactionObject>} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          5134,
          5303
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 172,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007297",
          "name": "setPurchaseTokenAddress",
          "type": "ClassProperty"
        }
      },
      "description": "Set Purchase Token",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "Token Address",
          "name": "params.address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "setPurchaseTokenAddress",
      "longname": "OpenerRealFvr#setPurchaseTokenAddress",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000736",
      "___s": true
    },
    {
      "comment": "/**\n   * Lock the Contract\n   * @function\n   * @returns {Promise<TransactionObject>} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          5450,
          5540
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 183,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007321",
          "name": "lock",
          "type": "ClassProperty"
        }
      },
      "description": "Lock the Contract",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "lock",
      "longname": "OpenerRealFvr#lock",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000738",
      "___s": true
    },
    {
      "comment": "/**\n   * Unlock the Contract\n   * @function\n   * @returns {Promise<TransactionObject>} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          5689,
          5783
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 190,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007341",
          "name": "unlock",
          "type": "ClassProperty"
        }
      },
      "description": "Unlock the Contract",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "unlock",
      "longname": "OpenerRealFvr#unlock",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000739",
      "___s": true
    },
    {
      "comment": "/**\n   * Set Token Price of Real Fvr in USD --> 1*10**18 as input means 1 Real Fvr = $0.000001\n   * @function\n   * @param {Object} params Parameters\n   * @param {Price} params.price Token Price\n   * @returns {Promise<TransactionObject>} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          6082,
          6237
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 199,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007361",
          "name": "setTokenPriceInUSD",
          "type": "ClassProperty"
        }
      },
      "description": "Set Token Price of Real Fvr in USD --> 1*10**18 as input means 1 Real Fvr = $0.000001",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Price"
            ]
          },
          "description": "Token Price",
          "name": "params.price"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "setTokenPriceInUSD",
      "longname": "OpenerRealFvr#setTokenPriceInUSD",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000740",
      "___s": true
    },
    {
      "comment": "/**\n   * Set Base Id URI\n   * @function\n   * @param {Object} params Parameters\n   * @param {string} params.uri URI of the Token Id Metadata JSON\n   * @returns {Promise<TransactionObject>} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          6487,
          6608
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 212,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007385",
          "name": "setBaseURI",
          "type": "ClassProperty"
        }
      },
      "description": "Set Base Id URI",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "URI of the Token Id Metadata JSON",
          "name": "params.uri"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "setBaseURI",
      "longname": "OpenerRealFvr#setBaseURI",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000742",
      "___s": true
    },
    {
      "comment": "/**\n   * Set Specific Token Id URI\n   * @function\n   * @param {Object} params Parameters\n   * @param {number} params.tokenId Token ID\n   * @param {string} params.uri URI of the Token Id Metadata JSON\n   * @returns {Promise<TransactionObject>} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          6913,
          7054
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 224,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007409",
          "name": "setTokenURI",
          "type": "ClassProperty"
        }
      },
      "description": "Set Specific Token Id URI",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Token ID",
          "name": "params.tokenId"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "URI of the Token Id Metadata JSON",
          "name": "params.uri"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<TransactionObject>"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "setTokenURI",
      "longname": "OpenerRealFvr#setTokenURI",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000744",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Pack If Information\n   * @function\n   * @param {Object} params Parameters\n   * @param {number} params.packId\n   * @returns {number} packId\n   * @returns {number} packNumber\n   * @returns {number} price\n   * @returns {string} serie\n   * @returns {string} drop\n   * @returns {string} packType\n   * @returns {Address} buyer\n   * @returns {Address[] | Address} saleDistributionAddresses\n   * @returns {Promise<number[] | number>} saleDistributionAmounts\n   */",
      "meta": {
        "range": [
          7529,
          8044
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 243,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007436",
          "name": "getPackbyId",
          "type": "ClassProperty"
        }
      },
      "description": "Get Pack If Information",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.packId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "packId"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "packNumber"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "price"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "serie"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "drop"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "packType"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "buyer"
        },
        {
          "type": {
            "names": [
              "Array.<Address>",
              "Address"
            ]
          },
          "description": "saleDistributionAddresses"
        },
        {
          "type": {
            "names": [
              "Promise.<(Array.<number>|number)>"
            ]
          },
          "description": "saleDistributionAmounts"
        }
      ],
      "name": "getPackbyId",
      "longname": "OpenerRealFvr#getPackbyId",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000747",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Token IDs that were already bought via a pack\n   * @function\n   * @returns {Promise<number[] | number>} TokensRegistered\n   */",
      "meta": {
        "range": [
          8190,
          8376
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 267,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007528",
          "name": "getRegisteredTokens",
          "type": "ClassProperty"
        }
      },
      "description": "Get Token IDs that were already bought via a pack",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<number>|number)>"
            ]
          },
          "description": "TokensRegistered"
        }
      ],
      "name": "getRegisteredTokens",
      "longname": "OpenerRealFvr#getRegisteredTokens",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000760",
      "___s": true
    },
    {
      "comment": "/**\n   * Verify if a Token was already minted\n   * @function\n   * @param {Object} params Parameters\n   * @param {number} params.tokenId\n   * @returns {Promise<boolean>} wasMinted\n   */",
      "meta": {
        "range": [
          8567,
          8678
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 282,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007562",
          "name": "exists",
          "type": "ClassProperty"
        }
      },
      "description": "Verify if a Token was already minted",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.tokenId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "wasMinted"
        }
      ],
      "name": "exists",
      "longname": "OpenerRealFvr#exists",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000762",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Cost in Fvr Tokens of the Pack\n   * @function\n   * @param {Object} params Parameters\n   * @param {number} params.packId\n   * @returns {Promise<number>} Price in Real Fvr Tokens\n   */",
      "meta": {
        "range": [
          8881,
          9073
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 294,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007585",
          "name": "getPackPriceInFVR",
          "type": "ClassProperty"
        }
      },
      "description": "Get Cost in Fvr Tokens of the Pack",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "name": "params.packId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          },
          "description": "Price in Real Fvr Tokens"
        }
      ],
      "name": "getPackPriceInFVR",
      "longname": "OpenerRealFvr#getPackPriceInFVR",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000764",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Amount of Packs Created\n   * @function\n   * @returns {Promise<number>} packsAmount\n   */",
      "meta": {
        "range": [
          9181,
          9316
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 303,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007619",
          "name": "getAmountOfPacksCreated",
          "type": "ClassProperty"
        }
      },
      "description": "Get Amount of Packs Created",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          },
          "description": "packsAmount"
        }
      ],
      "name": "getAmountOfPacksCreated",
      "longname": "OpenerRealFvr#getAmountOfPacksCreated",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000766",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Amount of Packs Opened\n   * @function\n   * @returns {Promise<number>} packsAmount\n   */",
      "meta": {
        "range": [
          9423,
          9554
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 312,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007641",
          "name": "getAmountOfPacksOpened",
          "type": "ClassProperty"
        }
      },
      "description": "Get Amount of Packs Opened",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          },
          "description": "packsAmount"
        }
      ],
      "name": "getAmountOfPacksOpened",
      "longname": "OpenerRealFvr#getAmountOfPacksOpened",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000767",
      "___s": true
    },
    {
      "comment": "/**\n   * Get Amount of Tokens/NFTs Created (Inherent to the Packs)\n   * @function\n   * @returns {Promise<number>} tokensAmount\n   */",
      "meta": {
        "range": [
          9693,
          9823
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 321,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007663",
          "name": "getAmountOfTokensCreated",
          "type": "ClassProperty"
        }
      },
      "description": "Get Amount of Tokens/NFTs Created (Inherent to the Packs)",
      "kind": "function",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<number>"
            ]
          },
          "description": "tokensAmount"
        }
      ],
      "name": "getAmountOfTokensCreated",
      "longname": "OpenerRealFvr#getAmountOfTokensCreated",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000768",
      "___s": true
    },
    {
      "comment": "/**\n   * User deploys the contract\n   * @function\n   * @param {Object} params Parameters\n   * @param {string} params.name Name of the Contract\n   * @param {string} params.symbol Symbol of the Contract\n   * @param {Address} params.tokenAddress token Address of the purchase Token in use\n   * @returns {Promise<boolean>} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          10204,
          10510
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 334,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007685",
          "name": "deploy",
          "type": "ClassProperty"
        }
      },
      "description": "User deploys the contract",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the Contract",
          "name": "params.name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Symbol of the Contract",
          "name": "params.symbol"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "token Address of the purchase Token in use",
          "name": "params.tokenAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "deploy",
      "longname": "OpenerRealFvr#deploy",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000769",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @return ERC20Contract|undefined\n   */",
      "meta": {
        "range": [
          10578,
          10629
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 349,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007732",
          "name": "getERC20Contract",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "returns": [
        {
          "description": "ERC20Contract|undefined"
        }
      ],
      "name": "getERC20Contract",
      "longname": "OpenerRealFvr#getERC20Contract",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000777",
      "___s": true
    },
    {
      "kind": "package",
      "longname": "package:undefined",
      "files": [
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/Application.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/interfaces/index.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO/Network.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20/ERC20Contract.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20/ERC20TokenLock.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721/ERC721Collectibles.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721/ERC721Standard.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/IContract.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets/ExchangeContract.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking/StakingContract.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr/OpenerRealFvr.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/index.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/utils/Account.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/utils/Contract.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/utils/IPFS.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/utils/Numbers.js"
      ],
      "___id": "T000002R000905",
      "___s": true
    }
  ]
}