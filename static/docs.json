{
  "docs": [
    {
      "comment": "/**\n * Application Object\n * @class Application\n * @param {Object} params Parameters\n * @param {Bool} params.test Automated Tests / Default : False\n * @param {Bool} params.localtest Ganache Local Blockchain / Default : False\n * @param {Object} params.opt Optional Chain Connection Object (Default ETH)\n * @param {String} params.opt.web3Connection Web3 Connection String (Ex : https://data-seed-prebsc-1-s1.binance.org:8545)\n * @param {String} params.opt.privateKey Private key (0x....) used for server side use\n */",
      "meta": {
        "filename": "Application.js",
        "lineno": 31,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {}
      },
      "description": "Application Object",
      "kind": "class",
      "name": "Application",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Bool"
            ]
          },
          "description": "Automated Tests / Default : False",
          "name": "params.test"
        },
        {
          "type": {
            "names": [
              "Bool"
            ]
          },
          "description": "Ganache Local Blockchain / Default : False",
          "name": "params.localtest"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Optional Chain Connection Object (Default ETH)",
          "name": "params.opt"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "Web3 Connection String (Ex : https://data-seed-prebsc-1-s1.binance.org:8545)",
          "name": "params.opt.web3Connection"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "Private key (0x....) used for server side use",
          "name": "params.opt.privateKey"
        }
      ],
      "longname": "Application",
      "scope": "global",
      "___id": "T000002R000013",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Connect to Web3 injected in the constructor\n   */",
      "meta": {
        "range": [
          2226,
          2860
        ],
        "filename": "Application.js",
        "lineno": 71,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000160",
          "name": "start",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Connect to Web3 injected in the constructor",
      "name": "start",
      "longname": "Application#start",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000025",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Login with Metamask/Web3 Wallet - substitutes start()\n   */",
      "meta": {
        "range": [
          2963,
          3315
        ],
        "filename": "Application.js",
        "lineno": 97,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000229",
          "name": "login",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Login with Metamask/Web3 Wallet - substitutes start()",
      "name": "login",
      "longname": "Application#login",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000030",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Create a Exchange Contract\n   * @param {Object} params\n   * @param {Address} params.ContractAddress (Opt) If it is deployed\n   * @return {ExchangeContract} ExchangeContract\n   */",
      "meta": {
        "range": [
          3537,
          3816
        ],
        "filename": "Application.js",
        "lineno": 121,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000280",
          "name": "getExchangeContract",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Create a Exchange Contract",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "(Opt) If it is deployed",
          "name": "params.ContractAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "ExchangeContract"
            ]
          },
          "description": "ExchangeContract"
        }
      ],
      "name": "getExchangeContract",
      "longname": "Application#getExchangeContract",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000033",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Create a OpenerRealFvr Object\n   * @param {Object} params\n   * @param {Address} params.contractAddress (Opt) If it is deployed\n   * @param {Address} params.tokenAddress (Opt) If it is deployed\n   * @return {OpenerRealFvr} OpenerRealFvr\n   */",
      "meta": {
        "range": [
          4101,
          4434
        ],
        "filename": "Application.js",
        "lineno": 141,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000319",
          "name": "getOpenRealFvrContract",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Create a OpenerRealFvr Object",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "(Opt) If it is deployed",
          "name": "params.contractAddress"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "(Opt) If it is deployed",
          "name": "params.tokenAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "OpenerRealFvr"
            ]
          },
          "description": "OpenerRealFvr"
        }
      ],
      "name": "getOpenRealFvrContract",
      "longname": "Application#getOpenRealFvrContract",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000038",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Create a StakingContract Object\n   * @param {Object} params\n   * @param {Address} params.contractAddress (Opt) If it is deployed\n   * @param {Address} params.tokenAddress (Opt) If it is deployed\n   * @return {StakingContract} StakingContract\n   */",
      "meta": {
        "range": [
          4725,
          5056
        ],
        "filename": "Application.js",
        "lineno": 165,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000364",
          "name": "getStakingContract",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Create a StakingContract Object",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "(Opt) If it is deployed",
          "name": "params.contractAddress"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "(Opt) If it is deployed",
          "name": "params.tokenAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "StakingContract"
            ]
          },
          "description": "StakingContract"
        }
      ],
      "name": "getStakingContract",
      "longname": "Application#getStakingContract",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000045",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Create a ERC20TokenLock Object\n   * @param {Object} params\n   * @param {Address} params.contractAddress (Opt) If it is deployed\n   * @param {Address} params.tokenAddress (Opt) If it is deployed\n   * @return {ERC20TokenLock} ERC20TokenLock\n   */",
      "meta": {
        "range": [
          5344,
          5673
        ],
        "filename": "Application.js",
        "lineno": 189,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000409",
          "name": "getERC20TokenLock",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Create a ERC20TokenLock Object",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "(Opt) If it is deployed",
          "name": "params.contractAddress"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "(Opt) If it is deployed",
          "name": "params.tokenAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "ERC20TokenLock"
            ]
          },
          "description": "ERC20TokenLock"
        }
      ],
      "name": "getERC20TokenLock",
      "longname": "Application#getERC20TokenLock",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000052",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Create a BEPRONetwork Object\n   * @param {Object} params\n   * @param {Address} params.contractAddress (Opt) If it is deployed\n   * @return {BEPRONetwork} BEPRONetwork\n   */",
      "meta": {
        "range": [
          5890,
          6229
        ],
        "filename": "Application.js",
        "lineno": 212,
        "columnno": 3,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000454",
          "name": "getBEPRONetwork",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Create a BEPRONetwork Object",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "(Opt) If it is deployed",
          "name": "params.contractAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "BEPRONetwork"
            ]
          },
          "description": "BEPRONetwork"
        }
      ],
      "name": "getBEPRONetwork",
      "longname": "Application#getBEPRONetwork",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000059",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Create a ERC721Collectibles Object\n   * @param {Object} params\n   * @param {Address} params.contractAddress (Opt) If it is deployed\n   * @return {ERC721Collectibles} ERC721Collectibles\n   */",
      "meta": {
        "range": [
          6463,
          6746
        ],
        "filename": "Application.js",
        "lineno": 235,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000499",
          "name": "getERC721Collectibles",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Create a ERC721Collectibles Object",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "(Opt) If it is deployed",
          "name": "params.contractAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "ERC721Collectibles"
            ]
          },
          "description": "ERC721Collectibles"
        }
      ],
      "name": "getERC721Collectibles",
      "longname": "Application#getERC721Collectibles",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000066",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Create a ERC20Contract Object\n   * @param {Object} params\n   * @param {Address} params.contractAddress (Opt) If it is deployed\n   * @return {ERC20Contract} ERC20Contract\n   */",
      "meta": {
        "range": [
          6965,
          7233
        ],
        "filename": "Application.js",
        "lineno": 254,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000538",
          "name": "getERC20Contract",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Create a ERC20Contract Object",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "(Opt) If it is deployed",
          "name": "params.contractAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "ERC20Contract"
            ]
          },
          "description": "ERC20Contract"
        }
      ],
      "name": "getERC20Contract",
      "longname": "Application#getERC20Contract",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000071",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get ETH Network\n   * @return {String} Network Name (Ex : Kovan)\n   */",
      "meta": {
        "range": [
          7392,
          7661
        ],
        "filename": "Application.js",
        "lineno": 275,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000575",
          "name": "getETHNetwork",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get ETH Network",
      "returns": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "Network Name (Ex : Kovan)"
        }
      ],
      "name": "getETHNetwork",
      "longname": "Application#getETHNetwork",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000076",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Address connected via login()\n   * @return {Address} Address in Use\n   */",
      "meta": {
        "range": [
          7782,
          7893
        ],
        "filename": "Application.js",
        "lineno": 289,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000607",
          "name": "getAddress",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get Address connected via login()",
      "returns": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "Address in Use"
        }
      ],
      "name": "getAddress",
      "longname": "Application#getAddress",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000079",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get ETH Balance of Address connected via login()\n   * @return {Integer} ETH Balance\n   */",
      "meta": {
        "range": [
          8026,
          8183
        ],
        "filename": "Application.js",
        "lineno": 299,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src",
        "code": {
          "id": "astnode100000626",
          "name": "getETHBalance",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get ETH Balance of Address connected via login()",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "ETH Balance"
        }
      ],
      "name": "getETHBalance",
      "longname": "Application#getETHBalance",
      "memberof": "Application",
      "scope": "instance",
      "___id": "T000002R000081",
      "___s": true
    },
    {
      "comment": "/**\n * BEPRONetwork Object\n * @class BEPRONetwork\n * @param {Object} params Parameters\n * @param {Address} params.contractAddress Optional/If Existent\n */",
      "meta": {
        "filename": "Network.js",
        "lineno": 11,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {}
      },
      "description": "BEPRONetwork Object",
      "kind": "class",
      "name": "BEPRONetwork",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "Optional/If Existent",
          "name": "params.contractAddress"
        }
      ],
      "longname": "BEPRONetwork",
      "scope": "global",
      "___id": "T000002R000095",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Open Issues Available\n   * @param {Address} address\n   * @returns {Integer | Array}\n   */",
      "meta": {
        "range": [
          1297,
          1501
        ],
        "filename": "Network.js",
        "lineno": 49,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100000804",
          "name": "BEPRONetwork#getIssuesByAddress",
          "type": "MethodDefinition",
          "paramnames": [
            "address"
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Open Issues Available",
      "params": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Integer",
              "Array"
            ]
          }
        }
      ],
      "name": "getIssuesByAddress",
      "longname": "BEPRONetwork#getIssuesByAddress",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000104",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Amount of Issues Opened in the network\n   * @returns {Integer}\n   */",
      "meta": {
        "range": [
          1617,
          1774
        ],
        "filename": "Network.js",
        "lineno": 63,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100000841",
          "name": "BEPRONetwork#getAmountofIssuesOpened",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Amount of Issues Opened in the network",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          }
        }
      ],
      "name": "getAmountofIssuesOpened",
      "longname": "BEPRONetwork#getAmountofIssuesOpened",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000106",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Amount of Issues Closed in the network\n   * @returns {Integer}\n   */",
      "meta": {
        "range": [
          1890,
          2045
        ],
        "filename": "Network.js",
        "lineno": 75,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100000866",
          "name": "BEPRONetwork#getAmountofIssuesClosed",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Amount of Issues Closed in the network",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          }
        }
      ],
      "name": "getAmountofIssuesClosed",
      "longname": "BEPRONetwork#getAmountofIssuesClosed",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000107",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Amount of Needed for Approve\n   * @returns {Integer}\n   */",
      "meta": {
        "range": [
          2151,
          2348
        ],
        "filename": "Network.js",
        "lineno": 87,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100000891",
          "name": "BEPRONetwork#percentageNeededForApprove",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Amount of Needed for Approve",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          }
        }
      ],
      "name": "percentageNeededForApprove",
      "longname": "BEPRONetwork#percentageNeededForApprove",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000108",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Amount of Needed for Merge\n   * @returns {Integer}\n   */",
      "meta": {
        "range": [
          2452,
          2645
        ],
        "filename": "Network.js",
        "lineno": 102,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100000916",
          "name": "BEPRONetwork#percentageNeededForMerge",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Amount of Needed for Merge",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          }
        }
      ],
      "name": "percentageNeededForMerge",
      "longname": "BEPRONetwork#percentageNeededForMerge",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000109",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Total Amount of BEPRO Staked for Tickets in the network\n   * @returns {Integer}\n   */",
      "meta": {
        "range": [
          2778,
          2933
        ],
        "filename": "Network.js",
        "lineno": 117,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100000941",
          "name": "BEPRONetwork#getBEPROStaked",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Total Amount of BEPRO Staked for Tickets in the network",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          }
        }
      ],
      "name": "getBEPROStaked",
      "longname": "BEPRONetwork#getBEPROStaked",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000110",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description GetTotal amount of time where an issue has to be approved\n   * @returns {Date}\n   */",
      "meta": {
        "range": [
          3061,
          3272
        ],
        "filename": "Network.js",
        "lineno": 129,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100000968",
          "name": "BEPRONetwork#timeOpenForIssueApprove",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "GetTotal amount of time where an issue has to be approved",
      "returns": [
        {
          "type": {
            "names": [
              "Date"
            ]
          }
        }
      ],
      "name": "timeOpenForIssueApprove",
      "longname": "BEPRONetwork#timeOpenForIssueApprove",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000111",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Total Amount of BEPRO Staked for Tickets in the network\n   * @returns {Integer}\n   */",
      "meta": {
        "range": [
          3405,
          3594
        ],
        "filename": "Network.js",
        "lineno": 143,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100000994",
          "name": "BEPRONetwork#beproVotesStaked",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Total Amount of BEPRO Staked for Tickets in the network",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          }
        }
      ],
      "name": "beproVotesStaked",
      "longname": "BEPRONetwork#beproVotesStaked",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000112",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Total Amount of BEPRO Staked for Council in the network\n   * @returns {Integer}\n   */",
      "meta": {
        "range": [
          3727,
          3924
        ],
        "filename": "Network.js",
        "lineno": 158,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001021",
          "name": "BEPRONetwork#COUNCIL_BEPRO_AMOUNT",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Total Amount of BEPRO Staked for Council in the network",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          }
        }
      ],
      "name": "COUNCIL_BEPRO_AMOUNT",
      "longname": "BEPRONetwork#COUNCIL_BEPRO_AMOUNT",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000113",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Total Amount of BEPRO Staked for Operator in the network\n   * @returns {Integer}\n   */",
      "meta": {
        "range": [
          4058,
          4257
        ],
        "filename": "Network.js",
        "lineno": 173,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001048",
          "name": "BEPRONetwork#OPERATOR_BEPRO_AMOUNT",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Total Amount of BEPRO Staked for Operator in the network",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          }
        }
      ],
      "name": "OPERATOR_BEPRO_AMOUNT",
      "longname": "BEPRONetwork#OPERATOR_BEPRO_AMOUNT",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000114",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Total Amount of BEPRO Staked for Developer in the network\n   * @returns {Integer}\n   */",
      "meta": {
        "range": [
          4392,
          4593
        ],
        "filename": "Network.js",
        "lineno": 188,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001075",
          "name": "BEPRONetwork#DEVELOPER_BEPRO_AMOUNT",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Total Amount of BEPRO Staked for Developer in the network",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          }
        }
      ],
      "name": "DEVELOPER_BEPRO_AMOUNT",
      "longname": "BEPRONetwork#DEVELOPER_BEPRO_AMOUNT",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000115",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Is issue Approved\n   * @param {Integer} issueId\n   * @returns {Bool}\n   */",
      "meta": {
        "range": [
          4711,
          4865
        ],
        "filename": "Network.js",
        "lineno": 204,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001102",
          "name": "BEPRONetwork#isIssueApproved",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Is issue Approved",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "issueId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Bool"
            ]
          }
        }
      ],
      "name": "isIssueApproved",
      "longname": "BEPRONetwork#isIssueApproved",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000116",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Is issue available to be approved (time wise)\n   * @param {Integer} issueId\n   * @returns {Bool}\n   */",
      "meta": {
        "range": [
          5011,
          5169
        ],
        "filename": "Network.js",
        "lineno": 217,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001128",
          "name": "BEPRONetwork#isIssueApprovable",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Is issue available to be approved (time wise)",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "issueId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Bool"
            ]
          }
        }
      ],
      "name": "isIssueApprovable",
      "longname": "BEPRONetwork#isIssueApprovable",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000118",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Is issue mergeable\n   * @param {Integer} issueId\n   * @param {Integer} mergeId\n   * @returns {Bool}\n   */",
      "meta": {
        "range": [
          5318,
          5492
        ],
        "filename": "Network.js",
        "lineno": 231,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001154",
          "name": "BEPRONetwork#isIssueMergeable",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Is issue mergeable",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "issueId"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "mergeId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Bool"
            ]
          }
        }
      ],
      "name": "isIssueMergeable",
      "longname": "BEPRONetwork#isIssueMergeable",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000120",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Is issue mergeable\n   * @param {Integer} issueId\n   * @param {Integer} mergeId\n   * @returns {Bool}\n   */",
      "meta": {
        "range": [
          5641,
          5835
        ],
        "filename": "Network.js",
        "lineno": 245,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001183",
          "name": "BEPRONetwork#isMergeTheOneWithMoreVotes",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Is issue mergeable",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "issueId"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "mergeId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Bool"
            ]
          }
        }
      ],
      "name": "isMergeTheOneWithMoreVotes",
      "longname": "BEPRONetwork#isMergeTheOneWithMoreVotes",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000123",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Issue Id Info\n   * @param {Address} address\n   * @returns {Integer} votes\n   */",
      "meta": {
        "range": [
          5963,
          6164
        ],
        "filename": "Network.js",
        "lineno": 259,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001212",
          "name": "BEPRONetwork#getVotesByAddress",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Issue Id Info",
      "params": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "votes"
        }
      ],
      "name": "getVotesByAddress",
      "longname": "BEPRONetwork#getVotesByAddress",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000126",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Issue Id Info\n   * @param {Integer} issue_id\n   * @returns {Integer} _id\n   * @returns {Integer} beproStaked\n   * @returns {Date} creationDate\n   * @returns {Address} issueGenerator\n   * @returns {Integer} votesForApprove\n   * @returns {Integer} mergeProposalsAmount\n   * @returns {Bool} finalized\n   * @returns {Bool} canceled\n   */",
      "meta": {
        "range": [
          6546,
          7059
        ],
        "filename": "Network.js",
        "lineno": 281,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001247",
          "name": "BEPRONetwork#getIssueById",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Issue Id Info",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "issue_id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "beproStaked"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "creationDate"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "issueGenerator"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "votesForApprove"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "mergeProposalsAmount"
        },
        {
          "type": {
            "names": [
              "Bool"
            ]
          },
          "description": "finalized"
        },
        {
          "type": {
            "names": [
              "Bool"
            ]
          },
          "description": "canceled"
        }
      ],
      "name": "getIssueById",
      "longname": "BEPRONetwork#getIssueById",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000129",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Issue Id Info\n   * @param {Integer} issue_id\n   * @param {Integer} merge_id\n   * @returns {Integer} _id\n   * @returns {Integer} votes\n   * @returns {Address | Array} prAddresses\n   * @returns {Integer | Array} prAmounts\n   * @returns {Address} proposalAddress\n   */",
      "meta": {
        "range": [
          7373,
          7802
        ],
        "filename": "Network.js",
        "lineno": 311,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001332",
          "name": "BEPRONetwork#getMergeById",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Issue Id Info",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "issue_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "merge_id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "votes"
        },
        {
          "type": {
            "names": [
              "Address",
              "Array"
            ]
          },
          "description": "prAddresses"
        },
        {
          "type": {
            "names": [
              "Integer",
              "Array"
            ]
          },
          "description": "prAmounts"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "proposalAddress"
        }
      ],
      "name": "getMergeById",
      "longname": "BEPRONetwork#getMergeById",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000140",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Approve ERC20 Allowance\n   */",
      "meta": {
        "range": [
          7875,
          8103
        ],
        "filename": "Network.js",
        "lineno": 332,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001412",
          "name": "approveERC20",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Approve ERC20 Allowance",
      "name": "approveERC20",
      "longname": "BEPRONetwork#approveERC20",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "___id": "T000002R000149",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Verify if Approved\n   */",
      "meta": {
        "range": [
          8171,
          8332
        ],
        "filename": "Network.js",
        "lineno": 344,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001443",
          "name": "isApprovedERC20",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Verify if Approved",
      "name": "isApprovedERC20",
      "longname": "BEPRONetwork#isApprovedERC20",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "___id": "T000002R000153",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description lock BEPRO for oracles\n   * @param {integer} beproAmount\n   */",
      "meta": {
        "range": [
          8438,
          8832
        ],
        "filename": "Network.js",
        "lineno": 355,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001468",
          "name": "BEPRONetwork#lockBepro",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "lock BEPRO for oracles",
      "params": [
        {
          "type": {
            "names": [
              "integer"
            ]
          },
          "name": "beproAmount"
        }
      ],
      "name": "lockBepro",
      "longname": "BEPRONetwork#lockBepro",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000159",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Unlock BEPRO for oracles\n   * @param {integer} beproAmount\n   * @param {address} from\n   */",
      "meta": {
        "range": [
          8967,
          9231
        ],
        "filename": "Network.js",
        "lineno": 375,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001521",
          "name": "BEPRONetwork#unlockBepro",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Unlock BEPRO for oracles",
      "params": [
        {
          "type": {
            "names": [
              "integer"
            ]
          },
          "name": "beproAmount"
        },
        {
          "type": {
            "names": [
              "address"
            ]
          },
          "name": "from"
        }
      ],
      "name": "unlockBepro",
      "longname": "BEPRONetwork#unlockBepro",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000163",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Delegated Oracles to others\n   * @param {integer} beproAmount\n   * @param {address} delegatedTo\n   */",
      "meta": {
        "range": [
          9376,
          9676
        ],
        "filename": "Network.js",
        "lineno": 391,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001560",
          "name": "BEPRONetwork#delegateOracles",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Delegated Oracles to others",
      "params": [
        {
          "type": {
            "names": [
              "integer"
            ]
          },
          "name": "beproAmount"
        },
        {
          "type": {
            "names": [
              "address"
            ]
          },
          "name": "delegatedTo"
        }
      ],
      "name": "delegateOracles",
      "longname": "BEPRONetwork#delegateOracles",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000166",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description open Issue\n   * @param {integer} beproAmount\n   * @param {address} address\n   */",
      "meta": {
        "range": [
          9800,
          10202
        ],
        "filename": "Network.js",
        "lineno": 409,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001599",
          "name": "BEPRONetwork#openIssue",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "open Issue",
      "params": [
        {
          "type": {
            "names": [
              "integer"
            ]
          },
          "name": "beproAmount"
        },
        {
          "type": {
            "names": [
              "address"
            ]
          },
          "name": "address"
        }
      ],
      "name": "openIssue",
      "longname": "BEPRONetwork#openIssue",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000169",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description open Issue\n   * @param {integer} issueId\n   */",
      "meta": {
        "range": [
          10292,
          10440
        ],
        "filename": "Network.js",
        "lineno": 428,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001654",
          "name": "BEPRONetwork#approveIssue",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "open Issue",
      "params": [
        {
          "type": {
            "names": [
              "integer"
            ]
          },
          "name": "issueId"
        }
      ],
      "name": "approveIssue",
      "longname": "BEPRONetwork#approveIssue",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000174",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description redeem Issue\n   */",
      "meta": {
        "range": [
          10502,
          10648
        ],
        "filename": "Network.js",
        "lineno": 438,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001681",
          "name": "BEPRONetwork#redeemIssue",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "redeem Issue",
      "name": "redeemIssue",
      "longname": "BEPRONetwork#redeemIssue",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000176",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description open Issue\n   * @param {integer} issueId\n   * @param {integer} mergeId\n   */",
      "meta": {
        "range": [
          10768,
          10934
        ],
        "filename": "Network.js",
        "lineno": 450,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001708",
          "name": "BEPRONetwork#approveMerge",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "open Issue",
      "params": [
        {
          "type": {
            "names": [
              "integer"
            ]
          },
          "name": "issueId"
        },
        {
          "type": {
            "names": [
              "integer"
            ]
          },
          "name": "mergeId"
        }
      ],
      "name": "approveMerge",
      "longname": "BEPRONetwork#approveMerge",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000178",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description open Issue\n   * @param {integer} issueID\n   * @param {integer} beproAmount\n   * @param {address} address\n   */",
      "meta": {
        "range": [
          11088,
          11539
        ],
        "filename": "Network.js",
        "lineno": 463,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001738",
          "name": "BEPRONetwork#updateIssue",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "open Issue",
      "params": [
        {
          "type": {
            "names": [
              "integer"
            ]
          },
          "name": "issueID"
        },
        {
          "type": {
            "names": [
              "integer"
            ]
          },
          "name": "beproAmount"
        },
        {
          "type": {
            "names": [
              "address"
            ]
          },
          "name": "address"
        }
      ],
      "name": "updateIssue",
      "longname": "BEPRONetwork#updateIssue",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000181",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Propose Merge of Issue\n   * @param {integer} issueID\n   * @param {address | Array} prAddresses\n   * @param {address | Integer} prAmounts\n   */",
      "meta": {
        "range": [
          11725,
          12069
        ],
        "filename": "Network.js",
        "lineno": 486,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001797",
          "name": "BEPRONetwork#proposeIssueMerge",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Propose Merge of Issue",
      "params": [
        {
          "type": {
            "names": [
              "integer"
            ]
          },
          "name": "issueID"
        },
        {
          "type": {
            "names": [
              "address",
              "Array"
            ]
          },
          "name": "prAddresses"
        },
        {
          "type": {
            "names": [
              "address",
              "Integer"
            ]
          },
          "name": "prAmounts"
        }
      ],
      "name": "proposeIssueMerge",
      "longname": "BEPRONetwork#proposeIssueMerge",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000187",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description close Issue\n   * @param {integer} issueID\n   * @param {integer} mergeID\n   */",
      "meta": {
        "range": [
          12190,
          12352
        ],
        "filename": "Network.js",
        "lineno": 503,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO",
        "code": {
          "id": "astnode100001843",
          "name": "BEPRONetwork#closeIssue",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "close Issue",
      "params": [
        {
          "type": {
            "names": [
              "integer"
            ]
          },
          "name": "issueID"
        },
        {
          "type": {
            "names": [
              "integer"
            ]
          },
          "name": "mergeID"
        }
      ],
      "name": "closeIssue",
      "longname": "BEPRONetwork#closeIssue",
      "memberof": "BEPRONetwork",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000191",
      "___s": true
    },
    {
      "comment": "/**\n * @class ERC20Contract\n * @param {Object} params Parameters\n * @param {Address} params.contractAddress Optional/If Existent\n */",
      "meta": {
        "filename": "ERC20Contract.js",
        "lineno": 5,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {}
      },
      "kind": "class",
      "name": "ERC20Contract",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "Optional/If Existent",
          "name": "params.contractAddress"
        }
      ],
      "longname": "ERC20Contract",
      "scope": "global",
      "___id": "T000002R000202",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Token Address\n   * @returns {Address} address\n   */",
      "meta": {
        "range": [
          686,
          744
        ],
        "filename": "ERC20Contract.js",
        "lineno": 29,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100001998",
          "name": "ERC20Contract#getAddress",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Token Address",
      "returns": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "address"
        }
      ],
      "name": "getAddress",
      "longname": "ERC20Contract#getAddress",
      "memberof": "ERC20Contract",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000209",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Transfer Tokens\n   * @param {Object} params Parameters\n   * @param {Address} params.toAddress To Address\n   * @param {Integer} params.tokenAmount Amount of Tokens\n   * @returns {Transaction} Transaction\n   */",
      "meta": {
        "range": [
          996,
          1325
        ],
        "filename": "ERC20Contract.js",
        "lineno": 41,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002008",
          "name": "transferTokenAmount",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Transfer Tokens",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "To Address",
          "name": "params.toAddress"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Amount of Tokens",
          "name": "params.tokenAmount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Transaction"
            ]
          },
          "description": "Transaction"
        }
      ],
      "name": "transferTokenAmount",
      "longname": "ERC20Contract#transferTokenAmount",
      "memberof": "ERC20Contract",
      "scope": "instance",
      "___id": "T000002R000210",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Amount of Tokens User Holds\n   * @param {Address} address User Address\n   * @returns {Transaction} Transaction\n   */",
      "meta": {
        "range": [
          1489,
          1637
        ],
        "filename": "ERC20Contract.js",
        "lineno": 59,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002049",
          "name": "getTokenAmount",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get Amount of Tokens User Holds",
      "params": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "User Address",
          "name": "address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Transaction"
            ]
          },
          "description": "Transaction"
        }
      ],
      "name": "getTokenAmount",
      "longname": "ERC20Contract#getTokenAmount",
      "memberof": "ERC20Contract",
      "scope": "instance",
      "___id": "T000002R000214",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Total Supply of Token\n   * @returns {Integer} Total supply\n   */",
      "meta": {
        "range": [
          1749,
          1884
        ],
        "filename": "ERC20Contract.js",
        "lineno": 69,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002074",
          "name": "totalSupply",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get Total Supply of Token",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Total supply"
        }
      ],
      "name": "totalSupply",
      "longname": "ERC20Contract#totalSupply",
      "memberof": "ERC20Contract",
      "scope": "instance",
      "___id": "T000002R000215",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Decimals of Token\n   * @returns {Integer} Total supply\n   */",
      "meta": {
        "range": [
          2043,
          2095
        ],
        "filename": "ERC20Contract.js",
        "lineno": 83,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002107",
          "name": "ERC20Contract#getDecimals",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Decimals of Token",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Total supply"
        }
      ],
      "name": "getDecimals",
      "longname": "ERC20Contract#getDecimals",
      "memberof": "ERC20Contract",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000217",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Verify if Spender is Approved to use tokens\n   * @param {Object} params Parameters\n   * @param {Address} params.address Sender Address\n   * @param {Integer} params.amount Amount of Tokens\n   * @param {Address} params.spenderAddress Spender Address\n   * @returns {Bool} isApproved\n   */",
      "meta": {
        "range": [
          2510,
          2862
        ],
        "filename": "ERC20Contract.js",
        "lineno": 98,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002132",
          "name": "isApproved",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Verify if Spender is Approved to use tokens",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "Sender Address",
          "name": "params.address"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Amount of Tokens",
          "name": "params.amount"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "Spender Address",
          "name": "params.spenderAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Bool"
            ]
          },
          "description": "isApproved"
        }
      ],
      "name": "isApproved",
      "longname": "ERC20Contract#isApproved",
      "memberof": "ERC20Contract",
      "scope": "instance",
      "___id": "T000002R000219",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Approve tokens to be used by another address/contract\n   * @param {Object} params Parameters\n   * @param {Address} params.address Spender Address/Contract\n   * @param {Integer} params.amount Amount of Tokens\n   * @returns {Transaction} Transaction\n   */",
      "meta": {
        "range": [
          3159,
          3611
        ],
        "filename": "ERC20Contract.js",
        "lineno": 120,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002177",
          "name": "approve",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Approve tokens to be used by another address/contract",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "Spender Address/Contract",
          "name": "params.address"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Amount of Tokens",
          "name": "params.amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Transaction"
            ]
          },
          "description": "Transaction"
        }
      ],
      "name": "approve",
      "longname": "ERC20Contract#approve",
      "memberof": "ERC20Contract",
      "scope": "instance",
      "___id": "T000002R000224",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Deploy ERC20 Token\n   * @param {Object} params Parameters\n   * @param {String} params.name Name of token\n   * @param {String} params.symbol Symbol of token\n   * @param {Integer} params.cap Max supply of Token (ex : 100M)\n   * @param {Address} params.distributionAddress Where tokens should be sent to initially\n   * @returns {Transaction} Transaction\n   */",
      "meta": {
        "range": [
          4011,
          4673
        ],
        "filename": "ERC20Contract.js",
        "lineno": 150,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002232",
          "name": "deploy",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Deploy ERC20 Token",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "Name of token",
          "name": "params.name"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "Symbol of token",
          "name": "params.symbol"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Max supply of Token (ex : 100M)",
          "name": "params.cap"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "Where tokens should be sent to initially",
          "name": "params.distributionAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Transaction"
            ]
          },
          "description": "Transaction"
        }
      ],
      "name": "deploy",
      "longname": "ERC20Contract#deploy",
      "memberof": "ERC20Contract",
      "scope": "instance",
      "___id": "T000002R000230",
      "___s": true
    },
    {
      "comment": "/**\n * ERC20 Token Lock Contract Object\n * @class ERC20TokenLock\n * @param {Object} params\n * @param {Address} params.tokenAddress\n * @param {Address} params.contractAddress ? (opt)\n */",
      "meta": {
        "filename": "ERC20TokenLock.js",
        "lineno": 11,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {}
      },
      "description": "ERC20 Token Lock Contract Object",
      "kind": "class",
      "name": "ERC20TokenLock",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.tokenAddress"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "? (opt)",
          "name": "params.contractAddress"
        }
      ],
      "longname": "ERC20TokenLock",
      "scope": "global",
      "___id": "T000002R000241",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get ERC20 Address of the Token Contract managed\n   * @returns {Address}\n   */",
      "meta": {
        "range": [
          1253,
          1348
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 46,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002430",
          "name": "ERC20TokenLock#erc20",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get ERC20 Address of the Token Contract managed",
      "returns": [
        {
          "type": {
            "names": [
              "Address"
            ]
          }
        }
      ],
      "name": "erc20",
      "longname": "ERC20TokenLock#erc20",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000249",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Token Amount of ERC20 Address\n   * @param {Object} params\n   * @param {Address} params.address\n   * @returns {Integer} Token Amount\n   */",
      "meta": {
        "range": [
          1533,
          1627
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 57,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002452",
          "name": "getTokenAmount",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get Token Amount of ERC20 Address",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Token Amount"
        }
      ],
      "name": "getTokenAmount",
      "longname": "ERC20TokenLock#getTokenAmount",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000250",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get All Tokens staked/locked at that specific moment\n   * @returns {Integer} Token Amount\n   */",
      "meta": {
        "range": [
          1766,
          1988
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 64,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002466",
          "name": "ERC20TokenLock#totalAmountStaked",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get All Tokens staked/locked at that specific moment",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Token Amount"
        }
      ],
      "name": "totalAmountStaked",
      "longname": "ERC20TokenLock#totalAmountStaked",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000252",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get minimum amount of tokens to lock per user\n   * @returns {Integer} Minimum Amount\n   */",
      "meta": {
        "range": [
          2122,
          2340
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 77,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002503",
          "name": "ERC20TokenLock#minAmountToLock",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get minimum amount of tokens to lock per user",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Minimum Amount"
        }
      ],
      "name": "minAmountToLock",
      "longname": "ERC20TokenLock#minAmountToLock",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000254",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get maximum amount of tokens to lock per user\n   * @returns {Integer} Maximum Amount\n   */",
      "meta": {
        "range": [
          2474,
          2692
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 90,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002540",
          "name": "ERC20TokenLock#maxAmountToLock",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get maximum amount of tokens to lock per user",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Maximum Amount"
        }
      ],
      "name": "maxAmountToLock",
      "longname": "ERC20TokenLock#maxAmountToLock",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000256",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Check if locked tokens release date has come and user can withdraw them\n   * @param {Object} params\n   * @param {Address} params.address\n   * @returns {Boolean} canRelease\n   */",
      "meta": {
        "range": [
          2913,
          3025
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 105,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002577",
          "name": "canRelease",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Check if locked tokens release date has come and user can withdraw them",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "description": "canRelease"
        }
      ],
      "name": "canRelease",
      "longname": "ERC20TokenLock#canRelease",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000258",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get locked tokens amount for a given address\n   * @param {Object} params\n   * @param {Address} params.address\n   * @returns {Integer} amount Locked token amount\n   */",
      "meta": {
        "range": [
          3235,
          3478
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 114,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002600",
          "name": "getLockedTokens",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get locked tokens amount for a given address",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "amount Locked token amount"
        }
      ],
      "name": "getLockedTokens",
      "longname": "ERC20TokenLock#getLockedTokens",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000260",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get locked tokens info for a given address\n   * @param {Object} params\n   * @param {Address} params.address\n   * @returns {Date} startDate\n   * @returns {Date} endDate\n   * @returns {Integer} amount Token amount\n   */",
      "meta": {
        "range": [
          3739,
          4170
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 131,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002640",
          "name": "getLockedTokensInfo",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get locked tokens info for a given address",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "startDate"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "endDate"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "amount Token amount"
        }
      ],
      "name": "getLockedTokensInfo",
      "longname": "ERC20TokenLock#getLockedTokensInfo",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000263",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Admin sets maximum amount of tokens to lock per user\n   * @param {Object} params\n   * @param {Address} params.tokenAmount Amount of Tokens\n   * @returns {Boolean} Success True if operation was successful\n   */",
      "meta": {
        "range": [
          4423,
          4844
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 154,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002700",
          "name": "setMaxAmountToLock",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Admin sets maximum amount of tokens to lock per user",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "Amount of Tokens",
          "name": "params.tokenAmount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "description": "Success True if operation was successful"
        }
      ],
      "name": "setMaxAmountToLock",
      "longname": "ERC20TokenLock#setMaxAmountToLock",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000269",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Admin sets minimum amount of tokens to lock per user\n   * @param {Object} params\n   * @param {Integer} params.tokenAmount Minimum tokens amount\n   * @returns {Boolean} Success True if operation was successful\n   */",
      "meta": {
        "range": [
          5102,
          5523
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 177,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002746",
          "name": "setMinAmountToLock",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Admin sets minimum amount of tokens to lock per user",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Minimum tokens amount",
          "name": "params.tokenAmount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "description": "Success True if operation was successful"
        }
      ],
      "name": "setMinAmountToLock",
      "longname": "ERC20TokenLock#setMinAmountToLock",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000272",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description User locks his tokens until specified end date.\n   * @param {Object} params\n   * @param {Address} params.address User Address\n   * @param {Integer} params.amount Tokens amount to be locked\n   * @param {Date} params.endDate Lock tokens until this end date\n   * @returns {Boolean} Success True if operation was successful\n   * REQUIREMENTS:\n   * user must have approved this contract to spend the tokens \"amount\" he wants to lock before calling this function.\n   */",
      "meta": {
        "range": [
          6030,
          7292
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 204,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002792",
          "name": "lock",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "User locks his tokens until specified end date.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "User Address",
          "name": "params.address"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Tokens amount to be locked",
          "name": "params.amount"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Lock tokens until this end date",
          "name": "params.endDate"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "description": "Success True if operation was successful\nREQUIREMENTS:\nuser must have approved this contract to spend the tokens \"amount\" he wants to lock before calling this function."
        }
      ],
      "name": "lock",
      "longname": "ERC20TokenLock#lock",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000275",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description User withdraws his locked tokens after specified end date\n   * @param {Object} params\n   * @param {Address} params.address User Address\n   * @return {Boolean} Success True if operation was successful\n   */",
      "meta": {
        "range": [
          7541,
          8111
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 253,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002927",
          "name": "release",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "User withdraws his locked tokens after specified end date",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "User Address",
          "name": "params.address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "description": "Success True if operation was successful"
        }
      ],
      "name": "release",
      "longname": "ERC20TokenLock#release",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000285",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Approve this contract to transfer tokens of the ERC20 token contract on behalf of user\n   * @return {Boolean} Success True if operation was successful\n   */",
      "meta": {
        "range": [
          8311,
          8747
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 278,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100002988",
          "name": "approveERC20Transfer",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Approve this contract to transfer tokens of the ERC20 token contract on behalf of user",
      "returns": [
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "description": "Success True if operation was successful"
        }
      ],
      "name": "approveERC20Transfer",
      "longname": "ERC20TokenLock#approveERC20Transfer",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000292",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Deploy the ERC20 Token Lock Contract\n   */",
      "meta": {
        "range": [
          9521,
          9902
        ],
        "filename": "ERC20TokenLock.js",
        "lineno": 317,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20",
        "code": {
          "id": "astnode100003100",
          "name": "deploy",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Deploy the ERC20 Token Lock Contract",
      "name": "deploy",
      "longname": "ERC20TokenLock#deploy",
      "memberof": "ERC20TokenLock",
      "scope": "instance",
      "___id": "T000002R000301",
      "___s": true
    },
    {
      "comment": "/**\n * ERC721Contract Object\n * @class ERC721Collectibles\n * @param {Web3} web3\n * @param {Address} contractAddress ? (opt)\n */",
      "meta": {
        "filename": "ERC721Collectibles.js",
        "lineno": 9,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {}
      },
      "description": "ERC721Contract Object",
      "kind": "class",
      "name": "ERC721Collectibles",
      "params": [
        {
          "type": {
            "names": [
              "Web3"
            ]
          },
          "name": "web3"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "? (opt)",
          "name": "contractAddress"
        }
      ],
      "longname": "ERC721Collectibles",
      "scope": "global",
      "___id": "T000002R000309",
      "___s": true
    },
    {
      "comment": "/**\n   * @private\n   */",
      "meta": {
        "range": [
          570,
          1128
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 24,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003212",
          "name": "__assert",
          "type": "ClassProperty"
        }
      },
      "access": "private",
      "name": "__assert",
      "longname": "ERC721Collectibles#__assert",
      "kind": "member",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "___id": "T000002R000313",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get ERC20 Address of the Contract\n   * @returns {Address}\n   */",
      "meta": {
        "range": [
          1235,
          1368
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 49,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003274",
          "name": "ERC721Collectibles#purchaseToken",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get ERC20 Address of the Contract",
      "returns": [
        {
          "type": {
            "names": [
              "Address"
            ]
          }
        }
      ],
      "name": "purchaseToken",
      "longname": "ERC721Collectibles#purchaseToken",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000318",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Price Per Pack\n   * @returns {Integer}\n   */",
      "meta": {
        "range": [
          1460,
          1618
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 61,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003296",
          "name": "ERC721Collectibles#getPricePerPack",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Price Per Pack",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          }
        }
      ],
      "name": "getPricePerPack",
      "longname": "ERC721Collectibles#getPricePerPack",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000319",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Verify if token ID exists\n   * @returns {Integer} Token Id\n   */",
      "meta": {
        "range": [
          1726,
          1862
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 73,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003323",
          "name": "ERC721Collectibles#exists",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Verify if token ID exists",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Token Id"
        }
      ],
      "name": "exists",
      "longname": "ERC721Collectibles#exists",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000320",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Verify if it is limited\n   * @returns {Bool}\n   */",
      "meta": {
        "range": [
          1956,
          2060
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 85,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003349",
          "name": "ERC721Collectibles#isLimited",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Verify if it is limited",
      "returns": [
        {
          "type": {
            "names": [
              "Bool"
            ]
          }
        }
      ],
      "name": "isLimited",
      "longname": "ERC721Collectibles#isLimited",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000322",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Verify what is the currentTokenId\n   * @returns {Integer} Current Token Id\n   */",
      "meta": {
        "range": [
          2185,
          2326
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 95,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003371",
          "name": "ERC721Collectibles#currentTokenId",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Verify what is the currentTokenId",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Current Token Id"
        }
      ],
      "name": "currentTokenId",
      "longname": "ERC721Collectibles#currentTokenId",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000323",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Verify what is the getURITokenID\n   * @returns {String} URI\n   */",
      "meta": {
        "range": [
          2435,
          2580
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 106,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003396",
          "name": "ERC721Collectibles#getURITokenID",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Verify what is the getURITokenID",
      "returns": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "URI"
        }
      ],
      "name": "getURITokenID",
      "longname": "ERC721Collectibles#getURITokenID",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000324",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Verify what is the baseURI\n   * @returns {String} URI\n   */",
      "meta": {
        "range": [
          2683,
          2782
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 118,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003422",
          "name": "ERC721Collectibles#baseURI",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Verify what is the baseURI",
      "returns": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "URI"
        }
      ],
      "name": "baseURI",
      "longname": "ERC721Collectibles#baseURI",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000326",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Ids\n   * @param {Address} address\n   * @returns {Integer | Array} ids\n   */",
      "meta": {
        "range": [
          2905,
          3109
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 128,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003444",
          "name": "ERC721Collectibles#getRegisteredIDs",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Ids",
      "params": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Integer",
              "Array"
            ]
          },
          "description": "ids"
        }
      ],
      "name": "getRegisteredIDs",
      "longname": "ERC721Collectibles#getRegisteredIDs",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000327",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Verify if ID is registered\n   * @returns {Bool}\n   */",
      "meta": {
        "range": [
          3206,
          3375
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 142,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003483",
          "name": "ERC721Collectibles#isIDRegistered",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Verify if ID is registered",
      "returns": [
        {
          "type": {
            "names": [
              "Bool"
            ]
          }
        }
      ],
      "name": "isIDRegistered",
      "longname": "ERC721Collectibles#isIDRegistered",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000330",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Verify what is the current price per Pack\n   * @returns {Integer} Price per pack in tokens\n   */",
      "meta": {
        "range": [
          3516,
          3671
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 155,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003512",
          "name": "ERC721Collectibles#pricePerPack",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Verify what is the current price per Pack",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Price per pack in tokens"
        }
      ],
      "name": "pricePerPack",
      "longname": "ERC721Collectibles#pricePerPack",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000333",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Verify how much opened packs exist\n   * @returns {Integer} packs\n   */",
      "meta": {
        "range": [
          3786,
          3927
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 168,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003539",
          "name": "ERC721Collectibles#openedPacks",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Verify how much opened packs exist",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "packs"
        }
      ],
      "name": "openedPacks",
      "longname": "ERC721Collectibles#openedPacks",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000334",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Approve ERC20 Allowance\n   */",
      "meta": {
        "range": [
          4000,
          4228
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 179,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003564",
          "name": "approveERC20",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Approve ERC20 Allowance",
      "name": "approveERC20",
      "longname": "ERC721Collectibles#approveERC20",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "___id": "T000002R000335",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Set Base Token URI\n   */",
      "meta": {
        "range": [
          4296,
          4422
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 191,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003595",
          "name": "setBaseTokenURI",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Set Base Token URI",
      "name": "setBaseTokenURI",
      "longname": "ERC721Collectibles#setBaseTokenURI",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "___id": "T000002R000339",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Approve ERC20 Allowance\n   * @param {Address} address\n   * @param {Integer} amount\n   */",
      "meta": {
        "range": [
          4554,
          4710
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 201,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003619",
          "name": "isApproved",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Approve ERC20 Allowance",
      "params": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "address"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "amount"
        }
      ],
      "name": "isApproved",
      "longname": "ERC721Collectibles#isApproved",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "___id": "T000002R000341",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description open Pack of tokens\n   * @param {Integer} amount Amount of packs to open\n   */",
      "meta": {
        "range": [
          4832,
          4970
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 212,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003644",
          "name": "ERC721Collectibles#openPack",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "open Pack of tokens",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Amount of packs to open",
          "name": "amount"
        }
      ],
      "name": "openPack",
      "longname": "ERC721Collectibles#openPack",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000347",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Mint created TokenID\n   * @param {Address} to\n   * @param {Integer} tokenID\n   */",
      "meta": {
        "range": [
          5095,
          5227
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 224,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003671",
          "name": "ERC721Collectibles#mint",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Mint created TokenID",
      "params": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "to"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "tokenID"
        }
      ],
      "name": "mint",
      "longname": "ERC721Collectibles#mint",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000349",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description set Purchase Token Address\n   * @param {Address} purchaseToken\n   */",
      "meta": {
        "range": [
          5339,
          5539
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 235,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003698",
          "name": "ERC721Collectibles#setPurchaseTokenAddress",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "set Purchase Token Address",
      "params": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "purchaseToken"
        }
      ],
      "name": "setPurchaseTokenAddress",
      "longname": "ERC721Collectibles#setPurchaseTokenAddress",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000351",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description set Stake Address\n   * @param {Address} purchaseToken\n   */",
      "meta": {
        "range": [
          5642,
          5808
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 248,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003725",
          "name": "ERC721Collectibles#setStakeAddress",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "set Stake Address",
      "params": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "purchaseToken"
        }
      ],
      "name": "setStakeAddress",
      "longname": "ERC721Collectibles#setStakeAddress",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000353",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description set Fee Address\n   * @param {Address} purchaseToken\n   */",
      "meta": {
        "range": [
          5909,
          6099
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 259,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003752",
          "name": "ERC721Collectibles#setSwapBackAddress",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "set Fee Address",
      "params": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "purchaseToken"
        }
      ],
      "name": "setSwapBackAddress",
      "longname": "ERC721Collectibles#setSwapBackAddress",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000355",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description set Fee Address\n   * @param {Address} purchaseToken\n   */",
      "meta": {
        "range": [
          6200,
          6362
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 272,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003779",
          "name": "ERC721Collectibles#setFeeAddress",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "set Fee Address",
      "params": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "purchaseToken"
        }
      ],
      "name": "setFeeAddress",
      "longname": "ERC721Collectibles#setFeeAddress",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000357",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description set Price per Pack\n   * @param {Amount} newPrice\n   */",
      "meta": {
        "range": [
          6460,
          6726
        ],
        "filename": "ERC721Collectibles.js",
        "lineno": 283,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100003806",
          "name": "ERC721Collectibles#setPricePerPack",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "set Price per Pack",
      "params": [
        {
          "type": {
            "names": [
              "Amount"
            ]
          },
          "name": "newPrice"
        }
      ],
      "name": "setPricePerPack",
      "longname": "ERC721Collectibles#setPricePerPack",
      "memberof": "ERC721Collectibles",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000359",
      "___s": true
    },
    {
      "comment": "/**\n * ERC721Contract Object\n * @class ERC721Contract\n * @param {Web3} web3\n * @param {Address} contractAddress ? (opt)\n */",
      "meta": {
        "filename": "ERC721Standard.js",
        "lineno": 5,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {}
      },
      "description": "ERC721Contract Object",
      "kind": "class",
      "name": "ERC721Contract",
      "params": [
        {
          "type": {
            "names": [
              "Web3"
            ]
          },
          "name": "web3"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "? (opt)",
          "name": "contractAddress"
        }
      ],
      "longname": "ERC721Contract",
      "scope": "global",
      "___id": "T000002R000375",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Verify if token ID exists\n   * @returns {Integer} Token Id\n   */",
      "meta": {
        "range": [
          1080,
          1216
        ],
        "filename": "ERC721Standard.js",
        "lineno": 42,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100004037",
          "name": "ERC721Standard#exists",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Verify if token ID exists",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Token Id"
        }
      ],
      "name": "exists",
      "longname": "ERC721Standard#exists",
      "memberof": "ERC721Standard",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000384",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Verify what is the getURITokenID\n   * @returns {String} URI\n   */",
      "meta": {
        "range": [
          1325,
          1470
        ],
        "filename": "ERC721Standard.js",
        "lineno": 54,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100004063",
          "name": "ERC721Standard#getURITokenID",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Verify what is the getURITokenID",
      "returns": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "URI"
        }
      ],
      "name": "getURITokenID",
      "longname": "ERC721Standard#getURITokenID",
      "memberof": "ERC721Standard",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000386",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Verify what is the baseURI\n   * @returns {String} URI\n   */",
      "meta": {
        "range": [
          1573,
          1672
        ],
        "filename": "ERC721Standard.js",
        "lineno": 66,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100004089",
          "name": "ERC721Standard#baseURI",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Verify what is the baseURI",
      "returns": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "URI"
        }
      ],
      "name": "baseURI",
      "longname": "ERC721Standard#baseURI",
      "memberof": "ERC721Standard",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000388",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Set Base Token URI\n   */",
      "meta": {
        "range": [
          1740,
          1866
        ],
        "filename": "ERC721Standard.js",
        "lineno": 74,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100004111",
          "name": "setBaseTokenURI",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Set Base Token URI",
      "name": "setBaseTokenURI",
      "longname": "ERC721Standard#setBaseTokenURI",
      "memberof": "ERC721Standard",
      "scope": "instance",
      "___id": "T000002R000389",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Mint created TokenID\n   * @param {Address} to\n   * @param {Integer} tokenID\n   */",
      "meta": {
        "range": [
          1991,
          2123
        ],
        "filename": "ERC721Standard.js",
        "lineno": 84,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721",
        "code": {
          "id": "astnode100004135",
          "name": "ERC721Standard#mint",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Mint created TokenID",
      "params": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "to"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "tokenID"
        }
      ],
      "name": "mint",
      "longname": "ERC721Standard#mint",
      "memberof": "ERC721Standard",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000391",
      "___s": true
    },
    {
      "comment": "/**\n * Contract Object Interface\n * @class IContract\n * @param {Web3} web3\n * @param {Address} contractAddress ? (opt)\n * @param {ABI} abi\n * @param {Account} acc ? (opt)\n */",
      "meta": {
        "filename": "IContract.js",
        "lineno": 4,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {}
      },
      "description": "Contract Object Interface",
      "kind": "class",
      "name": "IContract",
      "params": [
        {
          "type": {
            "names": [
              "Web3"
            ]
          },
          "name": "web3"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "? (opt)",
          "name": "contractAddress"
        },
        {
          "type": {
            "names": [
              "ABI"
            ]
          },
          "name": "abi"
        },
        {
          "type": {
            "names": [
              "Account"
            ]
          },
          "description": "? (opt)",
          "name": "acc"
        }
      ],
      "longname": "IContract",
      "scope": "global",
      "___id": "T000002R000402",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Deploy the Contract\n   */",
      "meta": {
        "range": [
          2974,
          3219
        ],
        "filename": "IContract.js",
        "lineno": 132,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004633",
          "name": "deploy",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Deploy the Contract",
      "name": "deploy",
      "longname": "IContract#deploy",
      "memberof": "IContract",
      "scope": "instance",
      "___id": "T000002R000441",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Set New Owner of the Contract\n   * @param {string} address\n   */",
      "meta": {
        "range": [
          3327,
          3479
        ],
        "filename": "IContract.js",
        "lineno": 146,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004671",
          "name": "IContract#setNewOwner",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Set New Owner of the Contract",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "address"
        }
      ],
      "name": "setNewOwner",
      "longname": "IContract#setNewOwner",
      "memberof": "IContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000446",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Owner of the Contract\n   * @returns {string} address\n   */",
      "meta": {
        "range": [
          3585,
          3680
        ],
        "filename": "IContract.js",
        "lineno": 157,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004698",
          "name": "IContract#owner",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Owner of the Contract",
      "returns": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "address"
        }
      ],
      "name": "owner",
      "longname": "IContract#owner",
      "memberof": "IContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000448",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Owner of the Contract\n   * @returns {boolean}\n   */",
      "meta": {
        "range": [
          3779,
          3878
        ],
        "filename": "IContract.js",
        "lineno": 166,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004720",
          "name": "IContract#isPaused",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Owner of the Contract",
      "returns": [
        {
          "type": {
            "names": [
              "boolean"
            ]
          }
        }
      ],
      "name": "isPaused",
      "longname": "IContract#isPaused",
      "memberof": "IContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000449",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @type admin\n   * @description Pause Contract\n   */",
      "meta": {
        "range": [
          3959,
          4083
        ],
        "filename": "IContract.js",
        "lineno": 175,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004742",
          "name": "IContract#pauseContract",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "type": {
        "names": [
          "admin"
        ]
      },
      "returns": [
        {
          "type": {
            "names": [
              "admin"
            ]
          }
        }
      ],
      "description": "Pause Contract",
      "name": "pauseContract",
      "longname": "IContract#pauseContract",
      "memberof": "IContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000450",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @type admin\n   * @description Unpause Contract\n   */",
      "meta": {
        "range": [
          4166,
          4294
        ],
        "filename": "IContract.js",
        "lineno": 186,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004765",
          "name": "IContract#unpauseContract",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "type": {
        "names": [
          "admin"
        ]
      },
      "returns": [
        {
          "type": {
            "names": [
              "admin"
            ]
          }
        }
      ],
      "description": "Unpause Contract",
      "name": "unpauseContract",
      "longname": "IContract#unpauseContract",
      "memberof": "IContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000451",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Remove Tokens from other ERC20 Address (in case of accident)\n   * @param {Address} tokenAddress\n   * @param {Address} toAddress\n   */",
      "meta": {
        "range": [
          4489,
          4707
        ],
        "filename": "IContract.js",
        "lineno": 200,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004788",
          "name": "IContract#removeOtherERC20Tokens",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Remove Tokens from other ERC20 Address (in case of accident)",
      "params": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "tokenAddress"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "toAddress"
        }
      ],
      "name": "removeOtherERC20Tokens",
      "longname": "IContract#removeOtherERC20Tokens",
      "memberof": "IContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000452",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Remove all tokens for the sake of bug or problem in the smart contract, contract has to be paused first, only Admin\n   * @param {Address} toAddress\n   */",
      "meta": {
        "range": [
          4904,
          5068
        ],
        "filename": "IContract.js",
        "lineno": 213,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004818",
          "name": "IContract#safeGuardAllTokens",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Remove all tokens for the sake of bug or problem in the smart contract, contract has to be paused first, only Admin",
      "params": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "toAddress"
        }
      ],
      "name": "safeGuardAllTokens",
      "longname": "IContract#safeGuardAllTokens",
      "memberof": "IContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000455",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Change Token Address of Application\n   * @param {Address} newTokenAddress\n   */",
      "meta": {
        "range": [
          5191,
          5385
        ],
        "filename": "IContract.js",
        "lineno": 224,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004845",
          "name": "IContract#changeTokenAddress",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Change Token Address of Application",
      "params": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "newTokenAddress"
        }
      ],
      "name": "changeTokenAddress",
      "longname": "IContract#changeTokenAddress",
      "memberof": "IContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000457",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Balance of Contract\n   * @param {Integer} Balance\n   */",
      "meta": {
        "range": [
          5488,
          5546
        ],
        "filename": "IContract.js",
        "lineno": 237,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004872",
          "name": "IContract#getAddress",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Balance of Contract",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "Balance"
        }
      ],
      "name": "getAddress",
      "longname": "IContract#getAddress",
      "memberof": "IContract",
      "scope": "instance",
      "___id": "T000002R000459",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Balance of Contract\n   * @param {Integer} Balance\n   */",
      "meta": {
        "range": [
          5649,
          5790
        ],
        "filename": "IContract.js",
        "lineno": 246,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004882",
          "name": "IContract#getBalance",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Balance of Contract",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "Balance"
        }
      ],
      "name": "getBalance",
      "longname": "IContract#getBalance",
      "memberof": "IContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000460",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get contract current user/sender address\n   * @param {Address} User address\n   */",
      "meta": {
        "range": [
          5915,
          6079
        ],
        "filename": "IContract.js",
        "lineno": 256,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004913",
          "name": "IContract#getUserAddress",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get contract current user/sender address",
      "params": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "address",
          "name": "User"
        }
      ],
      "name": "getUserAddress",
      "longname": "IContract#getUserAddress",
      "memberof": "IContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000462",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Verify that current user/sender is admin, throws an error otherwise\n   * @throws {Error}\n   */",
      "meta": {
        "range": [
          6217,
          6516
        ],
        "filename": "IContract.js",
        "lineno": 268,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004946",
          "name": "IContract#onlyOwner",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Verify that current user/sender is admin, throws an error otherwise",
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          }
        }
      ],
      "name": "onlyOwner",
      "longname": "IContract#onlyOwner",
      "memberof": "IContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000464",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Verify that contract is not paused before sending a transaction, throws an error otherwise\n   * @throws {Error}\n   */",
      "meta": {
        "range": [
          6677,
          6860
        ],
        "filename": "IContract.js",
        "lineno": 283,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models",
        "code": {
          "id": "astnode100004980",
          "name": "IContract#whenNotPaused",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Verify that contract is not paused before sending a transaction, throws an error otherwise",
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          }
        }
      ],
      "name": "whenNotPaused",
      "longname": "IContract#whenNotPaused",
      "memberof": "IContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000468",
      "___s": true
    },
    {
      "comment": "/**\n * Exchange Contract Object\n * @class ExchangeContract\n * @param {Web3} web3\n * @param {Address} tokenAddress\n * @param {Integer} decimals\n * @param {Address} contractAddress ? (opt)\n */",
      "meta": {
        "filename": "ExchangeContract.js",
        "lineno": 6,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {}
      },
      "description": "Exchange Contract Object",
      "kind": "class",
      "name": "ExchangeContract",
      "params": [
        {
          "type": {
            "names": [
              "Web3"
            ]
          },
          "name": "web3"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "tokenAddress"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "decimals"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "? (opt)",
          "name": "contractAddress"
        }
      ],
      "longname": "ExchangeContract",
      "scope": "global",
      "___id": "T000002R000471",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Events\n   * @returns {Integer | Array} Get Events ID\n   */",
      "meta": {
        "range": [
          582,
          758
        ],
        "filename": "ExchangeContract.js",
        "lineno": 26,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005036",
          "name": "ExchangeContract#getEvents",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Events",
      "returns": [
        {
          "type": {
            "names": [
              "Integer",
              "Array"
            ]
          },
          "description": "Get Events ID"
        }
      ],
      "name": "getEvents",
      "longname": "ExchangeContract#getEvents",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000475",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Events\n   * @returns {Integer | Array} Get Events ID\n   */",
      "meta": {
        "range": [
          864,
          1056
        ],
        "filename": "ExchangeContract.js",
        "lineno": 39,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005072",
          "name": "ExchangeContract#getMyEvents",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Events",
      "returns": [
        {
          "type": {
            "names": [
              "Integer",
              "Array"
            ]
          },
          "description": "Get Events ID"
        }
      ],
      "name": "getMyEvents",
      "longname": "ExchangeContract#getMyEvents",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000477",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get EventData\n   * @param {Integer} event_id\n   * @returns {String} Event Name\n   * @returns {Integer} Result Id\n   * @returns {String} URL Oracle\n   * @returns {Boolean} Is Resolved\n   */",
      "meta": {
        "range": [
          1288,
          1579
        ],
        "filename": "ExchangeContract.js",
        "lineno": 56,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005110",
          "name": "ExchangeContract#getEventData",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get EventData",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "event_id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "Event Name"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Result Id"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "URL Oracle"
        },
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "description": "Is Resolved"
        }
      ],
      "name": "getEventData",
      "longname": "ExchangeContract#getEventData",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000479",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get My Event Holdings\n   * @param {Integer} event_id\n   * @returns {Integer} 1 In Pool Balances\n   * @returns {Integer} 1 Out Pool Balances\n   * @returns {Integer} 1 Liquidity Balances\n   * @returns {Integer} 2 In Pool Balances\n   * @returns {Integer} 2 Out Pool Balances\n   * @returns {Integer} 2 Liquidity Balances\n   */",
      "meta": {
        "range": [
          1946,
          2310
        ],
        "filename": "ExchangeContract.js",
        "lineno": 82,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005162",
          "name": "ExchangeContract#getMyEventHoldings",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get My Event Holdings",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "event_id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "1 In Pool Balances"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "1 Out Pool Balances"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "1 Liquidity Balances"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "2 In Pool Balances"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "2 Out Pool Balances"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "2 Liquidity Balances"
        }
      ],
      "name": "getMyEventHoldings",
      "longname": "ExchangeContract#getMyEventHoldings",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000486",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Result Space Data\n   * @param {Integer} event_id\n   * @param {Integer} resultSpace_id\n   * @returns {Integer} _id\n   * @returns {Integer} _resultId\n   * @returns {Integer} pool\n   * @returns {Integer} cost\n   * @returns {Integer} odd\n   * @returns {Integer} amount\n   * @returns {Integer} inPool\n   * @returns {Integer} outPool\n   * @returns {Integer} fees\n   * @returns {Integer} liqAmount\n   */",
      "meta": {
        "range": [
          2755,
          3433
        ],
        "filename": "ExchangeContract.js",
        "lineno": 115,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005218",
          "name": "ExchangeContract#getResultSpaceData",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Result Space Data",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "event_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "resultSpace_id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "_resultId"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "pool"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "cost"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "odd"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "amount"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "inPool"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "outPool"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "fees"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "liqAmount"
        }
      ],
      "name": "getResultSpaceData",
      "longname": "ExchangeContract#getResultSpaceData",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000495",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description To see if Event is open\n   * @returns {Boolean}\n   */",
      "meta": {
        "range": [
          3530,
          3658
        ],
        "filename": "ExchangeContract.js",
        "lineno": 142,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005341",
          "name": "ExchangeContract#isEventOpen",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "To see if Event is open",
      "returns": [
        {
          "type": {
            "names": [
              "Boolean"
            ]
          }
        }
      ],
      "name": "isEventOpen",
      "longname": "ExchangeContract#isEventOpen",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000509",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Fractions Cost\n   * @param {Integer} event_id\n   * @param {Integer} resultSpace_id\n   * @param {Integer} fractions_amount\n   * @return {Integer} cost\n   */",
      "meta": {
        "range": [
          3862,
          4173
        ],
        "filename": "ExchangeContract.js",
        "lineno": 158,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005363",
          "name": "ExchangeContract#getFractionsCost",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Fractions Cost",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "event_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "resultSpace_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "fractions_amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "cost"
        }
      ],
      "name": "getFractionsCost",
      "longname": "ExchangeContract#getFractionsCost",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000510",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Slipage on Buy\n   * @param {Integer} event_id\n   * @param {Integer} resultSpace_id\n   * @param {Integer} fractions_amount\n   * @returns {Integer} _id\n   */",
      "meta": {
        "range": [
          4376,
          4600
        ],
        "filename": "ExchangeContract.js",
        "lineno": 178,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005402",
          "name": "ExchangeContract#getSlipageOnBuy",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Slipage on Buy",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "event_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "resultSpace_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "fractions_amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "_id"
        }
      ],
      "name": "getSlipageOnBuy",
      "longname": "ExchangeContract#getSlipageOnBuy",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000514",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Slipage on Sell\n   * @param {Integer} event_id\n   * @param {Integer} resultSpace_id\n   * @param {Integer} fractions_amount\n   * @returns {Integer} _id\n   */",
      "meta": {
        "range": [
          4804,
          5030
        ],
        "filename": "ExchangeContract.js",
        "lineno": 193,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005434",
          "name": "ExchangeContract#getSlipageOnSell",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get Slipage on Sell",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "event_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "resultSpace_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "fractions_amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "_id"
        }
      ],
      "name": "getSlipageOnSell",
      "longname": "ExchangeContract#getSlipageOnSell",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000518",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Create an Event\n   * @param {Integer | Array} _resultSpaceIds\n   * @param {String} urlOracle\n   * @param {String} eventName\n\n   */",
      "meta": {
        "range": [
          5234,
          5678
        ],
        "filename": "ExchangeContract.js",
        "lineno": 211,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005466",
          "name": "createEvent",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Create an Event",
      "params": [
        {
          "type": {
            "names": [
              "Integer",
              "Array"
            ]
          },
          "name": "_resultSpaceIds"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "name": "urlOracle"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "name": "eventName"
        }
      ],
      "name": "createEvent",
      "longname": "ExchangeContract#createEvent",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "___id": "T000002R000522",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Resolve Event\n   * @param {Integer} event_id\n   * @param {Integer} resultSpace_id\n\n   */",
      "meta": {
        "range": [
          5811,
          5992
        ],
        "filename": "ExchangeContract.js",
        "lineno": 238,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005522",
          "name": "resolveEvent",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Resolve Event",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "event_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "resultSpace_id"
        }
      ],
      "name": "resolveEvent",
      "longname": "ExchangeContract#resolveEvent",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "___id": "T000002R000528",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Add Liquidity\n   * @param {Integer} eventId\n   */",
      "meta": {
        "range": [
          6086,
          6352
        ],
        "filename": "ExchangeContract.js",
        "lineno": 250,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005549",
          "name": "addLiquidity",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Add Liquidity",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "eventId"
        }
      ],
      "name": "addLiquidity",
      "longname": "ExchangeContract#addLiquidity",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "___id": "T000002R000531",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Remove Liquidity\n   * @param {Integer} eventId\n   */",
      "meta": {
        "range": [
          6449,
          6590
        ],
        "filename": "ExchangeContract.js",
        "lineno": 265,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005588",
          "name": "removeLiquidity",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Remove Liquidity",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "eventId"
        }
      ],
      "name": "removeLiquidity",
      "longname": "ExchangeContract#removeLiquidity",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "___id": "T000002R000535",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Buy Fractions\n   * @param {Integer} event_id\n   * @param {Integer} resultSpace_id\n   * @param {Integer} fractions_amount\n   */",
      "meta": {
        "range": [
          6761,
          7329
        ],
        "filename": "ExchangeContract.js",
        "lineno": 277,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005612",
          "name": "buy",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Buy Fractions",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "event_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "resultSpace_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "fractions_amount"
        }
      ],
      "name": "buy",
      "longname": "ExchangeContract#buy",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "___id": "T000002R000537",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Sell Fractions\n   * @param {Integer} event_id\n   * @param {Integer} resultSpace_id\n   * @param {Integer} fractions_amount\n   */",
      "meta": {
        "range": [
          7501,
          7702
        ],
        "filename": "ExchangeContract.js",
        "lineno": 303,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005679",
          "name": "sell",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Sell Fractions",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "event_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "resultSpace_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "fractions_amount"
        }
      ],
      "name": "sell",
      "longname": "ExchangeContract#sell",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "___id": "T000002R000547",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Take Fractions out of the pool\n   * @param {Integer} event_id\n   * @param {Integer} resultSpace_id\n   * @param {Integer} fractions_amount\n   */",
      "meta": {
        "range": [
          7890,
          8108
        ],
        "filename": "ExchangeContract.js",
        "lineno": 317,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005709",
          "name": "pullFractions",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Take Fractions out of the pool",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "event_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "resultSpace_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "fractions_amount"
        }
      ],
      "name": "pullFractions",
      "longname": "ExchangeContract#pullFractions",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "___id": "T000002R000551",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Move Fractions to the Pool\n   * @param {Integer} eventId\n   * @param {Integer} resultSpace_id\n   * @param {Integer} fractions_amount\n   */",
      "meta": {
        "range": [
          8291,
          8510
        ],
        "filename": "ExchangeContract.js",
        "lineno": 331,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005739",
          "name": "pushFractions",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Move Fractions to the Pool",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "eventId"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "resultSpace_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "fractions_amount"
        }
      ],
      "name": "pushFractions",
      "longname": "ExchangeContract#pushFractions",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "___id": "T000002R000555",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Withdraw Wins on end of Event\n   * @param {Integer} event_id\n   * @param {Integer} resultSpace_id\n   */",
      "meta": {
        "range": [
          8658,
          8839
        ],
        "filename": "ExchangeContract.js",
        "lineno": 344,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005769",
          "name": "withdrawWins",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Withdraw Wins on end of Event",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "event_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "resultSpace_id"
        }
      ],
      "name": "withdrawWins",
      "longname": "ExchangeContract#withdrawWins",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "___id": "T000002R000559",
      "___s": true
    },
    {
      "comment": "/**\n  * @function\n  * @description Deploy the Pool Contract\n\n  */",
      "meta": {
        "range": [
          8911,
          9150
        ],
        "filename": "ExchangeContract.js",
        "lineno": 355,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets",
        "code": {
          "id": "astnode100005796",
          "name": "deploy",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Deploy the Pool Contract",
      "name": "deploy",
      "longname": "ExchangeContract#deploy",
      "memberof": "ExchangeContract",
      "scope": "instance",
      "___id": "T000002R000562",
      "___s": true
    },
    {
      "comment": "/**\n * Staking Contract Object\n * @class StakingContract\n * @param {Object} params\n * @param {Address} params.tokenAddress\n */",
      "meta": {
        "filename": "StakingContract.js",
        "lineno": 7,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {}
      },
      "description": "Staking Contract Object",
      "kind": "class",
      "name": "StakingContract",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "params.tokenAddress"
        }
      ],
      "longname": "StakingContract",
      "scope": "global",
      "___id": "T000002R000568",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get ERC20 Address of the Contract\n   * @returns {Address}\n   */",
      "meta": {
        "range": [
          819,
          947
        ],
        "filename": "StakingContract.js",
        "lineno": 35,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100005908",
          "name": "StakingContract#erc20",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get ERC20 Address of the Contract",
      "returns": [
        {
          "type": {
            "names": [
              "Address"
            ]
          }
        }
      ],
      "name": "erc20",
      "longname": "StakingContract#erc20",
      "memberof": "StakingContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000576",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Token Amount of ERC20 Address\n   * @returns {Address}\n   */",
      "meta": {
        "range": [
          1054,
          1148
        ],
        "filename": "StakingContract.js",
        "lineno": 47,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100005932",
          "name": "getTokenAmount",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get Token Amount of ERC20 Address",
      "returns": [
        {
          "type": {
            "names": [
              "Address"
            ]
          }
        }
      ],
      "name": "getTokenAmount",
      "longname": "StakingContract#getTokenAmount",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000577",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get All Tokens Locked for the APR\n   * @returns {Integer}\n   */",
      "meta": {
        "range": [
          1255,
          1491
        ],
        "filename": "StakingContract.js",
        "lineno": 54,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100005946",
          "name": "StakingContract#futureLockedTokens",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get All Tokens Locked for the APR",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          }
        }
      ],
      "name": "futureLockedTokens",
      "longname": "StakingContract#futureLockedTokens",
      "memberof": "StakingContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000579",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get All Tokens Available for the Subscription Amount\n   * @returns {Integer}\n   */",
      "meta": {
        "range": [
          1617,
          1847
        ],
        "filename": "StakingContract.js",
        "lineno": 67,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100005985",
          "name": "StakingContract#availableTokens",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get All Tokens Available for the Subscription Amount",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          }
        }
      ],
      "name": "availableTokens",
      "longname": "StakingContract#availableTokens",
      "memberof": "StakingContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000581",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get All Tokens Held in Stake at that specific moment\n   * @returns {Integer}\n   */",
      "meta": {
        "range": [
          1973,
          2193
        ],
        "filename": "StakingContract.js",
        "lineno": 80,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006024",
          "name": "StakingContract#heldTokens",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Get All Tokens Held in Stake at that specific moment",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          }
        }
      ],
      "name": "heldTokens",
      "longname": "StakingContract#heldTokens",
      "memberof": "StakingContract",
      "scope": "instance",
      "params": [],
      "async": true,
      "___id": "T000002R000583",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get APR Amount based on amount of timestamp, amount and APR of that product\n   * @param {Integer} APR\n   * @param {Date} startDate\n   * @param {Date} endDate\n   * @param {Integer} amount Token Amount\n   * @returns {Integer}\n   */",
      "meta": {
        "range": [
          2466,
          3014
        ],
        "filename": "StakingContract.js",
        "lineno": 97,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006063",
          "name": "getAPRAmount",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get APR Amount based on amount of timestamp, amount and APR of that product",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "APR"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "name": "startDate"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "name": "endDate"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Token Amount",
          "name": "amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          }
        }
      ],
      "name": "getAPRAmount",
      "longname": "StakingContract#getAPRAmount",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000585",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description createProduct\n   * @param {Date} startDate\n   * @param {Date} endDate\n   * @param {Integer} totalMaxAmount\n   * @param {Integer} individualMinimumAmount\n   * @param {Integer} APR\n   * @param {Boolean} lockedUntilFinalization\n   */",
      "meta": {
        "range": [
          3288,
          4002
        ],
        "filename": "StakingContract.js",
        "lineno": 127,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006133",
          "name": "StakingContract#createProduct",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "createProduct",
      "params": [
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "name": "startDate"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "name": "endDate"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "totalMaxAmount"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "individualMinimumAmount"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "APR"
        },
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "name": "lockedUntilFinalization"
        }
      ],
      "name": "createProduct",
      "longname": "StakingContract#createProduct",
      "memberof": "StakingContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000591",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get All Available Products\n   * @returns {Array | Integer} ids\n   */",
      "meta": {
        "range": [
          4114,
          4239
        ],
        "filename": "StakingContract.js",
        "lineno": 160,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006205",
          "name": "getProducts",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get All Available Products",
      "returns": [
        {
          "type": {
            "names": [
              "Array",
              "Integer"
            ]
          },
          "description": "ids"
        }
      ],
      "name": "getProducts",
      "longname": "StakingContract#getProducts",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000598",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Subscription from product\n   * @param {Integer} product_id\n   * @returns {Date} createdAt\n   * @returns {Date} startDate\n   * @returns {Date} endDate\n   * @returns {Integer} totalMaxAmount\n   * @returns {Integer} individualMinimumAmount\n   * @returns {Integer} APR\n   * @returns {Integer} currentAmount\n   * @returns {Boolean} lockedUntilFinalization\n   * @returns {Array | Address} subscribers\n   * @returns {Array | Integer} subscriptionIds\n   */",
      "meta": {
        "range": [
          4735,
          5657
        ],
        "filename": "StakingContract.js",
        "lineno": 180,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006226",
          "name": "getProduct",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get Subscription from product",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "product_id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "createdAt"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "startDate"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "endDate"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "totalMaxAmount"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "individualMinimumAmount"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "APR"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "currentAmount"
        },
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "description": "lockedUntilFinalization"
        },
        {
          "type": {
            "names": [
              "Array",
              "Address"
            ]
          },
          "description": "subscribers"
        },
        {
          "type": {
            "names": [
              "Array",
              "Integer"
            ]
          },
          "description": "subscriptionIds"
        }
      ],
      "name": "getProduct",
      "longname": "StakingContract#getProduct",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000599",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Approve ERC20 Allowance for Transfer for Subscribe Product\n   */",
      "meta": {
        "range": [
          5765,
          6098
        ],
        "filename": "StakingContract.js",
        "lineno": 214,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006351",
          "name": "approveERC20Transfer",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Approve ERC20 Allowance for Transfer for Subscribe Product",
      "name": "approveERC20Transfer",
      "longname": "StakingContract#approveERC20Transfer",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000613",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Subscribe to a product Staking\n   * @param {Integer} product_id\n   * @param {Integer} amount\n   * @returns {Boolean} Success\n   */",
      "meta": {
        "range": [
          6272,
          6993
        ],
        "filename": "StakingContract.js",
        "lineno": 232,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006393",
          "name": "subscribeProduct",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Subscribe to a product Staking",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "product_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "description": "Success"
        }
      ],
      "name": "subscribeProduct",
      "longname": "StakingContract#subscribeProduct",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000617",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Subscription from product\n   * @param {Integer} product_id\n   * @param {Integer} subscription_id\n   * @returns {Integer} _id\n   * @returns {Integer} productId\n   * @returns {Date} startDate\n   * @returns {Date} endDate\n   * @returns {Address} subscriberAddress\n   * @returns {Integer} APR\n   * @returns {Boolean} finalized\n   */",
      "meta": {
        "range": [
          7369,
          8163
        ],
        "filename": "StakingContract.js",
        "lineno": 270,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006468",
          "name": "getSubscription",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get Subscription from product",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "product_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "subscription_id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "productId"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "startDate"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "endDate"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "subscriberAddress"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "APR"
        },
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "description": "finalized"
        }
      ],
      "name": "getSubscription",
      "longname": "StakingContract#getSubscription",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000626",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Withdraw Subscription to a product Staking\n   * @param {Integer} product_id\n   * @param {Integer} subscription_id\n   */",
      "meta": {
        "range": [
          8326,
          8529
        ],
        "filename": "StakingContract.js",
        "lineno": 303,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006579",
          "name": "withdrawSubscription",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Withdraw Subscription to a product Staking",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "product_id"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "subscription_id"
        }
      ],
      "name": "withdrawSubscription",
      "longname": "StakingContract#withdrawSubscription",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000639",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Subscriptions by Address\n   * @param {Address} address\n   * @returns {Array | Integer} subscriptions_ids\n   */",
      "meta": {
        "range": [
          8687,
          8931
        ],
        "filename": "StakingContract.js",
        "lineno": 315,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006606",
          "name": "getSubscriptionsByAddress",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get Subscriptions by Address",
      "params": [
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "name": "address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Array",
              "Integer"
            ]
          },
          "description": "subscriptions_ids"
        }
      ],
      "name": "getSubscriptionsByAddress",
      "longname": "StakingContract#getSubscriptionsByAddress",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000642",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get All Subscriptions done\n   * @returns {Array | Subscription} subscriptions\n   */",
      "meta": {
        "range": [
          9058,
          9670
        ],
        "filename": "StakingContract.js",
        "lineno": 328,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006647",
          "name": "getAllSubscriptions",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get All Subscriptions done",
      "returns": [
        {
          "type": {
            "names": [
              "Array",
              "Subscription"
            ]
          },
          "description": "subscriptions"
        }
      ],
      "name": "getAllSubscriptions",
      "longname": "StakingContract#getAllSubscriptions",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000645",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Transfer Tokens by the Admin to ensure APR Amount\n   * @param {Integer} amount\n   */",
      "meta": {
        "range": [
          9798,
          9979
        ],
        "filename": "StakingContract.js",
        "lineno": 354,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006716",
          "name": "StakingContract#depositAPRTokensByAdmin",
          "type": "MethodDefinition",
          "paramnames": [
            ""
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "function",
      "description": "Transfer Tokens by the Admin to ensure APR Amount",
      "params": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "amount"
        }
      ],
      "name": "depositAPRTokensByAdmin",
      "longname": "StakingContract#depositAPRTokensByAdmin",
      "memberof": "StakingContract",
      "scope": "instance",
      "async": true,
      "___id": "T000002R000652",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Total Amount of tokens needed to be deposited by Admin to ensure APR for all available Products\n   * @return {Integer} Amount\n   */",
      "meta": {
        "range": [
          10158,
          10802
        ],
        "filename": "StakingContract.js",
        "lineno": 366,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006740",
          "name": "getTotalNeededTokensForAPRbyAdmin",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get Total Amount of tokens needed to be deposited by Admin to ensure APR for all available Products",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Amount"
        }
      ],
      "name": "getTotalNeededTokensForAPRbyAdmin",
      "longname": "StakingContract#getTotalNeededTokensForAPRbyAdmin",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000656",
      "___s": true
    },
    {
      "comment": "/**\n   * @override\n   */",
      "meta": {
        "range": [
          10833,
          11373
        ],
        "filename": "StakingContract.js",
        "lineno": 391,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006825",
          "name": "__assert",
          "type": "ClassProperty"
        }
      },
      "override": true,
      "name": "__assert",
      "longname": "StakingContract#__assert",
      "kind": "member",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000666",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @override\n   * @description Deploy the Staking Contract\n   */",
      "meta": {
        "range": [
          11465,
          11845
        ],
        "filename": "StakingContract.js",
        "lineno": 417,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking",
        "code": {
          "id": "astnode100006887",
          "name": "deploy",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "override": true,
      "description": "Deploy the Staking Contract",
      "name": "deploy",
      "longname": "StakingContract#deploy",
      "memberof": "StakingContract",
      "scope": "instance",
      "___id": "T000002R000671",
      "___s": true
    },
    {
      "comment": "/**\n * OpenerRealFvr Object\n * @class OpenerRealFvr\n * @param {Object} params Parameters\n * @param {Address} params.contractAddress Contract Address (If Deployed)\n * @param {Address} params.tokenAddress Token Purchase Address\n */",
      "meta": {
        "filename": "OpenerRealFvr.js",
        "lineno": 7,
        "columnno": 0,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {}
      },
      "description": "OpenerRealFvr Object",
      "kind": "class",
      "name": "OpenerRealFvr",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "Contract Address (If Deployed)",
          "name": "params.contractAddress"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "Token Purchase Address",
          "name": "params.tokenAddress"
        }
      ],
      "longname": "OpenerRealFvr",
      "scope": "global",
      "___id": "T000002R000678",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Buy Pack\n   * @param {Object} params Parameters\n   * @param {Integer} params.packId Pack Id\n   * @returns {Transaction} Transaction\n   */",
      "meta": {
        "range": [
          1289,
          1410
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 47,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007055",
          "name": "buyPack",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Buy Pack",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Pack Id",
          "name": "params.packId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Transaction"
            ]
          },
          "description": "Transaction"
        }
      ],
      "name": "buyPack",
      "longname": "OpenerRealFvr#buyPack",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000687",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Offer Pack\n   * @param {Object} params Parameters\n   * @param {Integer} params.packId Pack Id\n   * @param {Address} params.receivingAddress Pack Id Integer\n   * @returns {TransactionObject} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          1699,
          1874
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 59,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007079",
          "name": "offerPack",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Offer Pack",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Pack Id",
          "name": "params.packId"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "Pack Id Integer",
          "name": "params.receivingAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "TransactionObject"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "offerPack",
      "longname": "OpenerRealFvr#offerPack",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000689",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Create Pack\n   * @param {Object} params Parameters\n   * @param {Integer} params.packNumber Pack Number\n   * @param {Integer} params.nftAmount Amount of NFTs/Tokens\n   * @param {Integer} params.price Price of Pack\n   * @param {String} params.serie Serie of Pack\n   * @param {String} params.packType Pack Type\n   * @param {String} params.drop Pack Drop\n   * @param {Date} params.saleStart Start Date\n   * @param {Address | Array} params.saleDistributionAddresses Revenue Addresses of the First Purchase\n   * @param {Integer | Array} params.saleDistributionAmounts Revenue Amounts of the First Purchase\n   * @returns {TransactionObject} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          2607,
          3150
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 80,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007106",
          "name": "createPack",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Create Pack",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Pack Number",
          "name": "params.packNumber"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Amount of NFTs/Tokens",
          "name": "params.nftAmount"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Price of Pack",
          "name": "params.price"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "Serie of Pack",
          "name": "params.serie"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "Pack Type",
          "name": "params.packType"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "Pack Drop",
          "name": "params.drop"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Start Date",
          "name": "params.saleStart"
        },
        {
          "type": {
            "names": [
              "Address",
              "Array"
            ]
          },
          "description": "Revenue Addresses of the First Purchase",
          "name": "params.saleDistributionAddresses"
        },
        {
          "type": {
            "names": [
              "Integer",
              "Array"
            ]
          },
          "description": "Revenue Amounts of the First Purchase",
          "name": "params.saleDistributionAmounts"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "TransactionObject"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "createPack",
      "longname": "OpenerRealFvr#createPack",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000692",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Edit Pack Info\n   * @param {Object} params Parameters\n   * @param {Integer} params.packId Pack Number\n   * @param {Date} params.saleStart Time of Start of the Sale\n   * @param {String} params.serie Serie of Pack\n   * @param {String} params.packType Pack Type\n   * @param {String} params.drop Pack Drop\n   * @param {Integer} params.price Pack Price\n   * @returns {TransactionObject} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          3631,
          3972
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 118,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007166",
          "name": "editPackInfo",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Edit Pack Info",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Pack Number",
          "name": "params.packId"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Time of Start of the Sale",
          "name": "params.saleStart"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "Serie of Pack",
          "name": "params.serie"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "Pack Type",
          "name": "params.packType"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "Pack Drop",
          "name": "params.drop"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Pack Price",
          "name": "params.price"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "TransactionObject"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "editPackInfo",
      "longname": "OpenerRealFvr#editPackInfo",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000702",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Delete Pack\n   * @param {Object} params Parameters\n   * @param {Integer} params.packId Pack Id Integer\n   * @returns {TransactionObject} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          4208,
          4343
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 140,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007214",
          "name": "deletePackById",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Delete Pack",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Pack Id Integer",
          "name": "params.packId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "TransactionObject"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "deletePackById",
      "longname": "OpenerRealFvr#deletePackById",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000709",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Mint Token Id (After buying a pack)\n   * @param {Object} params Parameters\n   * @param {Integer} params.tokenId Token ID\n   * @returns {TransactionObject} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          4597,
          4714
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 151,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007238",
          "name": "mint",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Mint Token Id (After buying a pack)",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Token ID",
          "name": "params.tokenId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "TransactionObject"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "mint",
      "longname": "OpenerRealFvr#mint",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000711",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Set Purchase Token\n   * @param {Object} params Parameters\n   * @param {Address} params.address Token Address\n   * @returns {TransactionObject} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          4956,
          5125
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 162,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007262",
          "name": "setPurchaseTokenAddress",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Set Purchase Token",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "Token Address",
          "name": "params.address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "TransactionObject"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "setPurchaseTokenAddress",
      "longname": "OpenerRealFvr#setPurchaseTokenAddress",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000713",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Lock the Contract\n   * @returns {TransactionObject} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          5276,
          5366
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 173,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007286",
          "name": "lock",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Lock the Contract",
      "returns": [
        {
          "type": {
            "names": [
              "TransactionObject"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "lock",
      "longname": "OpenerRealFvr#lock",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000715",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Unlock the Contract\n   * @returns {TransactionObject} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          5519,
          5613
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 180,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007306",
          "name": "unlock",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Unlock the Contract",
      "returns": [
        {
          "type": {
            "names": [
              "TransactionObject"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "unlock",
      "longname": "OpenerRealFvr#unlock",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000716",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Set Token Price of Real Fvr in USD --> 1*10**18 as input means 1 Real Fvr = $0.000001\n   * @param {Object} params Parameters\n   * @param {Address} params.address Token Address\n   * @returns {TransactionObject} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          5922,
          6086
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 189,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007326",
          "name": "setTokenPriceInUSD",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Set Token Price of Real Fvr in USD --> 1*10**18 as input means 1 Real Fvr = $0.000001",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "Token Address",
          "name": "params.address"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "TransactionObject"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "setTokenPriceInUSD",
      "longname": "OpenerRealFvr#setTokenPriceInUSD",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000717",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Set Base Id URI\n   * @param {Object} params Parameters\n   * @param {String} params.uri URI of the Token Id Metadata JSON\n   * @returns {TransactionObject} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          6340,
          6461
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 202,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007350",
          "name": "setBaseURI",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Set Base Id URI",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "URI of the Token Id Metadata JSON",
          "name": "params.uri"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "TransactionObject"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "setBaseURI",
      "longname": "OpenerRealFvr#setBaseURI",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000719",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Set Specific Token Id URI\n   * @param {Object} params Parameters\n   * @param {Integer} params.tokenId Token ID\n   * @param {String} params.uri URI of the Token Id Metadata JSON\n   * @returns {TransactionObject} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          6771,
          6912
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 214,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007374",
          "name": "setTokenURI",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Set Specific Token Id URI",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Token ID",
          "name": "params.tokenId"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "URI of the Token Id Metadata JSON",
          "name": "params.uri"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "TransactionObject"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "setTokenURI",
      "longname": "OpenerRealFvr#setTokenURI",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000721",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Pack If Information\n   * @param {Object} params Parameters\n   * @param {Integer} params.packId\n   * @returns {Integer} packId\n   * @returns {Integer} packNumber\n   * @returns {Integer} price\n   * @returns {String} serie\n   * @returns {String} drop\n   * @returns {String} packType\n   * @returns {Address} buyer\n   * @returns {Array | Address} saleDistributionAddresses\n   * @returns {Array | Integer} saleDistributionAmounts\n   */",
      "meta": {
        "range": [
          7389,
          7914
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 233,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007401",
          "name": "getPackbyId",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get Pack If Information",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "params.packId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "packId"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "packNumber"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "price"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "serie"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "drop"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "packType"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "buyer"
        },
        {
          "type": {
            "names": [
              "Array",
              "Address"
            ]
          },
          "description": "saleDistributionAddresses"
        },
        {
          "type": {
            "names": [
              "Array",
              "Integer"
            ]
          },
          "description": "saleDistributionAmounts"
        }
      ],
      "name": "getPackbyId",
      "longname": "OpenerRealFvr#getPackbyId",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000724",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Token IDs that were already bought via a pack\n   * @returns {Array | Integer} TokensRegistered\n   */",
      "meta": {
        "range": [
          8062,
          8258
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 258,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007493",
          "name": "getRegisteredTokens",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get Token IDs that were already bought via a pack",
      "returns": [
        {
          "type": {
            "names": [
              "Array",
              "Integer"
            ]
          },
          "description": "TokensRegistered"
        }
      ],
      "name": "getRegisteredTokens",
      "longname": "OpenerRealFvr#getRegisteredTokens",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000737",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Verify if a Token was already minted\n   * @param {Object} params Parameters\n   * @param {Integer} params.tokenId\n   * @returns {Bool} wasMinted\n   */",
      "meta": {
        "range": [
          8451,
          8555
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 274,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007527",
          "name": "exists",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Verify if a Token was already minted",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "params.tokenId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Bool"
            ]
          },
          "description": "wasMinted"
        }
      ],
      "name": "exists",
      "longname": "OpenerRealFvr#exists",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000739",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Cost in Fvr Tokens of the Pack\n   * @param {Object} params Parameters\n   * @param {Integer} params.packId\n   * @returns {Integer} Price in Real Fvr Tokens\n   */",
      "meta": {
        "range": [
          8763,
          8982
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 283,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007550",
          "name": "getPackPriceInFVR",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get Cost in Fvr Tokens of the Pack",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "name": "params.packId"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "Price in Real Fvr Tokens"
        }
      ],
      "name": "getPackPriceInFVR",
      "longname": "OpenerRealFvr#getPackPriceInFVR",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000741",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Amount of Packs Created\n   * @returns {Integer} packsAmount\n   */",
      "meta": {
        "range": [
          9095,
          9230
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 296,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007584",
          "name": "getAmountOfPacksCreated",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get Amount of Packs Created",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "packsAmount"
        }
      ],
      "name": "getAmountOfPacksCreated",
      "longname": "OpenerRealFvr#getAmountOfPacksCreated",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000743",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Amount of Packs Opened\n   * @returns {Integer} packsAmount\n   */",
      "meta": {
        "range": [
          9342,
          9473
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 305,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007606",
          "name": "getAmountOfPacksOpened",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get Amount of Packs Opened",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "packsAmount"
        }
      ],
      "name": "getAmountOfPacksOpened",
      "longname": "OpenerRealFvr#getAmountOfPacksOpened",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000744",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description Get Amount of Tokens/NFTs Created (Inherent to the Packs)\n   * @returns {Integer} tokensAmount\n   */",
      "meta": {
        "range": [
          9617,
          9747
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 314,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007628",
          "name": "getAmountOfTokensCreated",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "Get Amount of Tokens/NFTs Created (Inherent to the Packs)",
      "returns": [
        {
          "type": {
            "names": [
              "Integer"
            ]
          },
          "description": "tokensAmount"
        }
      ],
      "name": "getAmountOfTokensCreated",
      "longname": "OpenerRealFvr#getAmountOfTokensCreated",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000745",
      "___s": true
    },
    {
      "comment": "/**\n   * @function\n   * @description User deploys the contract\n   * @param {Object} params Parameters\n   * @param {String} params.name Name of the Contract\n   * @param {String} params.symbol Symbol of the Contract\n   * @param {Address} params.tokenAddress token Address of the purchase Token in use\n   * @returns {Boolean} Success the Tx Object if operation was successful\n   */",
      "meta": {
        "range": [
          10132,
          10438
        ],
        "filename": "OpenerRealFvr.js",
        "lineno": 327,
        "columnno": 2,
        "path": "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr",
        "code": {
          "id": "astnode100007650",
          "name": "deploy",
          "type": "ClassProperty"
        }
      },
      "kind": "function",
      "description": "User deploys the contract",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Parameters",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "Name of the Contract",
          "name": "params.name"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "Symbol of the Contract",
          "name": "params.symbol"
        },
        {
          "type": {
            "names": [
              "Address"
            ]
          },
          "description": "token Address of the purchase Token in use",
          "name": "params.tokenAddress"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "description": "Success the Tx Object if operation was successful"
        }
      ],
      "name": "deploy",
      "longname": "OpenerRealFvr#deploy",
      "memberof": "OpenerRealFvr",
      "scope": "instance",
      "___id": "T000002R000746",
      "___s": true
    },
    {
      "kind": "package",
      "longname": "package:undefined",
      "files": [
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/Application.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/interfaces/index.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/BEPRO/Network.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20/ERC20Contract.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC20/ERC20TokenLock.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721/ERC721Collectibles.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/ERC721/ERC721Standard.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/IContract.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/PredictionMarkets/ExchangeContract.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/Staking/StakingContract.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/custom/RealFvr/OpenerRealFvr.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/models/index.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/utils/Account.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/utils/Contract.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/utils/IPFS.js",
        "/home/runner/work/bepro-docs/bepro-docs/bepro-src/src/utils/Numbers.js"
      ],
      "___id": "T000002R000882",
      "___s": true
    }
  ]
}